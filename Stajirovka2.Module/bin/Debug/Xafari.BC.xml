<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xafari.BC</name>
    </assembly>
    <members>
        <member name="F:ProductInfo.IdentityVersion">
            <summary>
            This version used in code to identity product
            </summary>
        </member>
        <member name="M:Xafari.BC.ActionExecutor.ActionExecutorViewController.DoExecute(System.Object,DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs)">
            <summary>
            Execute action executor method Execute()
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Xafari.BC.ActionExecutor.ActionExecutorViewController.GetActionCore">
            <summary>
            Specify action for action executor
            </summary>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.ActionExecutor.IActionExecutor">
            <summary>
            Allow execute specific operations with the object 
            </summary>
        </member>
        <member name="M:Xafari.BC.ActionExecutor.IActionExecutor.Execute(System.Object,DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs)">
            <summary>
            Execute action executor by action
            </summary>
            <param name="sender">action that execute processing of object data</param>
            <param name="e">event args for action</param>
        </member>
        <member name="M:Xafari.BC.ActionExecutor.IActionExecutor.DoExecute">
            <summary>
            Execute action executor by system
            </summary>
        </member>
        <member name="T:Xafari.BC.ActionExecutor.IActionExecutorProvider">
            <summary>
            Provide method to create custom action executor
            </summary>
        </member>
        <member name="M:Xafari.BC.ActionExecutor.IActionExecutorProvider.CreateActionExecutor">
            <summary>
            Create custom action executor
            </summary>
            <returns>Action executor</returns>
        </member>
        <member name="F:Xafari.BC.BulkEditv2.BulkEditObjectv2DetailViewController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.BulkEditObjectv2DetailViewController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.BulkEditObjectv2DetailViewController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Xafari.BC.BulkEditv2.BulkEditObjectv2DetailViewController.CommitBulkEditChanges">
            <summary>
            CommitBulkEditChanges action.
            </summary>
        </member>
        <member name="T:Xafari.BC.BulkEditv2.NonFixedTypeBulkEditHelper">
            <summary>
            Helper for bulk edit for non-fixed type
            </summary>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.NonFixedTypeBulkEditHelper.CreatePropertyDescriptor(DevExpress.ExpressApp.Model.IModelClass,DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
            Создание дескриптора из модели
            </summary>
            <param name="modelClass"></param>
            <param name="memberInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.NonFixedTypeBulkEditHelper.CreatePropertyDescriptor(Xafari.BC.DynamicProperties.IDynamicProperty)">
            <summary>
            Создание дескриптора на основе денамического свойства
            </summary>
            <param name="dynamicProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.NonFixedTypeBulkEditHelper.ChangeFieldsSelectMode(Xafari.BC.BulkEdit.FieldsSelectMode)">
            <summary>
            Change field select mode
            </summary>
            <param name="fieldsSelectMode"></param>
        </member>
        <member name="T:Xafari.BC.BulkEditv2.BulkEditObjectv2">
            <summary>
            Non persistent type for bulk edit
            </summary>
        </member>
        <member name="T:Xafari.BC.BulkEditv2.BulkEditHelperBase">
            <summary>
            Base helper for bulk edit
            </summary>
        </member>
        <member name="E:Xafari.BC.BulkEditv2.BulkEditHelperBase.SelectedObjectProcessed">
            <summary>
            Событие возникает после обработки каждого объекта в режиме групповой правки.
            </summary>
        </member>
        <member name="E:Xafari.BC.BulkEditv2.BulkEditHelperBase.CustomApply">
            <summary>
            Событие по применению своего механизма группового редактирования.
            </summary>
        </member>
        <member name="P:Xafari.BC.BulkEditv2.BulkEditHelperBase.FastRowsSelection">
            <summary>
            Режим выделения строк после обновления значений при групповом редактировании.
            Если установлено false, выделение будет происходить с помощью стандартных механизмов GridView, но более медленно.
            Если установить true, будет использоваться хэш ранее выделенных объектов. Работает быстрее, но могут возникнуть визуальные ошибки при выделении. Экспериментальный режим.
            </summary>
        </member>
        <member name="P:Xafari.BC.BulkEditv2.BulkEditHelperBase.SelectedObjects">
            <summary>
            Selected objects
            </summary>
        </member>
        <member name="P:Xafari.BC.BulkEditv2.BulkEditHelperBase.ListViewObjectsToProcess">
            <summary>
            ListView objects to process
            </summary>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.BulkEditHelperBase.RefreshData(System.Boolean)">
            <summary>
            Refresh edit config
            </summary>
            <param name="forceRefresh"></param>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.BulkEditHelperBase.RefreshBulkEditObjectCore(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
            Refresh bulk edit object
            Пероедаём сюда ObjectSpace, т.к. объект может создаваться до создания DetailView
            </summary>
            <param name="os"></param>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.BulkEditHelperBase.CommitChangesCore">
            <summary>
            Commit bulk edit changes
            </summary>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.BulkEditHelperBase.CalculateType(System.Type)">
            <summary>
            Converts regular type to nullable one
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.BulkEditHelperBase.ConvertEnumToBool(System.Nullable{DevExpress.Utils.DefaultBoolean})">
            <summary>
            Convert DefaultBoolean? value to bool
            </summary>
            <param name="defaultBoolean"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.BulkEditHelperBase.CreateDetailView">
            <summary>
            Create DetailView for Bulk edit
            </summary>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.BulkEditHelperBase.CreateDetailViewCore(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
            DetailView creation logic 
            </summary>
            <param name="os"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.BulkEditv2.FixedTypeBulkEditHelper">
            <summary>
            Helper for bulk edit with fixed type
            </summary>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.FixedTypeBulkEditHelper.RecalcPropertyDescriptors">
            <summary>
            Пересчет дескрипторов свойств
            </summary>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.FixedTypeBulkEditHelper.GetDisplayName(System.String)">
            <summary>
            Определение отображаемого имени свойства. Считывает значение из модели приложения.
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.FixedTypeBulkEditHelper.GetAllowEdit(System.String)">
            <summary>
            Метод для проверки возможности редактирования свойства
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEditv2.FixedTypeBulkEditHelper.GetAttributes(System.String)">
            <summary>
            Определение списка аттрибутов для общего свойства.
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.BulkEditv2.BulkEditDynamicType">
            <summary>
            Dynamic type for Bulk edit object
            </summary>
        </member>
        <member name="T:Xafari.BC.BulkEditv2.PropertyValuev2">
            <summary>
            PropertyValue with INotifyPropertyChanged
            </summary>
        </member>
        <member name="M:Xafari.BC.Controllers.AliveTypesViewController.FindDetailViewId(System.Object,DevExpress.ExpressApp.View)">
            <summary>
            Custom realization of standard Application FindDetailViewId(object obj, View sourceView).
            </summary>
            <param name="obj">Object.</param>
            <param name="sourceView">Source view.</param>
            <returns>View Id.</returns>
        </member>
        <member name="F:Xafari.BC.Controllers.SharedObjectLogicController.AvailableSharedObjectsFilterKey">
            <summary>
            The filter key name in the <see cref="P:DevExpress.ExpressApp.ListView.CollectionSource"/> criteria list.
            </summary>
        </member>
        <member name="M:Xafari.BC.Controllers.SharedObjectLogicController.SetAvailableSharedObjectsFilter">
            <summary>
            Activates the <see cref="P:Xafari.BC.DC.Logics.SharedObjectLogics.AvailableSharedObjectsFilter"/> filter. 
            </summary>
        </member>
        <member name="M:Xafari.BC.Controllers.SharedObjectLogicController.ResetAvailableSharedObjectsFilter">
            <summary>
            Deactivates the <see cref="P:Xafari.BC.DC.Logics.SharedObjectLogics.AvailableSharedObjectsFilter"/> filter. 
            </summary>
        </member>
        <member name="F:Xafari.BC.Controllers.DeclareActionsActionWindowController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.Controllers.DeclareActionsActionWindowController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.Controllers.DeclareActionsActionWindowController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Xafari.BC.Controllers.ChangeCategoryController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.Controllers.ChangeCategoryController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.Controllers.ChangeCategoryController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Xafari.BC.Controllers.ObjectsCreationNonAggregatedCollectionViewController">
            <summary>
            Disable objects creation and deletion for non aggregated collections.
            </summary>
        </member>
        <member name="F:Xafari.BC.Controllers.ObjectsCreationNonAggregatedCollectionViewController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.Controllers.ObjectsCreationNonAggregatedCollectionViewController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.Controllers.ObjectsCreationNonAggregatedCollectionViewController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Xafari.BC.Controllers.StatusFilterViewController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.Controllers.StatusFilterViewController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.Controllers.StatusFilterViewController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Xafari.BC.Controllers.StatusViewController.SetItemEnabled(DevExpress.ExpressApp.Utils.BoolList,Xafari.BC.StatusTypes)">
            <summary>
            Устанавливает значение <i>enabled</i> в зависимости от статусов выбранных объектов.
            </summary>
            <param name="enabled"></param>
            <param name="status"></param>
            <remarks>
            Устанвливает <b>false</b>, если среди выбранных объектов есть хотя бы один со статусом <i>status</i>.
            </remarks>
        </member>
        <member name="F:Xafari.BC.Controllers.StatusViewController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.Controllers.StatusViewController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.Controllers.StatusViewController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Xafari.BC.Data.IHierarchyObjectSetHolder">
            <summary>
            Interface included XPObjectSetObject
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.XPObjectSetHelper.KeyPropertyName">
            <summary>
            Selectable type Key property name
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.XPObjectSetHelper.IsHierarchy">
            <summary>
            Determines whether the selected objects type is IHierarchyNode descendant and Hierarchy object set mode is used
            </summary>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.GetObjectSetItemKeyValue(Xafari.BC.Data.XPObjectSetItem)">
            <summary>
            Returns key value for object set item
            </summary>
            <param name="objectSetItem">Object set item which key value is returned</param>
            <returns>Returns key value for object set item</returns>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.GetObjectSetItemKeyPropertyName(Xafari.BC.Data.XPObjectSetItem)">
            <summary>
            Returns object set item key property type name
            </summary>
            <param name="objectSetItem">Object set item which key proprty name is returned</param>
            <returns>Retuns key property name</returns>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.GetIncludedItems">
            <summary>
            Included items used for hierarchy object set 
            </summary>
            <returns>Returns included items</returns>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.OptimizeIncludedItems">
            <summary>
            Optimize Included items used in hierarchy object set
            </summary>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.IsObjectIncluded(System.Object)">
            <summary>
            Check whether the object is included in selection
            </summary>
            <param name="value">Object to be checked</param>
            <returns>Returns true if object is included and else if not</returns>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.IncludeObject(Xafari.BC.Data.Included,Xafari.BC.Data.IncludedMode,System.Object)">
            <summary>
            Included object to IncludedObjects collection without adding to database
            </summary>
            <param name="included">Set whether current object is included</param>
            <param name="allowRecursiveNodeChecking">Set include mode for object</param>
            <param name="Object">set object</param>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.GetCriteriaFromIncludedItems(System.String)">
            <summary>
            Returns criteria beased on included items
            </summary>
            <param name="propertyName">Selected objects type key property name. For Hierarchy object set it useless</param>
            <returns>Returns criteria operator for selected objects type</returns>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.GetObjectSetItemsCount">
            <summary>
            Invoke this method to get included items count
            </summary>
            <returns>Returns count of IncludedItems</returns>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.GetIncludedObjectsCount">
            <summary>
            Returns included objects count.
            </summary>
            <returns>Returns count of included objects</returns>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.SetIncludedItems(System.Collections.Generic.List{Xafari.BC.Data.XPObjectSetItem})">
            <summary>
            Set new included items collection, but it doesn't commit to database
            </summary>
            <param name="items">New Included items collection</param>
        </member>
        <member name="M:Xafari.BC.Data.XPObjectSetHelper.CommitIncludedItems(DevExpress.Xpo.Session)">
            <summary>
            Commit included items to database
            </summary>
            <param name="session">Current session</param>
        </member>
        <member name="T:Xafari.BC.Data.XPObjectSet">
            <summary>
            For internal use.
            Persistent storage for object sets.
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.XPObjectSet.GlobalContext">
            <summary>
            Global context value.
            </summary>
            <remarks>
            Filled from <see cref="P:Xafari.BC.Data.ObjectSet.GlobalContext"/>.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Data.XPObjectSet.CurrentUserName">
            <summary>
            Current user context.
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.XPObjectSet.LocalContext">
            <summary>
            Local context value.
            </summary>
            <summary>
            Filled from <see cref="P:Xafari.BC.Data.ObjectSet.LocalContext"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.XPObjectSet.OwnerId">
            <summary>
            Persistent owner object context.
            </summary>
            <summary>
            Filled from <see cref="P:Xafari.BC.Data.ObjectSet.OwnerId"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.XPObjectSet.HierarchyName">
            <summary>
            Hieararchy context.
            Used for hierarchy object set.
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.XPObjectSet.IsHierarchyObjectSet">
            <summary>
            Specifies the hirerachy object set.
            </summary>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.GetGlobalContext">
            <summary>
            Calculate current global conetext value.
            </summary>
            <summary>
            Concatanate all values from <see cref="P:Xafari.BC.XafariBCModule.ObjectSetGlobalContexts"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.GetSelectionObjects">
            <summary>
            Gets a collection of objects sample
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.SetSelectedObject(System.Collections.IList)">
            <summary>
            Sets a collection of objects sample
            </summary>
            <param name="selectedObject">List of objects</param>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.GetObjectSetObjectCount">
            <summary>
            Returns the number of objects of the sample by means of a direct request to the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.GetCriteria(System.String)">
            <summary>
            Returns the criteria that selects all objects whose property value is contained in the sample
            </summary>
            <param name="propertyName">Name of the property whose value searches the sample in</param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.Delete">
            <summary>
            Deletes ObjectSet from the application database.
            </summary>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.ClearItems">
            <summary>
            Removes all objects from the sample
            </summary>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.AddItems(System.Object[])">
            <summary>
            Adds one or more objects in the collection of samples
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.DeleteItems(System.Object[])">
            <summary>
            Removes one or more objects from the sample
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Xafari.BC.Data.ObjectSet.XPObjectSet">
            <summary>
            Corresponding object in the database
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.ObjectSet.GlobalContext">
            <summary>
            Global context assembly on the basis module connection
            </summary>
            <remarks>
            Global context is filled from current value of <see cref="P:Xafari.BC.XafariBCModule.ObjectSetGlobalContexts"/>.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Data.ObjectSet.LocalContext">
            <summary>
            The local context is taken from the attribute LocalContextAttribute. If the attribute is not specified property name is taken object provides this instance ObjectSet
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.ObjectSet.OwnerId">
            <summary>
            Segment context, most often used for the separation of samples on instances of objects providing this instance ObjectSet
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.ObjectSet.SelectionType">
            <summary>
            Type of sample
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.ObjectSet.Criteria">
            <summary>
            A criterion based on which objects are selected sample in case of using such a sample MultipleSelectionType.Criteria
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.ObjectSet.KeyPropertyTypeName">
            <summary>
            The enumeration value obtained based on the type of the key field selectable items
            </summary>
        </member>
        <member name="P:Xafari.BC.Data.ObjectSet.ObjectsSelectableType">
            <summary>
            Type of sampling sites
            </summary>
        </member>
        <member name="M:Xafari.BC.Data.ObjectSet.Assign(Xafari.BC.Data.ObjectSet)">
            <summary>
            Sets the current object's properties to the specified <see cref="T:ObjectSet"/> object's property values, respectively.
            </summary>
            <param name="source">A <see cref="T:ObjectSet"/> object whose properties serve as a source for the corresponding properties of the current <see cref="T:ObjectSet"/> object.</param>
        </member>
        <member name="T:Xafari.BC.DC.WeakListPropertyCollectionSource">
            <summary>
            Implements additional logic to support untyped WeakLists.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.WeakListPropertyCollectionSource.IsObjectFitForCollection(System.Object)">
            <summary>
            Tries to determine whether the specified object sitisfies the weak list criteria.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.DC.XPWeakAssociationList">
            <summary>
            Analogue of <see cref="T:DevExpress.Xpo.Helpers.XPAssociationList"/> for weak lists.
            By default uses by <see cref="M:Xafari.BC.DC.DomainLogics.Main`1.GetWeakList``1(System.String)"/> methods.
            </summary>
        </member>
        <member name="T:Xafari.BC.DC.XPWeakManyToManyAliasList2">
            <summary>
            For internal use.
            Implements many to many nonpersistent collections.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.XPWeakManyToManyAliasList2.Owner">
            <summary>
            Owner of this list.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.XPWeakManyToManyAliasList2.AliasedList">
            <summary>
            Persistent collection of intermediate objects.
            </summary>
        </member>
        <member name="T:Xafari.BC.DC.DomainLogics">
            <summary>
            Provides base class to implement domain logics.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogics.IsSecuredObjectSpaceProviderUsed">
            <summary>
            Have to be set to true if application uses SecuredObjectSpaceProvider.
            </summary>
            <remarks>
            This property is used to determine when client side logic is executed.
            The property is initialized in Xafari.BC.XafariBCModule.Setup(ApplicationModulesManager) method.
            </remarks>
        </member>
        <member name="T:Xafari.BC.DC.DomainLogics.DomainLogicBase`1">
            <summary>
            General base class for domain components logic.
            </summary>
            <typeparam name="T">Domain component type that will realize current logic.</typeparam>
            <summary>
            Do not use this class directly. Just use derived classes <see cref="T:Xafari.BC.DC.DomainLogics.Main`1"/> and <see cref="T:Xafari.BC.DC.DomainLogics.Events`1"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.FindDomainLogic``1">
            <summary>
            Returns specified domain logic instance.
            </summary>
            <typeparam name="TDomainLogic"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.Instance">
            <summary>
            Get DC object.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.ObjectSpace">
            <summary>
            Returns <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> for current object.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.DataAccessor">
            <summary>
            Returns <see cref="T:Xafari.BC.DataAccessorService.DataAccessor"/> for current object.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.Session">
            <summary>
            Current session in the case where the object implements <see cref="T:DevExpress.Xpo.Helpers.ISessionProvider"/> otherwise null.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.TypeInfo">
            <summary>
            Returns <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> for current object.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.InstanceId">
            <summary>
            Returns current object Id.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.IsLoading">
            <summary>
            Returns current state <see cref="P:DevExpress.Xpo.PersistentBase.IsLoading"/> for <see cref="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.Instance"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.IsDeleted">
            <summary>
            Returns current state <see cref="P:DevExpress.Xpo.PersistentBase.IsDeleted"/> for <see cref="P:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.Instance"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.IsSafeState(`0)">
            <summary>
            Indicates the domain logic is executed on client side.
            </summary>
            <param name="instance">A domain component instance.</param>
            <remarks>
            <remarks><see href="http://dennisgaravsky.blogspot.com.by/2013/03/beware-of-sessiondatalayer-in-middle.html"/></remarks>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.IsSafeState">
            <summary>
            Indicates the domain logic is executed on client side.
            </summary>
            <remarks>
            <remarks><see href="http://dennisgaravsky.blogspot.com.by/2013/03/beware-of-sessiondatalayer-in-middle.html"/></remarks>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.RaisePropertyChanged(System.String)">
            <summary>
            Raise <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event for specified <paramref name="propertyName"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.DomainLogicBase`1.RaisePropertyChanged(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Raise <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event for specified <paramref name="property"/>.
            </summary>
        </member>
        <member name="T:Xafari.BC.DC.DomainLogics.Main`1">
            <summary>
            Base class for all logics of domain components excluded events.
            Use <see cref="T:Xafari.BC.DC.DomainLogics.Events`1"/> base class to implement logics on events.
            </summary>
            <typeparam name="T">Domain component type that will realize current logic.</typeparam>
            <summary>
            Additionally, implements use cases that operate with weak lists.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Main`1.GetWeakList``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})">
            <summary>
            Creates <see cref="T:Xafari.DC.XPWeakCollection`1"/> object for member specified as <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <typeparam name="TDetails"></typeparam>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Main`1.GetWeakList``1(System.String)">
            <summary>
            Creates <see cref="T:Xafari.DC.XPWeakCollection`1"/> object for <paramref name="memberName"/>.
            </summary>
            <typeparam name="TDetails"></typeparam>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Main`1.GetWeakList``1(DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
            Creates <see cref="T:Xafari.DC.XPWeakCollection`1"/> object for <paramref name="memberInfo"/>.
            </summary>
            <typeparam name="TDetails"></typeparam>
            <param name="memberInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Main`1.GetListValueByTerm``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})">
            <summary>
            Get list of values for member implemented by term.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <param name="property">Term specified by this property.</param>
            <returns>List of objects.</returns>
            <remarks>
            Used if term name the as property name.
            Lambda expression must be of the form like 'x => x.Member' (access to a member).
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Main`1.GetListValueByTerm``1(System.String)">
            <summary>
            Get list of values from member decorated with specified term attribute.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <param name="termName">Term attribute name.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Main`1.GetValueByTerm``1(System.String)">
            <summary>
            Get value from member decorated with specified term attribute.
            </summary>
            <typeparam name="TValue">Member value type.</typeparam>
            <param name="termName">Term attribute name.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Main`1.GetValueByTerm``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Get value for member implemented by term.
            </summary>
            <typeparam name="TValue">Member value type.</typeparam>
            <param name="property">Term specified by this property.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Main`1.SetValueByTerm``1(System.String,``0)">
            <summary>
            Set value to member with specified term attribbute.
            </summary>
            <typeparam name="TValue">New value type.</typeparam>
            <param name="termName">Term name.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Main`1.SetValueByTerm``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Set value to member with specified term attribbute.
            </summary>
            <typeparam name="TValue">New value type.</typeparam>
            <param name="property">Term specified by this property.</param>
            <param name="value">New value.</param>
        </member>
        <member name="T:Xafari.BC.DC.DomainLogics.Events`1">
            <summary>
            Base class for domain components logic on events.
            Provides multiple handlers for <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.AfterChange"/> and <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.BeforeChange"/> events.
            </summary>
            <typeparam name="T">Domain component type that will realize current logic.</typeparam>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.RaiseAfterChange(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.RaiseAfterChange(System.String)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.AfterChange(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.String})">
            <summary>
            Sets <paramref name="handler"/> to event AfterChange for <paramref name="property"/>.
            </summary>
            <param name="property">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
            <remarks>
            To calculate property uses <see cref="M:Xafari.Utils.MemberHelper.MemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})"/> method.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.AfterChange(System.String,System.Action{System.String})">
            <summary>
            Sets <paramref name="handler"/> to event AfterChange for <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName"></param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.BeforeChange">
            <summary>
            Override this method implement BeforeChange_Property handlers.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.RaiseBeforeChange``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.RaiseBeforeChange``1(`0,System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Raises event BeforeChange for all logics.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="instance"></param>
            <param name="property"></param>
            <param name="newValue"></param>
            <remarks>
            To use this method be sure than base object for Domain Component is IDomainLogicContainer, for example <see cref="T:Xafari.BC.DC.XafariDCBaseObject"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.RaiseBeforeChange``1(System.String,``0)">
            <summary>
            For internal use.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="propertyName"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.RaiseBeforeChange``1(`0,System.String,``0)">
            <summary>
            Raises event BeforeChange for all logics.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="instance"></param>
            <param name="propertyName"></param>
            <param name="newValue"></param>
            <remarks>
            To use this method be sure than base object for Domain Component is IDomainLogicContainer, for example <see cref="T:Xafari.BC.DC.XafariDCBaseObject"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.BeforeChange``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{System.String,``0})">
            <summary>
            Sets <paramref name="handler"/> to event BeforeChange for <paramref name="property"/>.
            </summary>
            <param name="property">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
            <remarks>
            To calculate property uses <see cref="M:Xafari.Utils.MemberHelper.MemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})"/> method.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.BeforeChange``1(System.String,System.Action{System.String,``0})">
            <summary>
            Sets <paramref name="handler"/> to event BeforeChange for <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.SafeOn(System.Action)">
            <summary>
            Use this method to execute <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnLoaded(`0)"/>, <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaving(`0)"/> and <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaved(`0)"/> logic methods 
            instead of direct method implementig to avoid double call when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.SafeOn(`0,DevExpress.ExpressApp.IObjectSpace,System.Action{`0,DevExpress.ExpressApp.IObjectSpace})">
            <summary>
            Use this method to execute <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnLoaded(`0)"/>, <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaving(`0)"/> and <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaved(`0)"/> logic methods 
            instead of direct method implementig to avoid double call when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.SafeOn(`0,System.Action{`0})">
            <summary>
            Use this method to execute <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnLoaded(`0)"/>, <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaving(`0)"/> and <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaved(`0)"/> logic methods 
            instead of direct method implementig to avoid double call when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.OnLoaded(`0)">
            <summary>
            Use <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnLoaded"/> method instead to avoid double call of the method when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaving(`0)">
            <summary>
            Use <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaving"/> method instead to avoid double call of the method when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaved(`0)">
            <summary>
            Use <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaved"/> method instead to avoid double call of the method when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.OnLoaded">
            <summary>
            Executed after an object is loaded from a data store. Use this method to perform actions after loading an object's state from a data store.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaving">
            <summary>
            Executed before an object is saved. Use this method to perform actions before saving an object's state to a data store.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.OnSaved">
            <summary>
            Executed before an object is saved. Use this method to perform actions before saving an object's state to a data store.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.OnPropertyChanged">
             <summary>
             Override this method to register event handlers with semantics of AfterChange_Property handler.
             </summary>
             <remarks>
             Use the <see cref="M:Xafari.BC.DC.DomainLogics.Events`1.PropertyChanged(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.String})"/> method to register custom event handlers.
             <para>Example:</para>
             <code>
             protected override void OnPropertyChanged()
             {
             	base.OnPropertyChanged();
             	PropertyChanged(x => x.ValueType, () => { Instance.PropertyType = Instance.ValueType; });
             	PropertyChanged(x => x.IsRequired, OnIsRequiredChanged);
             }
            
             private void OnIsRequiredChanged()
             {
             	if (Instance.LastStartTime == null)
             		Instance.ImageName = Instance.IsRequired ? "ExclamationRequired_Icon" : "Exclamation_Icon";
             }
             </code></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.InternalRaisePropertyChanged(System.String)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.PropertyChanged(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.String})">
            <summary>
            Sets <paramref name="handler"/> to event AfterChange for <paramref name="property"/>.
            </summary>
            <param name="property">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
            <remarks>
            To calculate property uses <see cref="M:Xafari.Utils.MemberHelper.MemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})"/> method.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.PropertyChanged(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action)">
            <summary>
            Sets <paramref name="handler"/> to event AfterChange for <paramref name="property"/>.
            </summary>
            <param name="property">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
            <remarks>
            To calculate property uses <see cref="M:Xafari.Utils.MemberHelper.MemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})"/> method.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.PropertyChanged(System.String,System.Action)">
            <summary>
            Sets <paramref name="handler"/> to event AfterChange for <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName"></param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.PropertyChanged(System.String,System.Action{System.String})">
            <summary>
            Sets <paramref name="handler"/> to event AfterChange for <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName"></param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.OnPropertyChanging">
            <summary>
            Override this method implement BeforeChange_Property handlers.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.RaisePropertyChanging``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Raises event BeforeChange for all logics.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="property"></param>
            <param name="newValue"></param>
            <remarks>
            To use this method be sure than base object for Domain Component is <see cref="T:Xafari.BC.DC.IDomainLogicContainer"/>, for example <see cref="T:Xafari.BC.DC.XafariDCBaseObject"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.RaisePropertyChanging``1(System.String,``0)">
            <summary>
            Raises event BeforeChange for all logics.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="propertyName"></param>
            <param name="newValue"></param>
            <remarks>
            To use this method be sure than base object for Domain Component is <see cref="T:Xafari.BC.DC.IDomainLogicContainer"/>, for example <see cref="T:Xafari.BC.DC.XafariDCBaseObject"/>.
            Otherwise, event handler may be called any times.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.PropertyChanging``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{System.String,``0})">
            <summary>
            Sets <paramref name="handler"/> to event BeforeChange for <paramref name="property"/>.
            </summary>
            <param name="property">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
            <remarks>
            To calculate property uses <see cref="M:Xafari.Utils.MemberHelper.MemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})"/> method.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.PropertyChanging``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{``0})">
            <summary>
            Sets <paramref name="handler"/> to event BeforeChange for <paramref name="property"/>.
            </summary>
            <param name="property">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
            <remarks>
            To calculate property uses <see cref="M:Xafari.Utils.MemberHelper.MemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})"/> method.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.PropertyChanging``1(System.String,System.Action{``0})">
            <summary>
            Sets <paramref name="handler"/> to event BeforeChange for <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogics.Events`1.PropertyChanging``1(System.String,System.Action{System.String,``0})">
            <summary>
            Sets <paramref name="handler"/> to event BeforeChange for <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.DC.IDomainLogicContainer">
            <summary>
            Provides methods to collect domain logic objects.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.IDomainLogicContainer.RegisterDomainLogic(System.Object)">
            <summary>
            Regsiter domain logic object.
            </summary>
            <param name="logic"></param>
        </member>
        <member name="P:Xafari.BC.DC.IDomainLogicContainer.Logics">
            <summary>
            Gets list of domain logic objects.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.IDomainLogicContainer.FindLogic``1">
            <summary>
            Returns specified domain logic instance.
            </summary>
            <typeparam name="TDomainLogic"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.IDomainLogicContainer.RaisePropertyChanging``1(Xafari.BC.DC.IDomainLogicsEvents,System.String,``0)">
            <summary>
            Raise PropertyChanging event just single time.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="sender"></param>
            <param name="propertyName"></param>
            <param name="newValue"></param>
            <remarks>
            Register first sender as provider of event raiser and ignores all calls from other senders.
            </remarks>
        </member>
        <member name="T:Xafari.BC.DC.DomainLogicBase`1">
            <summary>
            Base class for domain components logic.
            </summary>
            <typeparam name="T">Domain component type that will realize current logic.</typeparam>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogicBase`1.Instance">
            <summary>
            Get DC object.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogicBase`1.ObjectSpace">
            <summary>
            Returns <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> for current object.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogicBase`1.Session">
            <summary>
            Current session in the case where the object implements <see cref="T:DevExpress.Xpo.Helpers.ISessionProvider"/> otherwise null.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogicBase`1.TypeInfo">
            <summary>
            Returns <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> for current object.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogicBase`1.InstanceId">
            <summary>
            Returns current object Id.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase`1.GetWeakList``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})">
            <summary>
            Creates <see cref="T:Xafari.DC.XPWeakCollection`1"/> object for member specified as <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <typeparam name="TDetails"></typeparam>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase`1.GetWeakList``1(System.String)">
            <summary>
            Creates <see cref="T:Xafari.DC.XPWeakCollection`1"/> object for <paramref name="memberName"/>.
            </summary>
            <typeparam name="TDetails"></typeparam>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase`1.GetWeakList``1(DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
            Creates <see cref="T:Xafari.DC.XPWeakCollection`1"/> object for <paramref name="memberInfo"/>.
            </summary>
            <typeparam name="TDetails"></typeparam>
            <param name="memberInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase`1.GetListValueByTerm``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})">
            <summary>
            Get list of values for member implemented by term.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <param name="property">Term specified by this property.</param>
            <returns>List of objects.</returns>
            <remarks>
            Used if term name the as property name.
            Lambda expression must be of the form like 'x => x.Member' (access to a member).
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase`1.GetListValueByTerm``1(System.String)">
            <summary>
            Get list of values from member decorated with specified term attribute.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <param name="termName">Term attribute name.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase`1.SafeOn(System.Action)">
            <summary>
            Use this method to execute <see cref="!:OnLoaded"/>, <see cref="!:OnSaving"/> and <see cref="!:OnSaved"/> logic methods 
            instead of direct method implementig to avoid double call when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase`1.SafeOn(`0,DevExpress.ExpressApp.IObjectSpace,System.Action{`0,DevExpress.ExpressApp.IObjectSpace})">
            <summary>
            Use this method to execute <see cref="!:OnLoaded"/>, <see cref="!:OnSaving"/> and <see cref="!:OnSaved"/> logic methods 
            instead of direct method implementig to avoid double call when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase`1.SafeOn(`0,System.Action{`0})">
            <summary>
            Use this method to execute <see cref="!:OnLoaded"/>, <see cref="!:OnSaving"/> and <see cref="!:OnSaved"/> logic methods 
            instead of direct method implementig to avoid double call when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogicBase`1.IsLoading">
            <summary>
            Returns current state <see cref="P:DevExpress.Xpo.PersistentBase.IsLoading"/> for <see cref="P:Xafari.BC.DC.DomainLogicBase`1.Instance"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.DomainLogicBase`1.IsDeleted">
            <summary>
            Returns current state <see cref="P:DevExpress.Xpo.PersistentBase.IsDeleted"/> for <see cref="P:Xafari.BC.DC.DomainLogicBase`1.Instance"/>.
            </summary>
        </member>
        <member name="T:Xafari.BC.DC.DomainLogicBase2`1">
            <summary>
            Base class for domain components logic provides multiple handlers for AfterChange and BeforeChange events.
            </summary>
            <typeparam name="T">Domain component type that will realize current logic.</typeparam>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.OnLoaded">
            <summary>
            Use <see cref="!:DomainLogicBase&lt;T&gt;._OnLoaded"/> method instead to avoid double call of the method when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.OnSaving">
            <summary>
            Use <see cref="!:DomainLogicBase&lt;T&gt;._OnSaving"/> method instead to avoid double call of the method when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.OnSaved">
            <summary>
            Use <see cref="!:DomainLogicBase&lt;T&gt;._OnSaved"/> method instead to avoid double call of the method when <see cref="T:DevExpress.ExpressApp.Security.ClientServer.SecuredObjectSpaceProvider"/> is used.
            </summary>
            <remarks><see href="http://www.devexpress.com/Support/Center/Question/Details/B231282"/></remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1._OnLoaded">
            <summary>
            Executed after an object is loaded from a data store. Use this method to perform actions after loading an object's state from a data store.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1._OnSaving">
            <summary>
            Executed before an object is saved. Use this method to perform actions before saving an object's state to a data store.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1._OnSaved">
            <summary>
            Executed before an object is saved. Use this method to perform actions before saving an object's state to a data store.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.AfterChange">
            <summary>
            Override this method implement AfterChange_Property handlers.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.RaiseAfterChange(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.RaiseAfterChange(System.String)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.AfterChange(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.String})">
            <summary>
            Sets <paramref name="handler"/> to event AfterChange for <paramref name="property"/>.
            </summary>
            <param name="property">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
            <remarks>
            To calculate property uses <see cref="M:Xafari.Utils.MemberHelper.MemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})"/> method.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.AfterChange(System.String,System.Action{System.String})">
            <summary>
            Sets <paramref name="handler"/> to event AfterChange for <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName"></param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.BeforeChange">
            <summary>
            Override this method implement BeforeChange_Property handlers.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.RaiseBeforeChange``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.RaiseBeforeChange``1(`0,System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Raises event BeforeChange for all logics.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="instance"></param>
            <param name="property"></param>
            <param name="newValue"></param>
            <remarks>
            To use this method be sure than base object for Domain Component is IDomainLogicContainer, for example <see cref="T:Xafari.BC.DC.XafariDCBaseObject"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.RaiseBeforeChange``1(System.String,``0)">
            <summary>
            For internal use.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="propertyName"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.RaiseBeforeChange``1(`0,System.String,``0)">
            <summary>
            Raises event BeforeChange for all logics.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="instance"></param>
            <param name="propertyName"></param>
            <param name="newValue"></param>
            <remarks>
            To use this method be sure than base object for Domain Component is IDomainLogicContainer, for example <see cref="T:Xafari.BC.DC.XafariDCBaseObject"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.BeforeChange``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{System.String,``0})">
            <summary>
            Sets <paramref name="handler"/> to event BeforeChange for <paramref name="property"/>.
            </summary>
            <param name="property">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
            <remarks>
            To calculate property uses <see cref="M:Xafari.Utils.MemberHelper.MemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})"/> method.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.DomainLogicBase2`1.BeforeChange``1(System.String,System.Action{System.String,``0})">
            <summary>
            Sets <paramref name="handler"/> to event BeforeChange for <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">Expression to calculate property.</param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.DC.WeakListCustomizeTypesInfoHelper">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Xafari.BC.DC.WeakListCustomizeTypesInfoHelper.CustomizeTypesInfoBeforeGenerateDCAssembly(System.Boolean)">
            <summary>
            Call this method on <see cref="E:DevExpress.ExpressApp.ApplicationModulesManager.CustomizeTypesInfo"/> event.
            </summary>
            <param name="throwExceptionForExst"></param>
        </member>
        <member name="M:Xafari.BC.DC.WeakListCustomizeTypesInfoHelper.CustomizeTypesInfoAfterGenerateDCAssembly(System.Boolean)">
            <summary>
            Call this method on <see cref="M:Xafari.BC.XafariModuleBase.OnXafTypesInfoSetupComplete(DevExpress.ExpressApp.DC.ITypesInfo)"/> when DCAssembly is generated.
            </summary>
            <param name="throwExceptionForExst"></param>
        </member>
        <member name="M:Xafari.BC.DC.WeakListCustomizeTypesInfoHelper.UpdateWeakListAttribute(DevExpress.ExpressApp.DC.ITypeInfo,System.Boolean)">
            <summary>
            modify metadata.
            Process <see cref="T:Xafari.DC.WeakListAttribute"/> for list members.
            Set aggregated info for nonpersistent associations.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Xafari.BC.DC.WeakListCustomizeTypesInfoHelper.UpdateIMemberInfos_IsAssociation(DevExpress.ExpressApp.DC.ITypeInfo,System.Boolean)">
            <summary>
            Modify metadata to set IsAssociation for weak list members.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Xafari.BC.DC.WeakListCustomizeTypesInfoHelper.ConvertFrom``1(System.String)">
            <summary>
            Converts ManyToMany intermediate data from <typeparamref name="T"/> to <see cref="T:Xafari.DC.GuidWeakManyToMany"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="relationName">Specifies relation name to select data.</param>
        </member>
        <member name="T:Xafari.BC.DC.ISharedObject">
            <summary>
            Intended to the sharing support in entities.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.ISharedObject.UserIsOwner">
            <summary>
            Determines wheter the current user is record's owner.
            </summary>
        </member>
        <member name="T:Xafari.BC.DC.Logics.SharedObjectLogics">
            <summary>
            DomainLogic of <see cref="T:Xafari.BC.DC.ISharedObject"/>
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.Logics.SharedObjectLogics.AvailableSharedObjectsFilter">
            <summary>
            Filter can be used to get all shared records. The owner gets its own records always.
            </summary>
        </member>
        <member name="T:Xafari.BC.DC.SystemObjectsService">
            <summary>
            Service provides additional criteria for queries objects <see cref="T:Xafari.BC.DC.ISystemObject"/>.
            </summary>
            <remarks>
            If service is active <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> <b>IsSystem = false</b> is added.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.TypesInfoExtensions.RegisterEntity``1(DevExpress.ExpressApp.DC.ITypesInfo,System.String,System.Type,System.String)">
            <summary>
            Registers a specific Domain Component in the application if <typeparamref name="T"/> is persistent.
            Registers a specific Domain Component as entity factory.
            </summary>
            <typeparam name="T">A <see cref="T:System.Type"/> representing a Domain Component.</typeparam>
            <param name="typesInfo"><see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> provider.</param>
            <param name="entityName">Specifies entity table name.</param>
            <param name="ns">Specifies namespace for entity table</param>
            <param name="baseType">A <see cref="T:System.Type"/> object representing a type used as the generated class' ancestor.</param>
            <remarks>
            Check <typeparamref name="T"/> is persistent type
            <para>If <paramref name="baseType"/> is null, used default base class <see cref="T:DevExpress.ExpressApp.DC.DCBaseObject"/>.</para>
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.TypesInfoExtensions.RegisterEntity(DevExpress.ExpressApp.DC.ITypesInfo,System.Type,System.String,System.Type,System.String)">
            <summary>
            Registers a specific Domain Component in the application if <paramref name="entityType"/> is persistent.
            Registers a specific Domain Component as entity factory.
            </summary>
            <param name="typesInfo"><see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> provider.</param>
            <param name="entityType">A <see cref="T:System.Type"/> representing a Domain Component.</param>
            <param name="entityName">Specifies entity table name.</param>
            <param name="ns">Specifies namespace for entity table</param>
            <param name="baseType">A <see cref="T:System.Type"/> object representing a type used as the generated class' ancestor.</param>
            <remarks>
            Check <paramref name="entityType"/> is persistent type
            <para>If <paramref name="baseType"/> is null, used default base class <see cref="T:DevExpress.ExpressApp.DC.DCBaseObject"/>.</para>
            </remarks>
        </member>
        <member name="M:Xafari.BC.DC.TypesInfoExtensions.RegisterEntity``2(DevExpress.ExpressApp.DC.ITypesInfo,System.String,System.String)">
            <summary>
            Registers a specific Domain Component with specified base type in the application and entity factory.
            </summary>
            <typeparam name="T">A <see cref="T:System.Type"/> representing a Domain Component.</typeparam>
            <typeparam name="TBaseType">A <see cref="T:System.Type"/> object representing a type used as the generated class' ancestor.</typeparam>
            <param name="typesInfo"><see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> provider.</param>
            <param name="entityName">Specifies entity table name.</param>
            <param name="ns">Specifies namespace for entity table</param>
        </member>
        <member name="P:Xafari.BC.DC.UserNameSupport.UserName">
            <summary>
            Contains user name. The user is implied as record owner.
            </summary>
        </member>
        <member name="T:Xafari.BC.DC.XafariDCBaseObject">
            <summary>
            Base persistent class for register Domain Components in Xafari Framework. 
            </summary>
        </member>
        <member name="E:Xafari.BC.DC.XafariDCBaseObject.AfterPropertyChanged">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.XafariDCBaseObject.TypeInfo">
            <summary>
            Returns <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> for current object.
            </summary>
        </member>
        <member name="P:Xafari.BC.DC.XafariDCBaseObject.ObjectSpace">
            <summary>
            Returns <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> for current object.
            </summary>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.ChildrenPropertyAttribute">
            <summary>
            This attribute is used to specify the property that is a collection of child nodes.
            </summary>
            <seealso cref="T:DevExpress.Persistent.Base.General.ITreeNode"/>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.HierarchyFullNamePropertyAttribute">
            <summary>
            This attribute is used to specify the property that contains the fully qualified node name of the hierarchy.
            </summary>
            <seealso cref="T:DevExpress.Persistent.Base.General.ITreeNode"/>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.HierarchyFullPathPropertyAttribute">
            <summary>
            This attribute is used to specify the property that contains the fully qualified node path of the hierarchy.
            </summary>
            <seealso cref="T:DevExpress.Persistent.Base.General.ITreeNode"/>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.DeletingMode">
            <summary>
            An enumeration to determine the action after removal of the object from the hierarchy.
            </summary>
        </member>
        <member name="F:Xafari.BC.HierarchicalData.DeletingMode.Default">
            <summary>
            After deleting all links to deleted object will removed.
            </summary>
        </member>
        <member name="F:Xafari.BC.HierarchicalData.DeletingMode.Cascade">
            <summary>
            After deleting all child nodes in all hierarchies also will be deleted.
            </summary>
        </member>
        <member name="F:Xafari.BC.HierarchicalData.DeletingMode.Replacement">
            <summary>
            After deleting for all child nodes of deleted object sets the parent node of deleted object.
            </summary>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.GetChildrenCountMode">
            <summary>
            An enumeration to determine how to calculate the number of child nodes.
            </summary>
        </member>
        <member name="F:Xafari.BC.HierarchicalData.GetChildrenCountMode.Default">
            <summary>
            If object was modified count of child nodes will be determined by accessing to the corresponding collection and counting its elements
            else amount will be calculated by a direct request to the database.
            </summary>
        </member>
        <member name="F:Xafari.BC.HierarchicalData.GetChildrenCountMode.DirectDatabaseCount">
            <summary>
            Amount will be calculated by a direct request to the database.
            </summary>
        </member>
        <member name="F:Xafari.BC.HierarchicalData.GetChildrenCountMode.CollectionCount">
            <summary>
            Count of child nodes will be determined by accessing to the corresponding collection and counting its elements
            </summary>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.HierarchyInfo">
            <summary>
            Provides metadata for hierarchy data.
            </summary>
        </member>
        <member name="P:Xafari.BC.HierarchicalData.HierarchyInfo.HierarchyName">
            <summary>
            Gets hierarchy name.
            </summary>
        </member>
        <member name="P:Xafari.BC.HierarchicalData.HierarchyInfo.ParentInfo">
            <summary>
            Gets <see cref="T:DevExpress.ExpressApp.DC.IMemberInfo"/> for parent reference.
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.GetHierarchyMember``1">
            <summary>
            Gets <see cref="T:DevExpress.ExpressApp.DC.IMemberInfo"/> with specified hierarchy definition attribute <typeparamref name="TAttribute"/>.
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.GetAllChildrenCriteria(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Gets all the child nodes based on the full path of the parent.
            </summary>
            <returns>CHildren list.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.GetChildren(Xafari.BC.HierarchicalData.IHierarchyNode,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
            Gets children nodes of the hierarchy.
            </summary>
            <param name="instance"></param>
            <param name="criteria">Criteria.</param>
            <returns>List children.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.GetHasChildren(Xafari.BC.HierarchicalData.IHierarchyNode,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
            Determines whether the children node.
            </summary>
            <param name="instance"></param>
            <param name="criteria">Criteria</param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.GetCollectionCriteria(System.Object)">
            <summary>
            Returns <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> used for specified <paramref name="collection"/>.
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.ApplyCriteriaToNonPersistentIList(System.Collections.IList,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
            Apply criteria to NonPersistent list.
            </summary>
            <param name="list">Non persistent list.</param>
            <param name="criteria">Criteria for list.</param>
            <returns>List on the basis of criteria.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.ApplyCriteriaToNonPersistentIList(System.Collections.IList,System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
            Apply criteria to NonPersistent list.
            </summary>
            <param name="list">Non persistent list.</param>
            <param name="elementType">Type of elements in list.</param>
            <param name="criteria">Criteria for list.</param>
            <returns>List on the basis of criteria.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.GetNodeName(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Gets the name node of the hierarchy.
            </summary>
            <param name="instance"></param>
            <returns>Hierarchy node name.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.GetNodeFullName(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Gets the full name node of the hierarchy.
            </summary>
            <param name="instance"></param>
            <returns>Hierarchy node full name.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.SetNodeFullName(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Set the full name node of the hierarchy.
            </summary>
            <param name="instance"></param>
            <param name="value">Full name value.</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.GetNodeFullPath(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Gets the full path node of the hierarchy.
            </summary>
            <returns>Hierarchy node full path.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.SetNodeFullPath(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Set the full path node of the hierarchy.
            </summary>
            <param name="instance"></param>
            <param name="value">Full path value.</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.GetParent(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Gets parent node of the hierarchy.
            </summary>
            <returns>Parent object.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.SetParent(Xafari.BC.HierarchicalData.IHierarchyNode,Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Set parent node of the hierarchy.
            </summary>
            <param name="instance"></param>
            <param name="parent">Parent value.</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.CheckCircularReference(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Checks for cycling.
            </summary>
            <returns>Result cycling.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.IsPersistent(System.Type)">
            <summary>
            Checks whether the type persistent.
            </summary>
            <param name="type">Type.</param>
            <returns> Result check.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.UpdateFullName(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Update FullName for object <i>instance</i> and its descendants starting from this object 
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.UpdateFullNameAndFullPath(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Update FullPath for object <i>instance</i> and its descendants starting from this object 
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyInfo.DeleteObject(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Delete hierarchy object under <see cref="P:Xafari.BC.HierarchicalData.HierarchyInfo.DeletingMode"/>.
            </summary>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.HierarchyManager">
            <summary>
            Provides ability to operate with hierarchical data.
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.ServiceSpaceContext.UpdateFullName(Xafari.BC.HierarchicalData.IHierarchyNode,Xafari.BC.HierarchicalData.HierarchyInfo)">
            <summary>
            Update FullName for object <i>instance</i> and its descendants starting from this object 
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.ServiceSpaceContext.UpdateFullNameAndFullPath(Xafari.BC.HierarchicalData.IHierarchyNode,Xafari.BC.HierarchicalData.HierarchyInfo)">
            <summary>
            Update FullPath for object <i>instance</i> and its descendants starting from this object 
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.ServiceSpaceContext.LoadChildren(Xafari.BC.HierarchicalData.IHierarchyNode,Xafari.BC.HierarchicalData.HierarchyInfo)">
            <summary>
            Vary important method. Improves performance for this service. 
            </summary>
            <param name="instance"></param>
            <param name="hierarchyInfo"></param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.ServiceSpaceContext.DeleteObject(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Delete <see cref="T:Xafari.BC.HierarchicalData.IHierarchyNode"/> instance from all supported hierarchies.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="F:Xafari.BC.HierarchicalData.HierarchyManager.DefaultHierarchyName">
            <summary>
            Contains default hierarchy name.
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.GetHierarchyInfo(DevExpress.ExpressApp.DC.ITypeInfo,System.String)">
            <summary>
            Returns <see cref="T:Xafari.BC.HierarchicalData.HierarchyInfo"/> instance for specified <paramref name="typeInfo"/> and <paramref name="hierarchyName"/>.
            </summary>
            <param name="typeInfo"></param>
            <param name="hierarchyName"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.RegisterHierarchy(DevExpress.ExpressApp.DC.ITypeInfo,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Registers hierarchy for specified <paramref name="typeInfo"/>.
            </summary>
            <param name="typeInfo"></param>
            <param name="hierarchyName"></param>
            <param name="parentMemberPath"></param>
            <param name="nodeNameMemberPath"></param>
            <param name="childrenMemberPath"></param>
            <param name="fullNameMemberPath"></param>
            <param name="fullPathMemberPath"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.RegisterHierarchy``1(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Registers hierarchy for specified <typeparamref name="T"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="hierarchyName"></param>
            <param name="parentMemberPath"></param>
            <param name="nodeNameMemberPath"></param>
            <param name="childrenMemberPath"></param>
            <param name="fullNameMemberPath"></param>
            <param name="fullPathMemberPath"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.RegisterHierarchy``1">
            <summary>
            Register hierarchies by attributes for specified <typeparamref name="T"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.RegisterHierarchy(System.Type)">
            <summary>
            Register hierarchies by attributes for specified <paramref name="type"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyManager.IsContainCircularReference(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Determines whether the specified hierarchy contains circular reference.
            </summary>
            <param name="hierarchyNode">Hierarchical object instance.</param>
            <param name="hierarchyName">Name of an hierarchy. If not specified, the <see cref="F:Xafari.BC.HierarchicalData.HierarchyManager.DefaultHierarchyName"/> is used.</param>
            <returns>True if the hierarchy contains circular reference.</returns>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.HierarchyNodeNamePropertyAttribute">
            <summary>
            This attribute is used to specify the property that contains the node name of the hierarchy.
            </summary>
            <seealso cref="T:DevExpress.Persistent.Base.General.ITreeNode"/>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper">
            <summary>
            A utility class to implement the persistence of hierarchy.
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.GetNodeName(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Gets the name node of the hierarchy.
            </summary>
            <param name="obj">Object for which the method.</param>
            <param name="hierarchyName">Hierarchy name.</param>
            <returns>Hierarchy node name.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.GetNodeFullName(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Gets the full name node of the hierarchy.
            </summary>
            <param name="obj">Object for which the method.</param>
            <param name="hierarchyName">Hierarchy name.</param>
            <returns>Hierarchy node full name.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.SetNodeFullName(Xafari.BC.HierarchicalData.IHierarchyNode,System.String,System.String)">
            <summary>
            Set the full name node of the hierarchy.
            </summary>
            <param name="obj">Object for which the method.</param>
            <param name="value">Full name value.</param>
            <param name="hierarchyName">Hierarchy name.</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.GetNodeFullPath(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Gets the full path node of the hierarchy.
            </summary>
            <param name="obj">Object for which the method.</param>
            <param name="hierarchyName">Hierarchy name.</param>
            <returns>Hierarchy node full path.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.SetNodeFullPath(Xafari.BC.HierarchicalData.IHierarchyNode,System.String,System.String)">
            <summary>
            Set the full path node of the hierarchy.
            </summary>
            <param name="obj">Object for which the method.</param>
            <param name="value">Full path value.</param>
            <param name="hierarchyName">Hierarchy name.</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.GetParent(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Gets parent node of the hierarchy.
            </summary>
            <param name="obj">Object for which the method.</param>
            <param name="hierarchyName">Hierarchy name.</param>
            <returns>Parent object.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.SetParent(Xafari.BC.HierarchicalData.IHierarchyNode,Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Set parent node of the hierarchy.
            </summary>
            <param name="obj">Object for which the method.</param>
            <param name="parent">Parent value.</param>
            <param name="hierarchyName">Hierarchy name.</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.GetChildren(Xafari.BC.HierarchicalData.IHierarchyNode,System.String,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
            Gets children nodes of the hierarchy.
            </summary>
            <param name="obj">Object for which the method.</param>
            <param name="hierarchyName">Hierarchy name.</param>
            <param name="criteria">Criteria.</param>
            <returns>List children.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.DeletingObject(Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Deteling hierarchy object under DeletingMode
            </summary>
            <param name="obj">Object for which the method</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.CheckCircularReference(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Checks for cycling.
            </summary>
            <param name="obj">Object for which the method.</param>
            <param name="hierarchyName">Hierarchy name.</param>
            <returns>Result cycling.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.ApplyCriteriaToNonPersistentIList(System.Collections.IList,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
            Apply criteria to NonPersistent list.
            </summary>
            <param name="list">Non persistent list.</param>
            <param name="criteria">Criteria for list.</param>
            <returns>List on the basis of criteria.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.IsPersistent(System.Type)">
            <summary>
            Checks whether the type persistent.
            </summary>
            <param name="type">Type.</param>
            <returns> Result check.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.ExistMemberInfo(System.Type,System.String)">
            <summary>
            Checks attributes ParentPropertyAttribute and ChildrenPropertyAttribute
            </summary>
            <param name="type">Object type</param>
            <param name="hierarchyName">Hierarchy name</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.GetHasChildren(Xafari.BC.HierarchicalData.IHierarchyNode,System.String,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
            Determines whether the children node.
            </summary>
            <param name="obj">Object for which the method</param>
            <param name="hierarchyName">Hierarchy name</param>
            <param name="criteria">Criteria</param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.GetAllChildrenCriteria(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Gets all the child nodes based on the full path of the parent.
            </summary>
            <param name="obj">Object for which the method</param>
            <param name="hierarchyName">Hierarchy name</param>
            <returns>CHildren list.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.UpdateFullName(Xafari.BC.HierarchicalData.IHierarchyNode,System.String,System.String)">
            <summary>
            Update FullName for object <i>obj</i> and its descendants starting from this object 
            </summary>
            <param name="obj">Object for which the method</param>
            <param name="hierarchyName">Hierarchy name</param>
            <param name="separator">Symbol or string separator</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.UpdateFullPath(Xafari.BC.HierarchicalData.IHierarchyNode,System.String,System.String)">
            <summary>
            Update FullPath for object <i>obj</i> and its descendants starting from this object 
            </summary>
            <param name="obj">Object for which the method</param>
            <param name="hierarchyName">Hierarchy name</param>
            <param name="separator">Symbol or string separator</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodePersistentHelper.UpdateFullNameAndFullPath(Xafari.BC.HierarchicalData.IHierarchyNode,System.String,System.String)">
            <summary>
            Update FullName and FullPath for object <i>obj</i> and its descendants starting from this object 
            </summary>
            <param name="obj">Object for which the method</param>
            <param name="hierarchyName">Hierarchy name</param>
            <param name="separator">Symbol or string separator</param>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo">
            <summary>
            Contains information about hierarchy entity metadata.
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo.#ctor(DevExpress.ExpressApp.DC.ITypeInfo)">
            <summary>
            Creates hierarchy metadata object for specified entity type.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo.Hierarchies">
            <summary>
            Returns <see cref="T:Xafari.BC.HierarchicalData.HierarchyInfo"/> metadata objects for all supported hierachies.
            </summary>
        </member>
        <member name="P:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo.Item(System.String)">
            <summary>
            Returns <see cref="T:Xafari.BC.HierarchicalData.HierarchyInfo"/> about specified hierarchy.
            </summary>
            <param name="hierarchyName"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo.GetHierarchyMember``1(System.String)">
            <summary>
            Gets <see cref="T:DevExpress.ExpressApp.DC.IMemberInfo"/> with specified hierarchy definition attribute <typeparamref name="TAttribute"/> and specified <paramref name="hierarchyName"/>.
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="hierarchyName"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo.GetChildrenMembers(System.String)">
            <summary>
            Get IMemberInfo collection that describes children properties for selected hierarchy.
            </summary>
            <param name="hierarchyName">Selected hierarchy name.</param>
            <returns>IMemberInfo collection for children properties.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo.DeleteObject(DevExpress.ExpressApp.IObjectSpace,Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Deteling hierarchy object under DeletingMode
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo.AfterConstruction(DevExpress.ExpressApp.IObjectSpace,Xafari.BC.HierarchicalData.IHierarchyNode)">
            <summary>
            Use this method in domain logic to implement <see cref="T:Xafari.BC.HierarchicalData.IHierarchyNode"/>.
            </summary>
            <param name="objectSpace"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo.UpdateAllHierarchyData(DevExpress.ExpressApp.IObjectSpace,Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Use this method in domain logic to implement <see cref="T:Xafari.BC.HierarchicalData.IHierarchyNode"/>.
            </summary>
            <param name="objectSpace"></param>
            <param name="instance"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.HierarchyNodeTypeInfo.RegisterHierarchy(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Registers hierarchy with specified <paramref name="hierarchyName"/> and <paramref name="parentMemberPath"/>.
            </summary>
            <param name="hierarchyName"></param>
            <param name="parentMemberPath"></param>
            <param name="nodeNameMemberPath"></param>
            <param name="childrenMemberPath"></param>
            <param name="fullNameMemberPath"></param>
            <param name="fullPathMemberPath"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.IHierarchyNode">
            <summary>
            Describes the node object hierarchy.
            Supports the ability to store multiple hierarchies simultaneously by the naming of individual hierarchies.
            </summary>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.IHierarchyNode.GetHierarchyNodeName(System.String)">
            <summary>
            Returns the name of the hierarchy node with the specified name.
            </summary>
            <param name="hierarchyName">The name of hierarchy. By default, null.</param>
            <returns>The name of the hierarchy node with the specified name.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.IHierarchyNode.GetHierarchyNodeFullName(System.String)">
            <summary>
            Returns the fully qualified node name of the specified hierarchy using the specified delimiter.
            </summary>
            <param name="hierarchyName">Name of the hierarchy. By default, null.</param>
            <returns>The fully qualified node name of the specified hierarchy.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.IHierarchyNode.SetHierarchyNodeFullName(System.String,System.String)">
            <summary>
            Sets the full name for the node specified hierarchy.
            </summary>
            <param name="hierarchyName">Name of the hierarchy. By default, null.</param>
            <param name="value">Full name of the node.</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.IHierarchyNode.GetHierarchyNodeFullPath(System.String)">
            <summary>
            Returns the fully qualified node path of the specified hierarchy using the specified delimiter.
            </summary>
            <param name="hierarchyName">Name of the hierarchy. By default, null.</param>
            <returns>The fully qualified node path of the specified hierarchy.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.IHierarchyNode.SetHierarchyNodeFullPath(System.String,System.String)">
            <summary>
            Sets the full path for the node specified hierarchy.
            </summary>
            <param name="hierarchyName">Name of the hierarchy. By default, null.</param>
            <param name="value">Full path of the node.</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.IHierarchyNode.GetHierarchyParent(System.String)">
            <summary>
            Returns the parent node of the specified hierarchy.
            </summary>
            <param name="hierarchyName">The name of hierarchy. By default is null.</param>
            <returns>The parent node of the specified hierarchy.</returns>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.IHierarchyNode.SetHierarchyParent(Xafari.BC.HierarchicalData.IHierarchyNode,System.String)">
            <summary>
            Sets the parent node for the specified hierarchy.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="hierarchyName">Name of the hierarchy. By default, null.</param>
        </member>
        <member name="M:Xafari.BC.HierarchicalData.IHierarchyNode.GetHierarchyChildren(System.String)">
            <summary>
            Returns slave nodes of specified hierarchy.
            </summary>
            <param name="hierarchyName">The name of hierarchy. By default, null.</param>
            <returns>Slave nodes.</returns>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.IHierarchyNodeEx">
            <summary>
            The extension for <see cref="T:Xafari.BC.HierarchicalData.IHierarchyNode"/> for editing of hierarchies.
            </summary>
        </member>
        <member name="T:Xafari.BC.HierarchicalData.ParentPropertyAttribute">
            <summary>
            Attribute is used to specify the property that is a reference to the parent node.
            </summary>
            <seealso cref="T:DevExpress.Persistent.Base.General.ITreeNode"/>
        </member>
        <member name="T:Xafari.BC.Helpers.IObjectSpaceHelper">
            <summary>
            Provides additional members for <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> interface.
            </summary>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.CreateObject``1">
            <summary>
            Creates the instance of entity <typeparamref name="TEntity"/>.
            </summary>
            <typeparam name="TEntity">Entity type</typeparam>
            <returns></returns>
            <remarks>
            Finds the real entity type and create the instance of founded type.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.CreateObject(System.Type)">
            <summary>
            Creates the instance of entity <paramref name="entityType"/>.
            </summary>
            <param name="entityType">Entity type</param>
            <returns></returns>
            <remarks>
            Finds the real entity type and create the instance of founded type.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.GetObjects``1(DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Returns an <see cref="T:System.Collections.IList"/> collection of <typeparamref name="TEntity"/> objects via the specified <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.GetObjects(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Returns an <see cref="T:System.Collections.IList"/> collection of objects of specified <paramref name="entityType"/>, 
            retrieved to the current Object Space and filtered according to the specified criteria. 
            </summary>
            <param name="entityType">The type of the objects to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.FindObject``1(DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Searches for the first object of the type designated by the specified generic type parameter, matching the specified criteria.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns>An object which is the first persistent object which matches the specified criteria.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.FindObject(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Searches for the first object of the specified type, matching the specified criteria.
            </summary>
            <param name="entityType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns>An object which represents the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if there is no persistent object which matches the criteria.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.Evaluate``1(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Evaluates the specified expression for objects of the specified type.
            </summary>
            <typeparam name="TEntity">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated. </typeparam>
            <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate. </param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria will be used to evaluate the expression.</param>
            <param name="inTransaction">Take into account all in-memory object changes.</param>
            <returns>The value evaluated.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.SelectData``1(DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,System.Boolean)">
            <summary>
            Retrieves objects from a session using the specified query parameters.
            </summary>
            <typeparam name="TEntity">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated. </typeparam>
            <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved. </param>
            <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties. </param>
            <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects. </param>
            <param name="selectDeleted"><b>true</b> to include the persistent objects marked as deleted into the list; otherwise, <b>false</b>.</param>
            <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list. </param>
            <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved. </param>
            <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects. </param>
            <param name="inTransaction">Take into account all in-memory object changes.</param>
            <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.SelectDataAsync``1(DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,DevExpress.Xpo.AsyncSelectDataCallback)">
            <summary>
            Asynchronously retrieves entities from an object space, using the specified query parameters.
            </summary>
            <typeparam name="TEntity">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated. </typeparam>
            <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved. </param>
            <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties. </param>
            <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects. </param>
            <param name="selectDeleted"><b>true</b> to include the persistent objects marked as deleted into the list; otherwise, <b>false</b>.</param>
            <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list. </param>
            <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved. </param>
            <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects. </param>
            <param name="callback">A <see cref="T:DevExpress.Xpo.AsyncSelectDataCallback"/> delegate to be called after the list has been retrieved. This list is passed as a parameter to callback. </param>
            <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
        </member>
        <member name="P:Xafari.BC.Helpers.IObjectSpaceHelper.HierarchyService">
            <summary>
            Returns <see cref="T:Xafari.BC.HierarchicalData.HierarchyManager.ServiceSpaceContext"/> for current <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Helpers.IObjectSpaceHelper.ServicesModel">
            <summary>
            Returns <see cref="T:Xafari.BC.Services.ServicesModelService.ServiceSpaceContext"/> for current <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Helpers.IObjectSpaceHelper.DataAccessor">
            <summary>
            Returns <see cref="T:Xafari.BC.DataAccessorService.ObjectSpaceDataAccessor"/> for current <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Helpers.IObjectSpaceHelper.ServiceSpace">
            <summary>
            Returns existed or creates new <see cref="T:Xafari.BC.Services.IServiceObjectSpace"/> instance for current <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
            <returns></returns>
            <seealso cref="M:Xafari.BC.Services.ServiceSpacesManager.CreateServiceSpace(DevExpress.ExpressApp.IObjectSpace,System.Boolean)"/>
        </member>
        <member name="P:Xafari.BC.Helpers.IObjectSpaceHelper.Session">
            <summary>
            Gets <see cref="P:Xafari.BC.Helpers.IObjectSpaceHelper.Session"/> instance for this <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Helpers.IObjectSpaceHelper.RootObjectSpace">
            <summary>
            Gets root <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> for current.
            </summary>
        </member>
        <member name="M:Xafari.BC.Helpers.IObjectSpaceHelper.FindClassifierItem``1(System.String,System.Boolean)">
            <summary>
            Finds specified by code classifier item.
            </summary>
            <typeparam name="TClassifierItem">Target classifier item type.</typeparam>
            <param name="code">Code to find classifier item</param>
            <param name="inTransaction">if true, find modified and new objects in object space.</param>
            <returns>Returns first classfier item with code <paramref name="code"/> or null.</returns>
        </member>
        <member name="P:Xafari.BC.Helpers.IObjectSpaceHelper.IsDbUpdating">
            <summary>
            Indicates that <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> insatnce using for DB updating.
            </summary>
        </member>
        <member name="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.AliveTypeInfo">
            <summary>
            Gets the alive <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> for current instance.
            </summary>
            <remarks>
            Try to find the <see cref="T:Xafari.BC.AliveTypeAttribute"/> exists for current instance.
            If it is exist than calculate the <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> for specified type in <see cref="P:Xafari.BC.AliveTypeAttribute.AliveType"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Helpers.ITypeInfoHelperExtension.IsAlive">
            <summary>
            Returns <b>true</b> if current instance is equal to <see cref="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.AliveTypeInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ITypeInfoHelperExtension.HasAliveType">
            <summary>
            Returns <b>true</b> if current instance is not equal to <see cref="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.AliveTypeInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.OriginalTypeInfo">
            <summary>
            Gets the original <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> for current instance.
            </summary>
            <remarks>
            Try to find the <see cref="T:Xafari.BC.OriginalTypeAttribute"/> exists for current instance.
            If it is exist than calculate the <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> for specified type in <see cref="P:Xafari.BC.OriginalTypeAttribute.OriginalType"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Helpers.ITypeInfoHelperExtension.IsOriginal">
            <summary>
            Returns <b>true</b> if current instance is equal to <see cref="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.OriginalTypeInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ITypeInfoHelperExtension.HasOriginalType">
            <summary>
            Returns <b>true</b> if current instance is not equal to <see cref="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.OriginalTypeInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ITypeInfoHelperExtension.HierarchyInfo(System.String)">
            <summary>
            Gets the <see cref="M:Xafari.BC.Helpers.ITypeInfoHelperExtension.HierarchyInfo(System.String)"/> with specified <paramref name="hierarchyName"/> for current instance.
            </summary>
            <param name="hierarchyName">Hierarchy name.</param>
            <returns></returns>
        </member>
        <member name="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.HierarchyNodeTypeInfo">
            <summary>
            Gets the <see cref="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.HierarchyNodeTypeInfo"/> for current instance.
            </summary>
            <remarks>
            Calls the <see cref="M:Xafari.BC.HierarchicalData.HierarchyManager.GetHierarchyNodeTypeInfo(DevExpress.ExpressApp.DC.ITypeInfo)"/> method.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Helpers.ITypeInfoHelperExtension.GetTermMember``1(System.Func{``0,System.Boolean})">
            <summary>
            Get IMeberInfo for property decorated with term attribute.
            </summary>
            <typeparam name="TAttribute">Term attribute this.Instance.</typeparam>
            <param name="comparer">Comparer.</param>
            <returns>IMemberInfo with specified term attribute.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ITypeInfoHelperExtension.GetTermMember(System.String,System.Func{Xafari.BC.TermAttribute,System.Boolean})">
            <summary>
            Get IMeberInfo for property decorated with term attribute.
            </summary>
            <param name="termName">Term attribute name.</param>
            <param name="comparer">Comparer.</param>
            <returns>IMemberInfo with specified term attribute.</returns>
        </member>
        <member name="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.WeakListMembers">
            <summary>
            Gets the weak list members for current instance.
            </summary>
            <remarks>
            Returns all members from <see cref="P:DevExpress.ExpressApp.DC.ITypeInfo.Members"/> which has the <see cref="T:Xafari.DC.WeakListAttribute"/>.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Helpers.ITypeInfoHelperExtension.WeakAssociationMembers">
            <summary>
            Gets the weak association members for current instance.
            </summary>
            <remarks>
            Returns all members from <see cref="P:DevExpress.ExpressApp.DC.ITypeInfo.Members"/> which has the <see cref="T:Xafari.DC.WeakAssociationAttribute"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Helpers.ITypesInfoHelperExtension.FindAliveTypeInfo(System.Type)">
            <summary>
            Returns <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> for entity by the specified <paramref name="type"/>.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ObjectHelperExtension`1.GetValueByTerm``1(System.String)">
            <summary>
            Get value from member decorated with specified term attribute.
            </summary>
            <typeparam name="TValue">Member value type.</typeparam>
            <param name="termName">Term attribute name.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ObjectHelperExtension`1.GetValueByTerm``1(DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
            Get value from term member.
            </summary>
            <typeparam name="TValue">Member value type.</typeparam>
            <param name="termMember">Term member.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ObjectHelperExtension`1.GetValueByTerm``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Get value for member implemented by term.
            </summary>
            <typeparam name="TValue">Member value type.</typeparam>
            <param name="property">Term specified by this property.</param>
            <returns>Member value.</returns>
            <remarks>
            Lambda expression must be of the form like 'x => x.Member' (access to a member).
            </remarks>
        </member>
        <member name="M:Xafari.BC.Helpers.ObjectHelperExtension`1.GetListValueByTerm``1(System.String)">
            <summary>
            Get list of values from member decorated with specified term attribute.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <param name="termName">Term attribute name.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ObjectHelperExtension`1.GetListValueByTerm``1(DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
            Get list of values from term member.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <param name="termMember">Term member.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ObjectHelperExtension`1.GetListValueByTerm``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})">
            <summary>
            Get list of values for member implemented by term.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <param name="property">Term specified by this property.</param>
            <returns>List of objects.</returns>
            <remarks>
            Used if term name the as property name.
            Lambda expression must be of the form like 'x => x.Member' (access to a member).
            </remarks>
        </member>
        <member name="M:Xafari.BC.Helpers.ObjectHelperExtension`1.SetValueByTerm``1(System.String,``0)">
            <summary>
            Set value to member with specified term attribbute.
            </summary>
            <typeparam name="TValue">New value type.</typeparam>
            <param name="termName">Term name.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Xafari.BC.Helpers.ObjectHelperExtension`1.SetValueByTerm``1(DevExpress.ExpressApp.DC.IMemberInfo,``0)">
            <summary>
            Set value to member with specified term attribbute.
            </summary>
            <typeparam name="TValue">New value type.</typeparam>
            <param name="termMember">Term member.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Xafari.BC.Helpers.ObjectHelperExtension`1.SetValueByTerm``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Set value to member with specified term attribbute.
            </summary>
            <typeparam name="TValue">New value type.</typeparam>
            <param name="property">Term specified by this property.</param>
            <param name="value">New value.</param>
            <remarks>
            Lambda expression must be of the form like 'x => x.Member' (access to a member).
            </remarks>
        </member>
        <member name="M:Xafari.BC.Helpers.TypeHelperExtension.IsAlive">
            <summary>
            Checks specified <see cref="T:System.Type"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Xafari.BC.Helpers.TypeHelperExtension.AliveType">
            <summary>
            Returns alive this.Instance for specified <see cref="T:System.Type"/>.
            </summary>
            <returns>Returns value of specified <see cref="T:System.Type"/> if alive this.Instance is not exist.</returns>
        </member>
        <member name="M:Xafari.BC.Helpers.TypeHelperExtension.IsAssignableFrom(System.Type)">
            <summary>
            Determines whether an instance of the current <see cref="T:System.Type"/> can be assigned from instance of the alive specified <paramref name="targeType"/>.
            </summary>
            <param name="targeType"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.TypeHelperExtension.ConvertListTo``1(System.Object)">
            <summary>
            Creates converted typed list for specified <paramref name="list"/>. All <paramref name="list"/> items have to be instance of this <see cref="T:System.Type"/>.
            </summary>
            <typeparam name="T">Target <see cref="T:System.Type"/> to convert list.</typeparam>
            <param name="list">List to convert.</param>
            <remarks>
            Creates <see cref="T:DevExpress.Xpo.Helpers.ListMorpher`2"/> instance for this type and specified <typeparamref name="T"/>.
            </remarks>
            <returns></returns>
        </member>
        <member name="P:Xafari.BC.Helpers.UnitOfWorkHelper.ServiceSpace">
            <summary>
            Returns existed or creates new <see cref="T:Xafari.BC.Services.IServiceUnitOfWork"/> instance for current <see cref="T:DevExpress.Xpo.UnitOfWork"/>.
            </summary>
            <returns></returns>
            <seealso cref="M:Xafari.BC.Services.ServiceSpacesManager.CreateServiceSpace(DevExpress.Xpo.UnitOfWork,System.Boolean)"/>
        </member>
        <member name="P:Xafari.BC.Helpers.UnitOfWorkHelper.DataAccessor">
            <summary>
            Returns <see cref="T:Xafari.BC.DataAccessorService.UnitOfWorkDataAccessor"/> for current <see cref="T:DevExpress.Xpo.UnitOfWork"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Helpers.UnitOfWorkHelper.HierarchyService">
            <summary>
            Returns <see cref="T:Xafari.BC.HierarchicalData.HierarchyManager.ServiceSpaceContext"/> for current <see cref="T:DevExpress.Xpo.UnitOfWork"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Helpers.UnitOfWorkHelper.ServicesModel">
            <summary>
            Returns <see cref="T:Xafari.BC.Services.ServicesModelService.ServiceSpaceContext"/> for current <see cref="T:DevExpress.Xpo.UnitOfWork"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Helpers.ViewControllerHelperExtension.IsFitToObjectType(DevExpress.ExpressApp.View)">
            <summary>
            Update <see cref="P:DevExpress.ExpressApp.Controller.Active"/> by <see cref="P:DevExpress.ExpressApp.ObjectView.ObjectTypeInfo"/> and <see cref="P:DevExpress.ExpressApp.ViewController.TargetObjectType"/>.
            Add this method in <see cref="M:DevExpress.ExpressApp.ViewController.OnViewChanging(DevExpress.ExpressApp.View)"/> if AliveType must be supported.
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.ViewControllerHelperExtension.GetLogicController``1">
            <summary>
            Gets specified <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase"/> 
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.XafApplicationHelperBCExtension.CreateDataAccessor">
            <summary>
            Creates an <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> and creates <see cref="T:Xafari.BC.DataAccessorService.DataAccessor"/> for it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Helpers.XafApplicationHelperBCExtension.CreateDataAccessor(System.Type)">
            <summary>
            Creates an <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> and creates <see cref="T:Xafari.BC.DataAccessorService.DataAccessor"/> for it.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Xafari.BC.Helpers.XafApplicationHelperBCExtension.IsGenerateCustomMemberExts">
            <summary>
            Indicates that custom member 'Exts' must be added for <see cref="T:Xafari.BC.AliveTypeAttribute"/>.
            By default, <b>false</b>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Helpers.XPMemberInfoHelperExtension.ProcessWeakAssociationRefChange(DevExpress.Xpo.Session,System.Object,System.Object,System.Object,System.Boolean)">
            <summary>
            Add <paramref name="newValue"/> object into untyped associated weak collection. Analogue for <see cref="M:DevExpress.Xpo.Metadata.XPMemberInfo.ProcessAssociationRefChange(DevExpress.Xpo.Session,System.Object,System.Object,System.Object)"/>.
            </summary>
            <param name="session"></param>
            <param name="referenceMemberOwner"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <param name="skipNonLoadedCollections"></param>
            <remarks>
            By default used by <see cref="T:Xafari.BC.DC.XafariDCBaseObject"/>.
            </remarks>
        </member>
        <member name="F:Xafari.BC.Diagnostics.MemoryLeaksWindowController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.Diagnostics.MemoryLeaksWindowController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.Diagnostics.MemoryLeaksWindowController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Xafari.BC.Model.NodeGenerators.AliveTypeModelBOModelMemberNodesGeneratorUpdater">
            <summary>
            Generates the custom member 'Exts' for types which has an <see cref="T:Xafari.BC.AliveTypeAttribute"/>.
            </summary>
        </member>
        <member name="T:Xafari.BC.Model.NodeGenerators.HierarchyNameAndLookupEditorModeGeneratorUpdater">
            <summary>
            Updates the nodes BOModel.
            </summary>
            <remarks> Updates only the nodes implement interface <see cref="T:Xafari.BC.Model.IModelMemberXafariBC"/>.</remarks>
        </member>
        <member name="M:Xafari.BC.Model.NodeGenerators.HierarchyNameAndLookupEditorModeGeneratorUpdater.UpdateNode(DevExpress.ExpressApp.Model.Core.ModelNode)">
            <summary>
            Updates the <see href="http://documentation.devexpress.com/#Xaf/CustomDocument2596">Application Model</see> node content generated by <see href="http://documentation.devexpress.com/#Xaf/clsDevExpressExpressAppModelNodeGeneratorsModelBOModelMemberNodesGeneratortopic">ModelBOModelMemberNodesGenerator</see>.
            </summary>
            <param name="node">A <see cref="T:DevExpress.ExpressApp.Model.Core.ModelNode"/> Application Model node to be updated.</param>
            <remarks>Updates only <see cref="P:Xafari.BC.Model.IModelMemberXafariBC.HierarchyName"/> and <see cref="P:DevExpress.ExpressApp.Model.IModelCommonMemberViewItem.LookupEditorMode"/> properties.</remarks>
        </member>
        <member name="F:Xafari.BC.Model.ModelNodeWrapperViewController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.Model.ModelNodeWrapperViewController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.Model.ModelNodeWrapperViewController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Xafari.BC.Model.BusinessModelExtensions.ValidationGroupPathCalculator(DevExpress.ExpressApp.Model.IModelNode,System.String)">
            <summary>
            Grouping model nodes
            </summary>
            <param name="modelNode"><see cref="T:DevExpress.ExpressApp.Model.IModelNode"/></param>
            <param name = "propertyName" >Grouping field</param >
        </member>
        <member name="T:Xafari.BC.Model.IModelBCParameter">
            <summary>
            Base type for parameters declaration.
            </summary>
        </member>
        <member name="P:Xafari.BC.Model.IModelBCParameter.Type">
            <summary>
            Specifies the parameter class.
            </summary>
        </member>
        <member name="P:Xafari.BC.Model.IModelBCParameter.CanRead">
            <summary>
            Specifies whether the parameter can be read.
            </summary>
        </member>
        <member name="P:Xafari.BC.Model.IModelBCParameter.CanWrite">
            <summary>
            Specifies whether the parameter can be written.
            </summary>
        </member>
        <member name="P:Xafari.BC.Model.IModelBCParameter.ToolTip">
            <summary>
            Specifies the tooltip text.
            </summary>
        </member>
        <member name="P:Xafari.BC.Model.IModelBCParameter.Term">
            <summary>
            Property value type description.
            </summary>
        </member>
        <member name="M:Xafari.BC.Model.IModelBCParameter.GetDefaultTerm">
            <summary>
            Get default value for term by current type.
            </summary>
            <returns>Default term.</returns>
        </member>
        <member name="T:Xafari.BC.Model.BoolPropertyTermVisibilityCalculator">
            <summary>
            Specific visibility calculator for bool terms.
            </summary>
        </member>
        <member name="T:Xafari.BC.Model.StringPropertyTermVisibilityCalculator">
            <summary>
            Specific visibility calculator for string terms.
            </summary>
        </member>
        <member name="T:Xafari.BC.Model.ImagePropertyTermVisibilityCalculator">
            <summary>
            Specific visibility calculator for image terms.
            </summary>
        </member>
        <member name="T:Xafari.BC.Model.EditMaskPropertyTermVisibilityCalculator">
            <summary>
            Specific visibility calculator for edit mask terms.
            </summary>
        </member>
        <member name="P:Xafari.BC.Model.IModelListViewXafariBC.CurrentHierarchy">
            <summary>
            Specifies the hierarchy with which List View opens.
            </summary>
        </member>
        <member name="P:Xafari.BC.Model.IModelListViewXafariBC.AllowDragAndDrop">
            <summary>
            Specifies whether objects can be Drag And Drop in <see cref="!:XafariEX.BC.Web.Editors.ASPxHierarchyNodeListEditor"/> and <see cref="!:XafariEX.BC.Win.Editors.WinHierarchyNodeListEditor"/>
            </summary>
        </member>
        <member name="T:Xafari.BC.Model.IModelMemberXafariBC">
            <summary>
            This interfase expands <see cref="T:DevExpress.ExpressApp.Model.IModelMember"/>
            </summary>
            <remarks>This interface is a part of the Application Model infrastructure and is not intended to be implemented by your classes</remarks>
        </member>
        <member name="P:Xafari.BC.Model.IModelMemberXafariBC.HierarchyName">
            <summary>
            Indicates which hierarchy the property belongs.
            </summary>
        </member>
        <member name="T:Xafari.BC.OriginalTypeAttribute">
            <summary>
            Apply this attribute to class or interface to indicates about origianl type.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Attributes.BusinessOperationAttribute">
            <summary>
            Specifies the business operation class whose implementation current class is.
            </summary>
            <remarks>
            <para>The <b>BusinessOperationAttribute</b> is used with business operation implementation classes 
            (classes that implement the interface <see cref="T:Xafari.BC.BusinessOperations.IOperationService"/> 
            or ones that are descendants of <see cref="T:Xafari.BC.BusinessOperations.OperationServiceBase"/>)
            to specify the business operation class (see <see cref="T:Xafari.BC.BusinessOperations.BusinessOperationBase"/>)
            whose implementation they are.</para>
            <code>
            [BusinessOperation(typeof(CalcOrderTotalList))]
            public class CalcWithoutDiscountList : OperationServiceBase
            {
               ...
            }
            </code>
            </remarks>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.Attributes.BusinessOperationAttribute.BusinessOperationType">
            <summary>
            Gets the business operation class type stored in this attribute.
            </summary>
            <value>The business operation class type stored in this attribute. Instance of <see cref="T:System.Type"/>.</value>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.BusinessOperationAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Xafari.BC.BusinessOperations.Attributes.BusinessOperationAttribute"/>.
            </summary>
            <remarks>Creates and initializes an instance of the <see cref="T:Xafari.BC.BusinessOperations.Attributes.BusinessOperationAttribute"/> class with the specified parameter.</remarks>
            <param name="businessOperationType">The <see cref="T:System.Type"/> instance of the business operation class.</param>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute">
            <summary>
            Specifies the category in which the business operation will be displayed in a UI component.
            </summary>
            <remarks>
            <para>The <b>BusinessOperationCategoryAttribute</b> is used to specify the category name of a business operation 
            (see <see cref="T:Xafari.BC.BusinessOperations.BusinessOperationBase"/>).</para>
            <para>The business operation can belong to several categories simultaneously.</para>
            <code>
            [BusinessOperationCategory("Orders"), BusinessOperationCategory()]
            public class CalcOrderTotalList : BusinessOperationBase
            {
                ...
            }
            </code>
            <seealso cref="T:Xafari.BC.BusinessOperations.IBusinessOperation"/>
            </remarks>
        </member>
        <member name="F:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute._category">
            <summary>
            Provides the actual category name.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref='T:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute'/> class with the default category.
            </summary>
            <remarks>
            <para>The default category name is "Default".</para>
            <para>The business operation whose category is not specified belongs to the Default category.
            However may need to include the business operation to the default category, and certain other category simultaneously.
            In this case the default constructor can be used.</para>
            </remarks>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref='T:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute'/> class with the specified category name.
            </summary>
            <remarks>Serves to specify category name of a business operation. </remarks>
            <param name="category">String value representing the category name.</param>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute.Category">
            <summary>
            Gets the name of the category for the class that this attribute is bound to.
            </summary>
            <value>The category name stored in this attribute.</value>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
            <value>A 32-bit signed integer hash code of the category string name.</value>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this instance is equal to a specified object.
            </summary>
            
            <returns>
            true if <paramref name="obj"/> equals the type and value of this instance; otherwise, false.
            </returns>
            <param name="obj">An <see cref="T:System.Object"/> to compare with this instance or null. </param>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute.Default">
            <summary>
            Gets a BusinessOperationCategoryAttribute representing the Default category.
            </summary>
            <value>Instance of <see cref='T:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute'/> class with the default category.</value>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute.IsDefaultAttribute">
            <summary>
            Determines if this attribute is the default.
            </summary>
            <returns>true if the attribute is the default value for this attribute class; otherwise, false.</returns>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.Attributes.ContextViewTypeAttribute.ViewType">
            <summary>
            Gets the the kind of a context view.
            </summary>
            <value>Value is defined by the <see cref="!:Xafari.BC.BusinessOperations.ContextViewType"/> enumeration.</value>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.ContextViewTypeAttribute.#ctor(Xafari.BC.ContextViewType)">
            <summary>
            Initializes a new instance of the <see cref="T:Xafari.BC.BusinessOperations.Attributes.ContextViewTypeAttribute"/>.
            </summary>
            <remarks>Creates and initializes an instance of the <see cref="T:Xafari.BC.BusinessOperations.Attributes.ContextViewTypeAttribute"/> class with the specified parameter.</remarks>
            <param name="viewType">The kind of a context view.</param>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Attributes.DefaultOperationServiceAttribute">
            <summary>
            Specifies the business operation implementation class which is used by default.
            </summary>
            <remarks>The attribute is applicable to a business operation class.
            <code>
            [DefaultOperationService(typeof(CalcWithoutDiscountList))]
            public class CalcOrderTotalList : BusinessOperationBase
            {
                ...
            }
            
            public class CalcWithoutDiscountList : OperationServiceBase
            {
                ...
            }
            </code></remarks>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.Attributes.DefaultOperationServiceAttribute.Type">
            <summary>
            Gets the business operation implementation class stored in this attribute.
            </summary>
            <value>The business operation implementation class type stored in this attribute. 
            The value is instance of <see cref="T:System.Type"/>.</value>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.DefaultOperationServiceAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Xafari.BC.BusinessOperations.Attributes.DefaultOperationServiceAttribute"/>.
            </summary>
            <remarks>Creates and initializes an instance of the <see cref="T:Xafari.BC.BusinessOperations.Attributes.DefaultOperationServiceAttribute"/> class with the specified parameter.</remarks>
            <param name="defaultOperationServiceType">The <see cref="T:System.Type"/> instance of the business operation implementation class.</param>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Attributes.ExecutionWayAttribute">
            <summary>
            Specifies the business operation execution way.
            </summary>
            <remarks>
            <para>The attribute is used with business operations classes (see <see cref="T:Xafari.BC.BusinessOperations.IOperationService"/>)
            to specify the way of execution in managed context (see <see cref="!:Xafari.ManagedOperations.ManagedOperation"/>).
            Possible ways is defined by elements of the <see cref="T:Xafari.BC.BusinessOperations.ExecutionWays"/> enumeration.</para>
            <para>The value defines by this attribute is representing in the appropriate business operation node of the application model and may be edited.</para>
            <code>
            [ExecutionWay(ExecutionWays.Synchronous)]
            public class CalcOrderTotalList : BusinessOperationBase
            {
                ...
            </code>
            </remarks>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.Attributes.ExecutionWayAttribute.ExecutionWay">
            <summary>
            Gets the execution way of the business operation.
            </summary>
            <value>Value is element of the <see cref="T:Xafari.BC.BusinessOperations.ExecutionWays"/> enumeration.</value>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.ExecutionWayAttribute.#ctor(Xafari.BC.BusinessOperations.ExecutionWays)">
            <summary>
            Initializes a new instance of the class with the specified parameter.
            </summary>
            <param name="executionWay">Execution way of the business operation in managed context.</param>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Attributes.IdAttribute">
            <compilewhen>never</compilewhen>
            <summary>
            Specifies unique id of the business operation of its implementation class.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Attributes.IdAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class with the specified parameter.
            </summary>
            <param name="id">String value of unique id.</param>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.BusinessOperationBase">
             <summary>
             The base class for Business Operations.
             </summary>
             <remarks>
             <para>To create custom Business Operations you may to implement the interface <see cref="T:Xafari.BC.BusinessOperations.IBusinessOperation"/>.
             However, it is more expedient to inherit a custom Business Operation class from this base class. 
             It implements the core functionality of Business Operations, such as generation and processing of events, 
             properties accessors and methods declared by the <see cref="T:Xafari.BC.BusinessOperations.IBusinessOperation"/>.</para>
             <para>When you create a custom Business Operation class which is inherited from the <see cref="T:Xafari.BC.BusinessOperations.BusinessOperationBase"/> class
             in most cases you should just describe its properties. rest of the work will perform <see cref="T:Xafari.BC.BusinessOperations.BusinessOperationBase"/>.
             The following example demonstrates how to implement a custom context business operation class.</para>
             <para>
             With the Business Operation class may be used the following attributes:
             <list type="table">
             <listheader>
             <description><b>Attribute</b></description>
             <description><b>Description</b></description>
             </listheader>
             
             <item>
             <description><see cref="T:System.ComponentModel.DisplayNameAttribute"/></description>
             <description>The <see cref="P:Xafari.BC.BusinessOperations.BusinessOperationBase.Name"/> is defined by this attribute.</description>
             </item>
             
             <item>
             <description><see cref="T:System.ComponentModel.DescriptionAttribute"/></description>
             <description></description>
             </item>
             
             <item>
             <description><see cref="T:Xafari.BC.BusinessOperations.Attributes.DefaultOperationServiceAttribute"/></description>
             <description></description>
             </item>
             
             <item>
             <description><see href="http://documentation.devexpress.com/#Xaf/clsDevExpressPersistentBaseImageNameAttributetopic">ImageNameAttribute</see></description>
             <description></description>
             </item>
             
             <item>
             <description><see cref="T:Xafari.BC.BusinessOperations.Attributes.ExecutionWayAttribute"/></description>
             <description></description>
             </item>
             
             <item>
             <description><see cref="T:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute"/></description>
             <description></description>
             </item>
             
             </list></para>
             <para>
             With properties may be used the following attributes:
             <list type="table">
             <item><description><see cref="T:Xafari.BC.ContextPropertyAttribute"/></description></item>
             <item><description><see cref="T:System.ComponentModel.DisplayNameAttribute"/></description></item>
             <item><description><see cref="T:System.ComponentModel.BrowsableAttribute"/></description></item>
             <item><description><see href="http://documentation.devexpress.com/#Xaf/clsDevExpressPersistentBaseIndexAttributetopic">IndexAttribute</see></description></item>
             </list>
             </para>
             <code>
             [XafDisplayName("Total orders cost")]
             [Description("Calculation of orders total cost.")]
             [DefaultOperationService(typeof(CalcWithoutDiscountList))]
             [ImageName("Action_Calculator")]
             [ExecutionWay(ExecutionWays.Synchronous)]
             [BusinessOperationCategory("Orders"), BusinessOperationCategory()]
             public class CalcOrderTotalList : BusinessOperationBase
             {
                 public CalcOrderTotalList()
                 {
                     OrderList = new List&lt;string&gt;();
                 }
            
                 // Contest property. It is marked with special attribute. Analyzing the attribute type 
                 // the framework will see for what context the business operation is designed.
                 [ContextProperty]
                 public IEnumerable&lt;Order&gt; Orders { get; set; }
            
                 // Processed orders list. Will be filled during calculation.
                 // The setter marked as private to be not considered as input.
                 [XafDisplayName("Orders"), Index(0)]
                 public List&lt;string&gt; OrderList { get; private set; }
            
                 // The result of the calculation.
                 // The setter marked as internal to be not considered as input.
                 [XafDisplayName("Orders total"), Index(1)]
                 public decimal Total { get; internal set; }
             }
             </code>
             <para>To make the Business Operation visible for framework you should register it in the XAF Module class.
             To do this the Module class have to implement the interface <see cref="T:Xafari.BC.BusinessOperations.IBusinessOperationContainer"/>.</para>
             <code>
             public sealed partial class MyBusinessOperationsModule : ModuleBase, IBusinessOperationContainer
             {
                 ...
                 public IEnumerable&lt;Type&gt; BusinessOperationTypes
                 {
                     get
                     {
                         yield return typeof(CalcOrderTotalList);
                         ...
                     }
                 }
             }
             </code>
             </remarks>
             <seealso cref="T:Xafari.BC.BusinessOperations.IOperationService"/>
             <seealso cref="!:Xafari.BC.BusinessOperations.IBusinessOperationManaged"/>
             <seealso cref="T:Xafari.BC.BusinessOperations.OperationServiceBase"/>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.BusinessOperationBase.Executing">
            <summary>
            Occurs before executing a business operation.
            </summary>
            <remarks>Handle the event to perform any processing before actual executing a business operation.</remarks>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.BusinessOperationBase.Executed">
            <summary>
            Occurs after executing a business operation.
            </summary>
            <remarks>Handle the event to perform any processing after actual executing a business operation.</remarks>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.BusinessOperationBase.RollingBack">
            <summary>
            Occurs before rolling back a business operation.
            </summary>
            <remarks>Handle the event to perform any processing before actual rolling back a business operation.</remarks>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.BusinessOperationBase.RolledBack">
            <summary>
            Occurs after rolling back a business operation.
            </summary>
            <remarks>Handle the event to perform any processing after actual rolling back a business operation.</remarks>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.BusinessOperationBase.RunCanceled">
            <summary>
            Occurs when a Business Operations was canceled.
            </summary>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.BusinessOperationBase.HandleException">
            <summary>
            Occurs when exception is raised during execution of a business operation.
            </summary>
            <remarks>
            Handle the event to perform a custom exception processing. 
            The handler have to set e.Handled to true to prevent the default exception handling.
            </remarks>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.BusinessOperationBase.Model">
            <summary>
            Provides access to the business operation's Application Model node.
            </summary>
            <value>An <see cref="T:Xafari.BC.BusinessOperations.Model.IModelBusinessOperation"/> object that represents the business operation's Application Model node.</value>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.BusinessOperationBase.Id">
            <summary>
            The id of the business operation.
            </summary>
            <value>String value that represents the business operation's id.</value>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.BusinessOperationBase.Name">
            <summary>
            The name of the business operation.
            </summary>
            <value>String value that represents the business operation's name.</value>
            <remarks>The business operation's name is specified by the attribute <see cref="T:System.ComponentModel.DisplayNameAttribute"/>.</remarks>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.Execute">
            <summary>
            Execute a business operation.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.Rollback">
            <summary>
            Rollback a business operation.
            </summary>
            <remarks>
            Rollback method performs actual work only if a business operation's implementation contains Rollback method. 
            In other case this method do nothing. To determine if an implementation supports rollback may be used <see cref="P:Xafari.BC.BusinessOperations.BusinessOperationBase.IsReversible"/> property.</remarks>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.BusinessOperationBase.IsReversible">
            <summary>
            Determines whether the current implementation has the rollback method.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetPropertyValue(System.String,System.Object[])">
            <summary>
            Returns the value of the property with optional index values for indexed properties.
            </summary>
            <param name="name">String name of public property.</param>
            <param name="index">Optional index values for indexed properties. This value should be null for non-indexed properties.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.SetPropertyValue(System.String,System.Object,System.Object[])">
            <summary>
            Sets the value of the property with optional index values for index properties.
            </summary>
            <param name="name">String name of public property.</param>
            <param name="value">The new value for this property.</param>
            <param name="index">Optional index values for indexed properties. This value should be null for non-indexed properties.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.CreateBusinessOperationHelper(Xafari.BC.BusinessOperations.IBusinessOperation)">
            <summary>
            Creates instance of <see cref="T:Xafari.BC.BusinessOperations.ContextBusinessOperationHelper"/> with default <see cref="T:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreatorFactory"/>.
            </summary>
            <param name="businessOperation">Instance of a Context Business Operation.</param>
            <returns>Instance of ContextBusinessOperationHelper.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.CreateInstance(System.String)">
            <summary>
            Creates a Business Operation instance by specified id.
            </summary>
            <param name="businessOperationId">A Business Operation id.</param>
            <returns>The Business Operation instance.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.CreateInstance(Xafari.BC.BusinessOperations.Model.IModelBusinessOperation)">
            <summary>
            Creates a Business Operation instance by specified model node.
            </summary>
            <param name="businessOperationModelNode">Model node which represents a Business Operation.</param>
            <returns>The Business Operation instance.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetId(System.Type)">
            <summary>
            Gets id of specified Business Operation Type object.
            </summary>
            <param name="businessOperationType">Type object which represents a Business Operation class.</param>
            <returns>A Business Operation id.</returns>
            <remarks>A Business Operation id is specified with attribute <see cref="T:Xafari.BC.BusinessOperations.Attributes.IdAttribute"/>. If the attribute is not specified
            then Type.FullName is used.</remarks>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetDescription(System.Reflection.MemberInfo)">
            <summary>
            Gets specified member description.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetCategories(System.Reflection.MemberInfo)">
            <summary>
            Returns categories of the specified business operation class.
            </summary>
            <returns>
            Category names list or null if category is not specified.
            </returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.IsDefaultCategory(System.String)">
            <summary>
            Returns value that indicates whether specified category name is default category.
            </summary>
            <param name="categoryName">Name of a category.</param>
            <returns>true if specified categry name is default category.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetDefaultCategory">
            <summary>
            Returns default category name.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetContextProperty(System.Collections.Generic.IList{System.Reflection.PropertyInfo})">
            <summary>
            Gets context property.
            </summary>
            <param name="propertyInfoList">A business operation public property list.</param>
            <returns>Gets first found property from the list which decorated with <see cref="T:Xafari.BC.ContextPropertyAttribute"/> attribute.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetName(System.Reflection.MemberInfo)">
            <summary>
            Gets specified member name.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetDefaultOperationServiceType(System.Type)">
            <summary>
            Gets default operation service Type object.
            </summary>
            <param name="businessOperationType">Type object represents a Business Operation.</param>
            <returns>Возвращает тип реализации "по умолчанию", либо null, если реализация не задана.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetModelNode(System.String)">
            <summary>
            Gets model node which represents a Business Operation with specified Id.
            </summary>
            <param name="businessOperationId">A Business Operation Id.</param>
            <returns>Model node or null when node is not found.</returns>
            TODO: Протестировать влияние на производительность. Оптимизировать при необходимости.
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetBrowsableProperties(System.Type)">
            <summary>
            Gest browsable Business Operation parameter list.
            </summary>
            <param name="businessOperationType">Type object of a Business Operation class.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.CheckIsReversible(Xafari.BC.BusinessOperations.Model.IModelBusinessOperation)">
            <summary>
            Determines whether the current implementation of the specified Business Operation has the rollback method.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetExecutionWay(System.Type)">
            <summary>
            Gets the specified Business Operation execution way.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetImageName(System.Type)">
            <summary>
            Gets an image name which is associated with the specified Business Operation Type object.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.IsPosiblePersitParameters(Xafari.BC.BusinessOperations.Model.IModelBusinessOperation)">
            <summary>
            Determines whether the specified Business Operation can persist its parameters in a database..
            </summary>
            <param name="businessOperationModelNode"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.FindSinglePersistentParameter(Xafari.BC.BusinessOperations.Model.IModelBusinessOperation)">
            <summary>
            Searches a Business Operation parameter of persistent type.
            </summary>
            <param name="businessOperationModelNode">Model node which represents a Business Operation.</param>
            <remarks> 
            The context property is ignored.
            If a Business Operation has more than one persistent parameter or has no parameters at all or has no parameters of persistent type
            null value is returned.
            </remarks>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.IsBusinessOperationContext(System.String)">
            <summary>
            Determines whether the specified Business Operation is the Context Business Operation.
            </summary>
            <param name="businessOperationId">Id of the Business Operation to test.</param>
            <returns><b>true</b>if the the specified Business Operation is the Context Business Operation; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.IsBusinessOperationContext(Xafari.BC.BusinessOperations.Model.IModelBusinessOperation)">
            <summary>
            Determines whether the specified Business Operation is the Context Business Operation.
            </summary>
            <param name="modelBusinessOperation">Model node which represents the Business Operation to test.</param>
            <returns><b>true</b>if the the specified Business Operation is the Context Business Operation; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.IsContextPropertyList(System.String)">
            <summary>
            Determines whether the specified Context Business Operation has the context property of a generic collection type.
            </summary>
            <param name="contextBusinessOperationId">Id of the Business Operation to test.</param>
            <returns><b>true</b>if the the specified Context Business Operation has the context property of a list type; otherwise, <b>false</b>.</returns>
            <remarks>Raises <see cref="T:System.InvalidOperationException"/> if the <paramref name="contextBusinessOperationId"/> is not a Context Business Operation.</remarks>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.IsContextPropertyList(Xafari.BC.BusinessOperations.Model.IModelBusinessOperationContext)">
            <summary>
            Determines whether the specified Context Business Operation has the context property of a generic collection type.
            </summary>
            <param name="businessOperationModel">Model node which represents a Context Business Operation.</param>
            <returns><b>true</b>if the the specified Context Business Operation has the context property of a list type; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationBase.GetDefaultOperationServiceInstance">
            <summary>
            Возвращает экземпляр реализации по умолчанию текущей бизнес-операции.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.BusinessOperationException">
            <summary>
            The exception that is generated when business operations is executed or rollbacked.
            </summary>
            <remarks>Original exception can be obtained by field InnerException..</remarks>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationHelper.GetDeclaredBusinessOperations(System.Collections.Generic.IEnumerable{DevExpress.ExpressApp.ModuleBase})">
            <summary>
            Returns a collection of business operations and their implementers types, declared in the specified modules of application.
            </summary>
            <param name="modules">List of modules in which needed types are searching</param>
            <returns>
            Dictionary: 
              Key   - business operation class type; 
              Value - collection of business operation implementers types.
            </returns>
            <remarks>
            Declaration of business operation and its implementers in the module is performed by implementing an interface IBusinessOperationContainer.
            The method of this interface must return instances of types of business operations and their implementers.
            </remarks>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationHelper.FindBusinessOperations(System.Collections.Generic.IEnumerable{DevExpress.ExpressApp.ModuleBase})">
            <summary>
            Searching of business operations and their implementers types, declared in the specified modules of application.
            Searches for classes that implement the user interface of IBusinessOperation and IOperationService.
            </summary>
            <param name="modules">>List of modules in which needed types are searching</param>
            <returns>
            Dictionary: 
              Key   - business operation class type; 
              Value - collection of business operation implementers types.
            </returns>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.BusinessOperationManager">
            <summary>
            Business operations subsystem management service.
            </summary>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.BusinessOperationManager.BusinessOperationExecuted">
            <summary>
            Raised when a business operation is executed.
            </summary>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.BusinessOperationManager.BusinessOperationRoledBack">
            <summary>
            Raised when a business operation is rolled back.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.BusinessOperationManager.Model">
            <summary>
            Provides access to the BusinessOperations Model root node.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.BusinessOperationManager.CollectionCreatorFactory">
            <summary>
            Collection factory creator instance.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationManager.GetRegularBusinessOperationNodes">
            <summary>
            Enumerates Regular Business Operations.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationManager.GetContextBusinessOperationNodes">
            <summary>
            Enumerates Context Business Operations.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationManager.RaiseBusinessOperationExecutedEvent(Xafari.BC.BusinessOperations.IBusinessOperation)">
            <summary>
            Raise BusinessOperationExecuted event handler. (For internal use only)
            </summary>
            <param name="businessOperation">BusinessOperation instance.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationManager.RaiseBusinessOperationRolledBackEvent(Xafari.BC.BusinessOperations.IBusinessOperation)">
            <summary>
            Raise BusinessOperationRoledBack event handler. (For internal use only)
            </summary>
            <param name="businessOperation">BusinessOperation instance.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationManager.CollectBusinessOperationTypesFromModules(System.Collections.Generic.IEnumerable{DevExpress.ExpressApp.ModuleBase})">
            <summary>
            Collects Business Operation types from specified modules.
            </summary>
            <param name="modules"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector">
            <summary>
            Set of static methods to extract a Business Operation Type metadata.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.GetDisplayNameAttributeValue(System.Reflection.MemberInfo)">
            <summary>
            Gets value of either <see cref="T:DevExpress.ExpressApp.DC.XafDisplayNameAttribute"/> or <see cref="T:System.ComponentModel.DisplayNameAttribute"/> attribute of the specified member.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.GetContextProperty(System.Collections.Generic.IList{System.Reflection.PropertyInfo})">
            <summary>
            Gets context property.
            </summary>
            <param name="propertyInfoList">A business operation public property list.</param>
            <returns>Gets first found property from the list which decorated with <see cref="T:Xafari.BC.ContextPropertyAttribute"/> attribute.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.IsPropertyBrowsable(System.Reflection.MemberInfo)">
            <summary>
            Gets <see cref="T:System.ComponentModel.BrowsableAttribute"/> attribute value.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.DetermineDataType(System.Type)">
            <summary>
            Determines data type or collection element type.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.GetIdAttributeValue(System.Reflection.MemberInfo)">
            <summary>
            Gets <see cref="T:Xafari.BC.BusinessOperations.Attributes.IdAttribute"/> attribute value.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.GetDefaultOperationServiceTypeAttributeValue(System.Reflection.MemberInfo)">
            <summary>
            Gets <see cref="T:Xafari.BC.BusinessOperations.Attributes.DefaultOperationServiceAttribute"/> attribute value.
            </summary>
            <returns>Attribute vaule. If attribute is not specified then returns null.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.GetDescriptionAttributeValue(System.Reflection.MemberInfo)">
            <summary>
            Gets <see cref="T:System.ComponentModel.DescriptionAttribute"/> attribute value.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.GetCategoryAttributeValues(System.Reflection.MemberInfo)">
            <summary>
            Returns categories of the type defined by attributes.<see cref="T:Xafari.BC.BusinessOperations.Attributes.BusinessOperationCategoryAttribute"/>
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.IsDefaultCategory(System.String)">
            <summary>
            Returns value that indicates whether specified category name is default category.
            </summary>
            <param name="categoryName">Name of a category.</param>
            <returns>true if specified categry name is default category.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.GetDefalultCategoryAttributeValue">
            <summary>
            Returns default category name.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.GetExecutionWayAttributeValue(System.Type)">
            <summary>
            Gets <see cref="T:Xafari.BC.BusinessOperations.Attributes.ExecutionWayAttribute"/> attribute value.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.BusinessOperationTypeReflector.GetImageNameAttributeValue(System.Type)">
            <summary>
            Gets <see cref="T:DevExpress.Persistent.Base.ImageNameAttribute"/> attribute value.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.ArrayCreator">
            <compilewhen>never</compilewhen>
            <summary>
            For internal use.
            Creates the collection based on <see cref="T:System.Array"/> or <see cref="T:System.Collections.Generic.List`1"/> and fills it with elements from <i>dataSource</i>.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreator">
            <summary>
            The base class for Collection Creators.
            </summary>
            <remarks>
            The class derived from this base class should implement two generic methods with names and signatures as shown below:
            <code>
            // Creates the collection based on untyped data source.
            private static IEnumerable MakeCollection&lt;TCollection, TParameterType&gt;(IEnumerable src) where TCollection : HashSet&lt;TParameterType&gt;, new()
            {
                var hs = new TCollection();
                foreach (var obj in src)
                    hs.Add((TParameterType)obj);
                return hs;
            }
            
            // Creates the collection based on typed data source.
            private static IEnumerable MakeCollectionTypedSrc&lt;TCollection, TParameterType&gt;(IEnumerable&lt;TParameterType&gt;} src) where TCollection : HashSet&lt;TParameterType&gt;, new()
            {
                var hs = new TCollection();
                hs.UnionWith(src);
                return hs;
            }
            </code>
            
            <para>Instead of the <b>HashSet</b> which is shown in the code example should be used the parental type, on which the collection is created.</para>
            <para>These methods should create instance of <b>TCollection</b> and fill it with elements from <i>src</i>.
            Methods should be <b>private static</b> and should have the same names as shown in the code example above. 
            They are invoked by this base class using reflection (it is necessary to specify type parameters which are known at runtime).</para>
            </remarks>
            <seealso cref="T:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreatorFactory"/>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreator.Create(System.Collections.IEnumerable)">
            <summary>
            Factory method, which creates the collection's instance of appropriate type
            and fills the collection with elements from specified <paramref name="dataSource"/>.
            </summary>
            <param name="dataSource">Data source of elements to fill the result collection.</param>
            <returns>The collection's instance of appropriate type.</returns>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreatorFactory">
            <summary>
            Factory class to create Generic Collection Creators instances.
            </summary>
            <remarks>
            <para>This factory creates instances of appropriate Collection Creators (see <see cref="T:Xafari.BC.BusinessOperations.CollectionCreators.ICollectionCreator"/>, <see cref="T:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreator"/>).
            Concrete type of Collection Creator depends on the generic collection type, passed to the method <see cref="M:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreator.Create(System.Collections.IEnumerable)"/>.</para>
            <para>
            Supported abstract generic types:
            <list type="table">
            <item><description><see cref="T:System.Collections.Generic.IEnumerable`1"/></description></item>
            <item><description><see cref="T:System.Collections.Generic.ICollection`1"/></description></item>
            <item><description><see cref="T:System.Collections.Generic.IList`1"/></description></item>
            </list>
            </para>
            <para>
            Supported generic types:
            <list type="table">
            <item><description><see cref="T:System.Collections.Generic.HashSet`1"/></description></item>
            <item><description><see cref="T:System.Collections.Generic.LinkedList`1"/></description></item>
            <item><description><see cref="T:System.Collections.Generic.List`1"/></description></item>
            <item><description><see cref="T:System.Collections.Generic.Queue`1"/></description></item>
            <item><description><see cref="T:System.Collections.Generic.SortedSet`1"/></description></item>
            <item><description><see cref="T:System.Collections.Generic.Stack`1"/></description></item>
            <item><description><see cref="T:System.Collections.Generic.SynchronizedCollection`1"/></description></item>
            </list>
            </para>
            <para>
            You may need to extend supported types list. To do this you should create custom class derived from this one 
            and override its virtual method <see cref="M:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreatorFactory.MakeCore(System.Type)"/>. 
            After that you should override the factory method <see cref="M:Xafari.BC.BusinessOperations.BusinessOperationManager.CreateCollectionCreatorFactoryCore"/>
            in a custom manager.
            </para>
             <para>The factory is used to initialize a business operation context property.</para>
            </remarks>
            <seealso cref="!:Xafari.BC.BusinessOperations.Attributes.ContextPropertyAttribute"/>
            <seealso cref="T:Xafari.BC.BusinessOperations.BusinessOperationBase"/>
            <seealso cref="T:Xafari.BC.BusinessOperations.BusinessOperationManager"/>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreatorFactory.Make(System.Type)">
            <summary>
            Creates instance of Collection Creator based on specified the generic collection type.
            </summary>
            <param name="genericCollectionType">Abstract of concrete type of generic collection.</param>
            <returns>Instance of appropriate the Collection Creator or raise exception <see cref="T:System.NotSupportedException"/> 
            if the specified generic collection type is not supported.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreatorFactory.MakeCore(System.Type)">
            <summary>
            Creates instance of Collection Creator based on specified the generic collection type.
            </summary>
            <param name="genericCollectionType">Abstract of concrete type of generic collection.</param>
            <returns>Instance of appropriate the Collection Creator or null if the specified generic collection type is not supported.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreatorFactory.IsSupportedGenericCollection(System.Type)">
            <summary>
            Determines whether the specified type is generic collection type which is supported by the factory.
            </summary>
            <param name="genericCollectionType">Abstract of concrete <see cref="T:System.Type"/> of generic collection.</param>
            <returns><b>true</b>if the the specified type is supported generic collection type; otherwise, <b>false</b>.</returns>
            <remarks>All generic types of collection inherit from IEnumerable. Therefore the reachability only IEnumerable is tested.</remarks>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.HashSetCreator">
            <compilewhen>never</compilewhen>
            <summary>
            For internal use.
            Creates the collection based on <see cref="T:System.Collections.Generic.HashSet`1"/> and fills it with elements from <i>dataSource</i>.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.ICollectionCreator">
            <summary>
            Declares members implemented by Collection Creators.
            </summary>
            <remarks>For the additional information see <see cref="T:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreator"/>.</remarks>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.CollectionCreators.ICollectionCreator.Create(System.Collections.IEnumerable)">
            <summary>
            Factory method, which creates the collection's instance of the concrete type which depends from an interface implementation 
            and fills the collection with elements from specified <paramref name="dataSource"/>.
            </summary>
            <param name="dataSource">Data source of elements to fill the result collection.</param>
            <returns>The collection's instance of concrete type.</returns>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.ICollectionCreatorFactory">
            <summary>
            Declares members implemented by Collection Creators Factory.
            </summary>
            <remarks>For the additional information see <see cref="T:Xafari.BC.BusinessOperations.CollectionCreators.CollectionCreatorFactory"/>.</remarks>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.CollectionCreators.ICollectionCreatorFactory.Make(System.Type)">
            <summary>
            Factory method, which creates instance of appropriate Collection Creator based on specified <paramref name="genericCollectionType"/>.
            </summary>
            <param name="genericCollectionType">Abstract of concrete <see cref="T:System.Type"/> of generic collection.</param>
            <returns>Instance of appropriate the Collection Creator.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.CollectionCreators.ICollectionCreatorFactory.IsSupportedGenericCollection(System.Type)">
            <summary>
            Determines whether the specified type is generic collection type which is supported by the factory.
            </summary>
            <param name="genericCollectionType">Abstract of concrete <see cref="T:System.Type"/> of generic collection.</param>
            <returns><b>true</b>if the the specified type is supported generic collection type; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.LinkedListCreator">
            <compilewhen>never</compilewhen>
            <summary>
            For internal use.
            Creates the collection based on <see cref="T:System.Collections.Generic.LinkedList`1"/> and fills it with elements from <i>dataSource</i>.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.ListCreator">
            <compilewhen>never</compilewhen>
            <summary>
            For internal use.
            Creates the collection based on <see cref="T:System.Collections.Generic.List`1"/> and fills it with elements from <i>dataSource</i>.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.QueueCreator">
            <compilewhen>never</compilewhen>
            <summary>
            For internal use.
            Creates the collection based on <see cref="T:System.Collections.Generic.Queue`1"/> and fills it with elements from <i>dataSource</i>.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.SortedSetCreator">
            <compilewhen>never</compilewhen>
            <summary>
            For internal use.
            Creates the collection based on <see cref="T:System.Collections.Generic.SortedSet`1"/> and fills it with elements from <i>dataSource</i>.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.StackCreator">
            <compilewhen>never</compilewhen>
            <summary>
            For internal use.
            Creates the collection based on <see cref="T:System.Collections.Generic.Stack`1"/> and fills it with elements from <i>dataSource</i>.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.CollectionCreators.SynchronizedCollectionCreator">
            <compilewhen>never</compilewhen>
            <summary>
            For internal use.
            Creates the collection based on <see cref="T:System.Collections.Generic.SynchronizedCollection`1"/> and fills it with elements from <i>dataSource</i>.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.ContextBusinessOperationHelper">
            <summary>
            Helper class to work with contextual business operations.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.ContextBusinessOperationHelper.#ctor(Xafari.BC.BusinessOperations.IBusinessOperation,Xafari.BC.BusinessOperations.CollectionCreators.ICollectionCreatorFactory)">
            <summary>
            Creates an instance of the helper of context business operation.
            </summary>
            <param name="businessOperation">Business operation, contains context properties.</param>
            <param name="collectionCreatorFactory">Collection creator factory instance.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.ContextBusinessOperationHelper.SetListContext(System.Collections.IEnumerable)">
            <summary>
            Fills the list context property of business operation  with a specified list of objects.
            </summary>
            <param name="source">Data source.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.ContextBusinessOperationHelper.SetContext(System.Object)">
            <summary>
            Sets a new value of the context property.
            </summary>
            <param name="obj">A context object.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.ContextBusinessOperationHelper.SetContext(System.Collections.IEnumerable)">
            <summary>
            Sets a new value of the context property.
            </summary>
            <param name="objs">Collection of context objects.</param>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.ContextBusinessOperationHelper.IsContextPropertyList">
            <summary>
            Indicates whether the context property is a collection (property of the list context business operation).
            </summary>
            <remarks>All generic collection types are inherited from IEnumerable, so checking for achievable only this type.</remarks>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.ExecutionWays">
            <summary>
            Contains values specifying business operations execution ways.
            </summary>
            <remarks>
            Members of the enumeration specify the business operation execution way if it is executed in managed context.
            </remarks>
        </member>
        <member name="F:Xafari.BC.BusinessOperations.ExecutionWays.Synchronous">
            <summary>
            A business operation will be executed synchronous.
            </summary>
        </member>
        <member name="F:Xafari.BC.BusinessOperations.ExecutionWays.Asynchronous">
            <summary>
            A business operation will be executed asynchronous.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.IBusinessOperation">
            <summary>
            Business operation.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.IBusinessOperation.Id">
            <summary>
            Business operation identifier.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.IBusinessOperation.Name">
            <summary>
            Business operation name.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.IBusinessOperation.Model">
            <summary>
            Business operation Model node.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.IBusinessOperation.IsReversible">
            <summary>
            Indicates whether the current default implementer supports the rollback possibility.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.IBusinessOperation.Execute">
            <summary>
            Business operation execution.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.IBusinessOperation.Rollback">
            <summary>
            Business operation rollback.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.IBusinessOperation.GetPropertyValue(System.String,System.Object[])">
            <summary>
            Returns a value for the specified public property.
            </summary>
            <param name="name">The name of the public property.</param>
            <param name="index">Optional index values for indexed properties.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.IBusinessOperation.SetPropertyValue(System.String,System.Object,System.Object[])">
            <summary>
            Sets a new value for the specified public property.
            </summary>
            <param name="name">The name of the public property.</param>
            <param name="value">An object which specifies the new property value.</param>
            <param name="index">Optional index values for indexed properties.</param>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.IBusinessOperation.Executing">
            <summary>
            Occurs before business operation execution.
            </summary>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.IBusinessOperation.Executed">
            <summary>
            Occurs after business operation execution.
            </summary>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.IBusinessOperation.RollingBack">
            <summary>
            Occurs before business operation rollback execution.
            </summary>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.IBusinessOperation.RolledBack">
            <summary>
            Occurs after business operation rollback execution.
            </summary>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.IBusinessOperation.RunCanceled">
            <summary>
            Occurs when a Business Operations was canceled.
            </summary>
        </member>
        <member name="E:Xafari.BC.BusinessOperations.IBusinessOperation.HandleException">
            <summary>
            Occurs when exception was created during business operation execution.
            </summary>
            <remarks>The event handler can set e.Handled to true. In this case, the exception is suppressed.</remarks>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.IBusinessOperationContainer">
            <summary>
            List of business operations and their implementers.
            </summary>
            <remarks> Module containing the definition of business operations BO should implement this interface in the successor ModuleBase. </remarks>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.IBusinessOperationContainer.BusinessOperationTypes">
             <summary>
            Property should return instances of business operations  types and their implementers, declared in a module. The order is not important.
             </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.IOperationService">
            <summary>
            Business operation implementer.
            All business operation implementers must implement this interface.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.IOperationService.Id">
            <summary>
            Business operation implementer identifier.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.IOperationService.Name">
            <summary>
            Business operation implementer name.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.IOperationService.Model">
            <summary>
            Business operation implementer Model node.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.IOperationService.Execute(Xafari.BC.BusinessOperations.IBusinessOperation)">
            <summary>
            Execution of the business operation.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.IOperationServiceReversible">
            <summary>
            Implementer of business operation, that supports the ability to rollback.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.ISetContextSupport">
            <summary>
            Declares methods to set a context property.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.ISetContextSupport.SetContext(System.Object,DevExpress.ExpressApp.IObjectSpace)">
            <summary>
            Sets a new value of the context property.
            </summary>
            <param name="obj">A context object.</param>
            <param name="objectSpace">Object Space of a context object.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.ISetContextSupport.SetContext(System.Collections.IEnumerable,DevExpress.ExpressApp.IObjectSpace)">
            <summary>
            Sets a new value of the context property.
            </summary>
            <param name="objs">Collection of context objects.</param>
            <param name="objectSpace">Object Space of context objects.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Model.BusinessOperationModelNodesGenerator.AddBusinessOperationModelNode(Xafari.BC.BusinessOperations.Model.IModelBusinessOperations,System.Collections.Generic.KeyValuePair{System.Type,System.Collections.Generic.List{System.Type}})">
            <summary>
            Generates model's node representing a Business Operation.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.Model.BusinessOperationModelNodesGenerator.GenerateOperationServiceNodes(Xafari.BC.BusinessOperations.Model.IModelBusinessOperation,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Generates model's nodes representing implementations of specified Business Operation.
            </summary>
            <param name="boNode">Model node of a Business Operation.</param>
            <param name="operationServices">List of Business Operation Services types.</param>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Model.IModelXafariServicesBusinessOperations">
            <summary>
            Business Operations Services Model
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Model.IModelBusinessOperationsBC">
            <summary>
            Model node "ModelApplication\Xafari\BusinessOperations"
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Model.IModelBusinessOperation">
            <summary>
            Node representing a single business operation.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Model.IModelBusinessOperationContext">
            <summary>
            Node representing a context business operation.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Model.IModelOperationService">
            <summary>
            Implementation of a business operation.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.Model.IModelBusinessOperationParameter">
            <summary>
            Parameter of a business operation.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.Model.IModelBusinessOperationParameter.Type">
            <summary>
            Specifies the parameter class.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.Model.IModelBusinessOperationParameter.Term">
            <summary>
            While is not used.
            </summary>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.OperationServiceBase">
            <summary>
            Base class for business operation implementers.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.OperationServiceBase.Model">
            <summary>
            Provide access to the Model node of the current implementer of business operation.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.OperationServiceBase.Id">
            <summary>
            Business operation implementer identifier.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.OperationServiceBase.Name">
            <summary>
            Business operation implementer name.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.OperationServiceBase.Execute(Xafari.BC.BusinessOperations.IBusinessOperation)">
            <summary>
            Execution of the business operation.
            </summary>
            <param name="businessOperation">Reference to a business operation, whose implementer is the current object.</param>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.OperationServiceBase.GetId(System.Type)">
            <summary>
            Returns ID of a business operation implementer's type.
            </summary>
            <param name="operationServiceType">Business operation implementer type.</param>
            <returns>Identifier.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.OperationServiceBase.GetDescription(System.Type)">
            <summary>
            Returns description of the specified business operation implementer type.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.OperationServiceBase.GetName(System.Type)">
            <summary>
            Returns name of the specified business operation implementer type.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.OperationServiceBase.GetBOTypeOfService(System.Type)">
            <summary>
            Returns type of business operation, which is implemented by the specified implementer type. This relation is based on the value of the attribute BusinessOperationAttribute.
            </summary>
            <param name="operationServiceType">Type of Implementer.</param>
            <returns>Returns the class type of business operation, or null, if the BusinessOperationAttribut is not defined for the specified implementer class.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.OperationServiceBase.GetModelNode(System.String)">
            <summary>
            Finds the Model node of the specified implementer of business operation.
            </summary>
            <param name="operationServiceId">Implementer identifier.</param>
            <returns>Returns a reference to the found node, or null, if the node is not found.</returns>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.OperationServiceBase.CreateInstance(Xafari.BC.BusinessOperations.Model.IModelOperationService)">
            <summary>
            Creates an instance of the implementer of business operation on the basis of information from the application Model.
            </summary>
            <param name="operationServiceModelNode">The Model node of the business operation implementer.</param>
            <returns>Returns a reference to the created instance.</returns>
        </member>
        <member name="T:Xafari.BC.BusinessOperations.RunCanceledEventArgs">
            <summary>
            Arguments passed to the <see cref="E:Xafari.BC.BusinessOperations.IBusinessOperation.RunCanceled"/> event.
            </summary>
        </member>
        <member name="P:Xafari.BC.BusinessOperations.RunCanceledEventArgs.Method">
            <summary>
            Specifies the method which is canceled.
            </summary>
        </member>
        <member name="M:Xafari.BC.BusinessOperations.RunCanceledEventArgs.#ctor(Xafari.BC.BusinessOperations.BusinessOperationMethod)">
            <summary>
            Creates a new instance of the class.
            </summary>
            <param name="method">The method which is canceled.</param>
        </member>
        <member name="T:Xafari.BC.Services.AdditionalCriteriaServiceBase`2">
            <summary>
            Base class to customize <see cref="T:Xafari.BC.DataAccessorService"/> methods with additional criteria.
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="T"></typeparam>
            <remarks>
            Deactivate service to remove additional criteria from <see cref="T:Xafari.BC.DataAccessorService"/>.
            </remarks>
        </member>
        <member name="T:Xafari.BC.Services.InitializeServiceStrategy">
            <summary>
            Declares initialize strategy for <see cref="T:Xafari.BC.Services.IXafariCommonService"/>.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.InitializeServiceStrategy.OnFirstUse">
            <summary>
            Initialize <see cref="T:Xafari.BC.Services.IXafariCommonService"/> on first use.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.InitializeServiceStrategy.OnApplicationSetupComplete">
            <summary>
            Initialize <see cref="T:Xafari.BC.Services.IXafariCommonService"/> on <see cref="T:DevExpress.ExpressApp.XafApplication"/> setup complete.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.CreateServiceSpaceContextStrategy">
            <summary>
            Declares create <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> instance strategy.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.CreateServiceSpaceContextStrategy.OnFirstUse">
            <summary>
            <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> instance must be created on first use.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.CreateServiceSpaceContextStrategy.OnServiceSpaceCreate">
            <summary>
            <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> instance must be created on <see cref="T:Xafari.BC.Services.IServiceSpace"/> is created.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.IServicesModel">
            <summary>
            Base non-generic interface for <see cref="!:IServiceModel&lt;TModel&gt;"/>
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.IServicesModel`1">
            <summary>
            Specifies that the implementor is depend of ServicesModelService
            </summary>
            <typeparam name="TModel">
            Type of service model node
            </typeparam>
            <example>
            public IModelServicesNumerators Model
            {
            	get { return ServicesModelService.Instance.Model.Numerators(); }
            }
            </example>
        </member>
        <member name="T:Xafari.BC.Services.ObjectSpaceFactory">
            <summary>
            Global service to execute bulk actions in the same <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> context.
            </summary>
            <remarks>
            Use this service if any code must be executed in the same <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> instance context.
            For example, module updater must always to use single <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> instance.
            </remarks>
            <example>
            This sample to use <see cref="M:Xafari.BC.Services.ObjectSpaceFactory.BulkAction(DevExpress.ExpressApp.IObjectSpace,System.Action{DevExpress.ExpressApp.IObjectSpace})"/> method with <see cref="T:Xafari.BC.XafariModuleUpdater"/>.
            <code>
            ObjectSpaceFactory.Instance.BulkAction(ObjectSpace, objectSpace => this.SafeUpdateDatabaseAfterUpdateSchema());
            </code>
            This sample to use <see cref="T:Xafari.BC.Services.ObjectSpaceFactory"/> in code.
            
            <code>
            using (var objectSpace = ObjectSpaceFactory.Instance.CreateObjectSpace())
            </code>
            </example>
        </member>
        <member name="M:Xafari.BC.Services.ObjectSpaceFactory.CreateObjectSpace(System.Type)">
            <summary>
            Create new <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> instance if current instance is null; otherwise, create <see cref="T:DevExpress.ExpressApp.INestedObjectSpace"/> instance.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.ObjectSpaceFactory.GetObjectSpace(System.Type)">
            <summary>
            Return current <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> instance if current is not null; otherwise, create new <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> instance.
            </summary>
            <remarks>
            To create new <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> instance call <see cref="M:Xafari.BC.Services.ObjectSpaceFactory.CreateObjectSpace(System.Type)"/> method.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Services.ObjectSpaceFactory.BulkAction(DevExpress.ExpressApp.IObjectSpace,System.Action{DevExpress.ExpressApp.IObjectSpace})">
            <summary>
            Executes <paramref name="action"/> with <paramref name="rootObjectSpace"/> as global context.
            </summary>
            <param name="rootObjectSpace"><see cref="T:DevExpress.ExpressApp.IObjectSpace"/> context to execute <paramref name="action"/>.</param>
            <param name="action">Action to execute in specified <paramref name="rootObjectSpace"/> context.</param>
        </member>
        <member name="M:Xafari.BC.Services.ObjectSpaceFactory.BulkFunc``1(DevExpress.ExpressApp.IObjectSpace,System.Func{DevExpress.ExpressApp.IObjectSpace,``0})">
            <summary>
            Executes <paramref name="func"/> with <paramref name="rootObjectSpace"/> as global context.
            </summary>
            <param name="rootObjectSpace"><see cref="T:DevExpress.ExpressApp.IObjectSpace"/> context to execute <paramref name="func"/>.</param>
            <param name="func">Action to execute in specified <paramref name="rootObjectSpace"/> context.</param>
        </member>
        <member name="T:Xafari.BC.Services.CommonServiceViewControllerBase`2">
            <summary>
            Base class to implement <see cref="T:DevExpress.ExpressApp.View"/> logics for specified <see cref="T:Xafari.BC.Services.XafariCommonService"/>.
            </summary>
            <typeparam name="TService">Xafari service type</typeparam>
            <typeparam name="ViewType">Target view type</typeparam>
            <remarks>
            Controller monitors for the <see cref="P:Xafari.BC.Services.CommonServiceViewControllerBase`2.Service"/> activity and simultaneously change own <see cref="!:Active"/> value.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Services.CommonServiceViewControllerBase`2.Service">
            <summary>
            Gets the current Xafari service instance.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.CommonServiceViewControllerBase`1">
            <summary>
            Base class to implement <see cref="T:DevExpress.ExpressApp.View"/> logics for specified <see cref="T:Xafari.BC.Services.XafariCommonService"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.ServiceSpace(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
            Returns existed or creates new <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance for <paramref name="objectSpace"/>.
            </summary>
            <param name="objectSpace"></param>
            <returns></returns>
            <seealso cref="!:ServiceSpacesManager.CreateServiceUnitOfWorktSpace"/>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.BulkFunc``1(DevExpress.ExpressApp.IObjectSpace,System.Func{Xafari.BC.Services.IServiceSpace,``0})">
            <summary>
            Invokes <paramref name="func"/> with <see cref="T:Xafari.BC.Services.IServiceSpace"/> environment for <paramref name="objectSpace"/>.
            </summary>
            <param name="objectSpace"></param>
            <param name="func"></param>
            <remarks>
            Creates and automatically commit changes by <see cref="M:Xafari.BC.Services.IServiceSpace.CommitChanges"/>, 
            if <paramref name="objectSpace"/> does not contains current <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.BulkAction(DevExpress.ExpressApp.IObjectSpace,System.Action{Xafari.BC.Services.IServiceSpace})">
            <summary>
            Invokes <paramref name="action"/> with <see cref="T:Xafari.BC.Services.IServiceSpace"/> environment for <paramref name="objectSpace"/>.
            </summary>
            <param name="objectSpace"></param>
            <param name="action"></param>
            <remarks>
            Creates and automatically commit changes by <see cref="M:Xafari.BC.Services.IServiceSpace.CommitChanges"/>, 
            if <paramref name="objectSpace"/> does not contains current <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.CreateServiceSpace(Xafari.Helpers.XafApplicationHelper)">
            <summary>
            Creates <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> for <paramref name="application"/> and then creates <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance for this object space.
            </summary>
            <param name="application"></param>
            <returns></returns>
            <remarks>
            Object space does not commit automatically.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.BulkAction(DevExpress.ExpressApp.XafApplication,System.Action{Xafari.BC.Services.IServiceSpace},System.Boolean)">
            <summary>
            Creates <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> and invokes <paramref name="action"/> with <see cref="T:Xafari.BC.Services.IServiceSpace"/> environment for this object space.
            </summary>
            <param name="application"></param>
            <param name="action"></param>
            <param name="autoCommit">Specify <see cref="M:DevExpress.ExpressApp.IObjectSpace.CommitChanges"/> invoke after execute <paramref name="action"/></param>
            <remarks>
            Object space does not commit automatically.
            <seealso cref="!:BulkAction(DevExpress.ExpressApp.IObjectSpace,System.Action&lt;IServiceObjectSpace&gt;)"/>
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.BulkFunc``1(DevExpress.ExpressApp.XafApplication,System.Func{Xafari.BC.Services.IServiceSpace,``0},System.Boolean)">
            <summary>
            Creates <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> and invokes <paramref name="func"/> with <see cref="T:Xafari.BC.Services.IServiceSpace"/> environment for this object space.
            </summary>
            <param name="application"></param>
            <param name="func"></param>
            <param name="autoCommit">Specify <see cref="M:DevExpress.ExpressApp.IObjectSpace.CommitChanges"/> invoke after execute <paramref name="func"/></param>
            <remarks>
            Object space does not commit automatically.
            <seealso cref="!:BulkFunc&lt;TResult&gt;(DevExpress.ExpressApp.IObjectSpace,System.Func&lt;IServiceObjectSpace,TResult&gt;)"/>
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.FindServiceContext``1(Xafari.BC.Services.IServiceSpace,Xafari.BC.Services.IXafariService)">
            <summary>
            Finds <typeparamref name="TServiceContext"/> instance for <paramref name="service"/> in <paramref name="serviceSpace"/>.
            </summary>
            <typeparam name="TServiceContext"></typeparam>
            <param name="serviceSpace"></param>
            <param name="service"></param>
            <returns></returns>
            <remarks>
            <seealso cref="M:Xafari.BC.Services.IServiceSpace.FindServiceContext(Xafari.BC.Services.IXafariService)"/>
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.DataAccessor(Xafari.BC.Services.IServiceSpace)">
            <summary>
            Returns <see cref="T:Xafari.BC.DataAccessorService.DataAccessor"/> instance for specified <paramref name="serviceSpace"/>.
            </summary>
            <param name="serviceSpace"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.HierarchyService(Xafari.BC.Services.IServiceSpace)">
            <summary>
            Returns <see cref="T:Xafari.BC.HierarchicalData.HierarchyManager.ServiceSpaceContext"/> instance for specified <paramref name="serviceSpace"/>.
            </summary>
            <param name="serviceSpace"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Services.Extensions.ServicesModel(Xafari.BC.Services.IServiceSpace)">
            <summary>
            Returns <see cref="T:Xafari.BC.Services.ServicesModelService.ServiceSpaceContext"/> instance for specified <paramref name="serviceSpace"/>.
            </summary>
            <param name="serviceSpace"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.Services.IXafariService">
            <summary>
            Declares Xafari service members.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.IXafariService.CreateServiceContext(Xafari.BC.Services.IServiceSpace)">
            <summary>
            Creates service context instance for <paramref name="serviceSpace"/>.
            </summary>
            <param name="serviceSpace"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.Services.IServiceSpaceContext">
            <summary>
            Declares service space context members.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.IServiceSpaceContext.Rollback">
            <summary>
            Rollback changes for <see cref="P:Xafari.BC.Services.IServiceSpaceContext.Service"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.IServiceSpaceContext.CommitChanges">
            <summary>
            Commit changes for <see cref="P:Xafari.BC.Services.IServiceSpaceContext.Service"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.IServiceSpaceContext.Reload">
            <summary>
            Reload data for <see cref="P:Xafari.BC.Services.IServiceSpaceContext.Service"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.IServiceSpaceContext.Service">
            <summary>
            Gets xafari service instance owner.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.IServiceSpaceContext.ServiceSpace">
            <summary>
            Gets service space instance owner.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.IServiceSpaceContext.Setup">
            <summary>
            Performs additional setup.
            Invokes by <see cref="!:IServiceSpace.RegisterService"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.IServiceObjectSpaceContext.ServiceSpace">
            <summary>
            Gets service space instance owner.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.IServiceUnitOfWorkContext.ServiceSpace">
            <summary>
            Gets service space instance owner.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.IServiceSpace">
            <summary>
            Declares service space members.
            </summary>
            <remarks>
            Uses to work with Xafari Services Framework.
            Service Space this is additional ability for <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> and served to implement abilities to use Commit and Rollback methods for
            any <see cref="T:Xafari.BC.Services.IXafariService"/>.
            Service Space lives inside <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            Every instance <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> can contain just one alive service space instance.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.IServiceSpace.FindServiceContext(Xafari.BC.Services.IXafariService)">
            <summary>
            Returns <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> instance for <paramref name="service"/>.
            </summary>
            <param name="service">Service instance.</param>
            <returns></returns>
        </member>
        <member name="E:Xafari.BC.Services.IServiceSpace.RollingBack">
            <summary>
            Raises when <see cref="M:Xafari.BC.Services.IServiceSpace.Rollback"/> method invoked.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.IServiceSpace.Rollback">
            <summary>
            Rollback changes for all registered services.
            </summary>
        </member>
        <member name="E:Xafari.BC.Services.IServiceSpace.Committed">
            <summary>
            Raises when <see cref="M:Xafari.BC.Services.IServiceSpace.CommitChanges"/> method invoked.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.IServiceSpace.CommitChanges">
            <summary>
            Commit changes for all registered services.
            </summary>
        </member>
        <member name="E:Xafari.BC.Services.IServiceSpace.Disposed">
            <summary>
            Occurs after an Service Space has been disposed of. 
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.IServiceSpace.Mode">
            <summary>
            Specified current services mode.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.IServiceObjectSpace.ObjectSpace">
            <summary>
            Gets <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> instance owner.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.IServiceUnitOfWork.UnitOfWork">
            <summary>
            Gets <see cref="P:Xafari.BC.Services.IServiceUnitOfWork.UnitOfWork"/> instance owner.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.ServiceModes">
            <summary>
            Contains <see cref="T:Xafari.BC.Services.IServiceSpace"/> modes to operate with <see cref="T:Xafari.BC.Services.IXafariService"/>.
            By default used <see cref="F:Xafari.BC.Services.ServiceModes.Bulk"/> mode.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.ServiceModes.Default">
            <summary>
            Default service mode equals to <see cref="F:Xafari.BC.Services.ServiceModes.Bulk"/> mode.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.ServiceModes.UI">
            <summary>
            UI service mode used on Views and immediatly performs service operations.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.ServiceModes.Bulk">
            <summary>
            Bulk service mode used by operations and delays service operations until <see cref="M:Xafari.BC.Services.IServiceSpace.CommitChanges"/> is called.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.ServiceModes.Import">
            <summary>
            Import service mode used by import data operations.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.ServiceModes.Immediate">
            <summary>
            Immediate service mode equals to <see cref="F:Xafari.BC.Services.ServiceModes.UI"/> mode.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.ServiceSpacesManager">
            <summary>
            Provides runtime execution for Xafari Services Framework.
            </summary>
            <remarks>
            Implements methods to binding <see cref="T:Xafari.BC.Services.IServiceSpace"/> with <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Services.ServiceSpacesManager.IsCurrentUserDependent">
            <summary>
            Indicates that service is dependent from current user.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.ServiceSpacesManager.CreateServiceSpace(DevExpress.ExpressApp.IObjectSpace,System.Boolean)">
            <summary>
            Creates <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance for <paramref name="objectSpace"/>.
            </summary>
            <param name="objectSpace">For this instance <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> services space is creating.</param>
            <param name="forceException">Indicates to raise execption if <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance already exists for <paramref name="objectSpace"/>.</param>
            <returns>
            Returns new <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance, if it does not exist for <paramref name="objectSpace"/>.
            Otherwise, returns current <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance for <paramref name="objectSpace"/> if <paramref name="forceException"/> has <b>false</b>,
            or raised <see cref="T:System.InvalidOperationException"/> if <paramref name="forceException"/> has <b>true</b>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            Raised if <paramref name="forceException"/> has <b>true</b> and <paramref name="objectSpace"/> already has current <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance.
            </exception>
        </member>
        <member name="M:Xafari.BC.Services.ServiceSpacesManager.FindServiceObjectSpace(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
            Tries to find current <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance for <see cref="!:objectSpace"/>.
            </summary>
            <param name="objectSpace"></param>
            <returns>
            Returns <b>null</b> if <paramref name="objectSpace"/> does not have any <see cref="T:Xafari.BC.Services.IServiceSpace"/>.
            </returns>
        </member>
        <member name="M:Xafari.BC.Services.ServiceSpacesManager.CollectXafariServiceTypesFromAssembly(System.Reflection.Assembly)">
            <summary>
            Collect all <see cref="T:Xafari.BC.Services.XafariCommonService"/> types in specified assembly.
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="E:Xafari.BC.Services.ServiceSpacesManager.ServiceSpaceCreated">
            <summary>
            Occurs when new <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance is created.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.ServiceSpaceCreatedEventArgs">
            <summary>
            Defines event arguments for <see cref="E:Xafari.BC.Services.ServiceSpacesManager.ServiceSpaceCreated"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.ServiceSpaceCreatedEventArgs.ServiceSpace">
            <summary>
            Gets created <see cref="T:Xafari.BC.Services.IServiceSpace"/> instance.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.ServicesModelService">
            <summary>
            Service to manage Xafari services settings.
            Used to edit serivices settings.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.ServicesModelService.ServiceSpaceContext.Edit">
            <summary>
            Gets <see cref="T:Xafari.Model.IModelApplicationXafari"/> instance to modify business model properties.
            </summary>
            <remarks>
            Reload business model settings from store and release local cache.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Services.ServicesModelService.ServiceSpaceContext.Read">
            <summary>
            Gets <see cref="T:Xafari.Model.IModelApplicationXafari"/> instance which deserialized directly from store.
            </summary>
            <remarks>
            Business model local cahce is used.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.ServicesModelService.ServiceSpaceContext.Update">
            <summary>
            For internal use.
            Performs update services model by copy from Application Model.
            </summary>
            <remarks>
            Used to compatibility with previous versions.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.ServicesModelService.CreateServicesModelLayer(System.String,System.Boolean)">
            <summary>
            Creates services model layer by load from store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.Services.ServicesModelService.SaveServicesModelLayer(DevExpress.ExpressApp.Model.Core.ModelApplicationBase)">
            <summary>
            Save specified <paramref name="layer"/> as services model layer.
            </summary>
            <param name="layer"></param>
        </member>
        <member name="M:Xafari.BC.Services.ServicesModelService.LoadServicesModelLayer(DevExpress.ExpressApp.Model.Core.ModelApplicationBase)">
            <summary>
            Save specified <paramref name="layer"/> as services model layer.
            </summary>
            <param name="layer"></param>
        </member>
        <member name="P:Xafari.BC.Services.ServicesModelService.Model">
            <summary>
            Returns <see cref="T:Xafari.Model.IModelXafariServicesModel"/> instance from additional model.
            Use this instance to read service settings.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.ServiceSpace">
            <summary>
            Implements <see cref="T:Xafari.BC.Services.IServiceSpace"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.ServiceSpace.Mode">
            <summary>
            Sets and gets data operation service mode
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.ServiceNestedObjectSpace">
            <summary>
            Implements <see cref="T:Xafari.BC.Services.IServiceObjectSpace"/> for <see cref="T:DevExpress.ExpressApp.INestedObjectSpace"/>.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.ServiceNestedUnitOfWork">
            <summary>
            Implements <see cref="T:Xafari.BC.Services.IServiceObjectSpace"/> for <see cref="T:DevExpress.ExpressApp.INestedObjectSpace"/>.
            </summary>
        </member>
        <member name="T:Xafari.BC.Services.XafariCommonService`1">
            <summary>
            Base class to implement <see cref="T:Xafari.BC.Services.IXafariCommonService"/>.
            </summary>
            <typeparam name="TService"></typeparam>
            <seealso cref="T:Xafari.Base.IActiveProvider"/>
            <seealso cref="T:Xafari.Utils.ActiveScope"/>
        </member>
        <member name="P:Xafari.BC.Services.XafariCommonService`1.Instance">
            <summary>
            Gets the <see cref="!:TService"/> for current <see cref="T:System.Threading.Thread"/>.
            </summary>
        </member>
        <member name="F:Xafari.BC.Services.XafariCommonService`1.CreateServiceInstance">
            <summary>
            Class factory for <typeparamref name="TService"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService`1.RegisterService(DevExpress.ExpressApp.XafApplication)">
            <summary>
            Creates instance of <typeparamref name="TService"/> and <see cref="M:Xafari.BC.Services.XafariCommonService.Register(DevExpress.ExpressApp.XafApplication)">register</see> it.
            </summary>
            <param name="application"></param>
            <returns></returns>
            <remarks>
            Uses <see cref="F:Xafari.BC.Services.XafariCommonService`1.CreateServiceInstance"/> to create serivce instance.
            </remarks>
        </member>
        <member name="T:Xafari.BC.Services.XafariCommonService">
            <summary>
            Base class to implement <see cref="T:Xafari.BC.Services.IXafariCommonService"/>.
            </summary>
            <seealso cref="T:Xafari.Base.IActiveProvider"/>
            <seealso cref="T:Xafari.Utils.ActiveScope"/>
        </member>
        <member name="P:Xafari.BC.Services.XafariCommonService.InitializeStrategy">
            <summary>
            Specifies service initialization strategy.
            </summary>
            <remarks>
            By default returns <see cref="F:Xafari.BC.Services.InitializeServiceStrategy.OnFirstUse"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.SetServiceInstance">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.Register(DevExpress.ExpressApp.XafApplication)">
            <summary>
            Register this instance for specified <paramref name="application"/> and <see cref="M:Xafari.BC.Services.XafariCommonService.Setup(DevExpress.ExpressApp.XafApplication)"/> it.
            </summary>
            <param name="application"></param>
            Set this object as current service instance and calls <see cref="M:Xafari.BC.Services.XafariCommonService.Setup(DevExpress.ExpressApp.XafApplication)"/> method.
            Use this method careful. This method overrides 
            <returns></returns>
        </member>
        <member name="P:Xafari.BC.Services.XafariCommonService.Active">
            <summary>
            Indicates than service is active.
            </summary>
        </member>
        <member name="E:Xafari.BC.Services.XafariCommonService.Deactivated">
            <summary>
            Occurs after service instance is deactivated.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.OnDeactivated">
            <summary>
            Override this method to execute specific code when service is deactivated.
            </summary>
        </member>
        <member name="E:Xafari.BC.Services.XafariCommonService.Activated">
            <summary>
            Occurs after service instance is activated.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.OnActivated">
            <summary>
            Override this method to execute specific code when service is activated.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.XafariCommonService.IsInitialized">
            <summary>
            Indicates that service instance is initialized by method <see cref="M:Xafari.BC.Services.XafariCommonService.Initialize"/>.
            </summary>
        </member>
        <member name="E:Xafari.BC.Services.XafariCommonService.Initialized">
            <summary>
            Occurs after <see cref="M:Xafari.BC.Services.XafariCommonService.Initialize"/> method called.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.OnInitialized(System.EventArgs)">
            <summary>
            Raise the event <see cref="E:Xafari.BC.Services.XafariCommonService.Initialized"/>.
            </summary>
        </member>
        <member name="E:Xafari.BC.Services.XafariCommonService.Initializing">
            <summary>
            Occurs after <see cref="M:Xafari.BC.Services.XafariCommonService.Initialize"/> method called.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.OnInitializing(System.EventArgs)">
            <summary>
            Raise the event <see cref="E:Xafari.BC.Services.XafariCommonService.Initializing"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.Initialize">
            <summary>
            Initializes service instance. Have to invoked when service is used.
            </summary>
            <remarks>
            Unlike <see cref="M:Xafari.BC.Services.XafariCommonService.Setup(DevExpress.ExpressApp.XafApplication)"/> method performs initialization service instance.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.InitializeAndCheckActive(System.Boolean)">
            <summary>
            Try to initialize service and check <see cref="P:Xafari.BC.Services.XafariCommonService.Active"/>.
            </summary>
            <param name="raiseException">
            Indicates to raise exception if service instance is not active.
            By default, <b>true</b>.
            </param>
            <returns>
            Returns <b>true</b> if service instance is active; otherwise <b>false</b>.
            </returns>
            <exception cref="T:System.InvalidOperationException">if <paramref name="raiseException"/> is true and service instance is not active.</exception>
        </member>
        <member name="E:Xafari.BC.Services.XafariCommonService.Resetted">
            <summary>
            Occurs after <see cref="M:Xafari.BC.Services.XafariCommonService.Reset"/> method called.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.OnResetted(System.EventArgs)">
            <summary>
            Raise the event <see cref="E:Xafari.BC.Services.XafariCommonService.Resetted"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.InitializeCore">
            <summary>
            Override this method to implement specific initialization service instance.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.Reset">
            <summary>
            Reset service instance. Reverse method for <see cref="M:Xafari.BC.Services.XafariCommonService.Initialize"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.ResetCore">
            <summary>
            Override this method to implement specific <see cref="M:Xafari.BC.Services.XafariCommonService.Reset"/> method.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.XafariCommonService.Application">
            <summary>
            Gets the instance of XafApplication
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.XafariCommonService.ApplicationHelper">
            <summary>
            Gets cached <see cref="T:Xafari.Helpers.XafApplicationHelper"/> instance for <see cref="P:Xafari.BC.Services.XafariCommonService.Application"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.Setup(DevExpress.ExpressApp.XafApplication)">
            <summary>
            Performs setting up service instance and bind it to <paramref name="application"/>.
            </summary>
            <param name="application"></param>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.OnApplicationSetupCompleteCore">
            <summary>
            Override this method to execute additional actions on <see cref="T:DevExpress.ExpressApp.XafApplication"/> setup complete.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.LockAction(System.Action)">
            <summary>
            Executes thread safe <paramref name="action"/>.
            </summary>
            <param name="action">Action to execute.</param>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.LockFunc``1(System.Func{``0})">
            <summary>
            Executes thread safe <paramref name="func"/>.
            </summary>
            <param name="func">Function to execute.</param>
        </member>
        <member name="P:Xafari.BC.Services.XafariCommonService.IsCurrentUserDependent">
            <summary>
            Override this property to specify service dependency from current user value.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.XafariCommonService.IsLoggedOn">
            <summary>
            Indicates that user is logged on successful.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.LoggedOn(DevExpress.ExpressApp.LogonEventArgs)">
            <summary>
            Executes any operations on log on.
            </summary>
            <param name="logonEventArgs"></param>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.LoggedOff(System.EventArgs)">
            <summary>
            Executes <see cref="M:Xafari.BC.Services.XafariCommonService.Reset"/> operation.
            Override this method to perform additional operations on log off.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Xafari.BC.Services.XafariCommonService.LogonFailed(DevExpress.ExpressApp.LogonFailedEventArgs)">
            <summary>
            Executes <see cref="M:Xafari.BC.Services.XafariCommonService.LoggedOff(System.EventArgs)"/> operation.
            Override this method to perform additional operations on log on failed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Xafari.BC.Services.XafariServiceBase`1">
            <summary>
            Base class to implement <see cref="T:Xafari.BC.Services.IXafariService"/>.
            </summary>
            <typeparam name="TService">Xafari Service type</typeparam>
            <seealso cref="T:Xafari.Base.IActiveProvider"/>
            <seealso cref="T:Xafari.Utils.ActiveScope"/>
            <remarks>
            Depeneding on <see cref="P:Xafari.BC.Services.XafariServiceBase`1.CreateServiceSpaceContextStrategy"/> <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> instance is created.
            </remarks>
        </member>
        <member name="T:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase">
            <summary>
            Base class to implement <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> for <typeparamref name="TService"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.Service">
            <summary>
            Gets service instance.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.ServiceSpace">
            <summary>
            Gets service space.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.RollbackCore">
            <summary>
            Rollback changes for <see cref="P:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.Service"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.CommitChangesCore">
            <summary>
            Commit changes for <see cref="P:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.Service"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.ReloadCore">
            <summary>
            Refresh changes for <see cref="P:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.Service"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.InitializeCore">
            <summary>
            Performs additional initialization on <see cref="F:Xafari.BC.Services.XafariCommonService`1.CreateServiceInstance"/> method called.
            </summary>
            <remarks>
            When this methods executing <see cref="P:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.Service"/> and <see cref="P:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.ServiceSpace"/> already initialized.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.DataAccessor">
            <summary>
            Returns <see cref="T:Xafari.BC.DataAccessorService.DataAccessor"/> instance for data operations.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextBase.Active">
            <summary>
            Specifies the active status for this instance.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.XafariServiceBase`1.CreateServiceSpaceContextStrategy">
            <summary>
            Specifies the create <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> strategy.
            </summary>
            <remarks>
            By default contains <see cref="F:Xafari.BC.Services.CreateServiceSpaceContextStrategy.OnFirstUse"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.XafariServiceBase`1.CreateServiceContextCore(Xafari.BC.Services.IServiceSpace)">
            <summary>
            Implement this method to create specific <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> instance.
            </summary>
            <param name="serviceSpace"></param>
            <returns></returns>
        </member>
        <member name="P:Xafari.BC.Services.XafariServiceBase`1.IsApplicationSetupComplete">
            <summary>
            Indicates that <see cref="!:Application"/> setup is complete.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariServiceBase`1.CheckCreateAndFunc``1(Xafari.BC.Services.IServiceSpace,System.Func{Xafari.BC.Services.IServiceSpace,``0},System.Boolean)">
            <summary>
            Invokes <paramref name="func"/> inside <paramref name="serviceSpace"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serviceSpace"></param>
            <param name="func"></param>
            <param name="autoCommit">default value is <b>true</b></param>
            <returns></returns>
            <remarks>
            If <paramref name="serviceSpace"/> is null, creates <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> by <see cref="M:Xafari.BC.Services.ObjectSpaceFactory.CreateObjectSpace(System.Type)"/>,
            invoke <paramref name="func"/> and commit changes if <paramref name="autoCommit"/> is true. 
            </remarks>
        </member>
        <member name="M:Xafari.BC.Services.XafariServiceBase`1.CheckCreateAndAction(Xafari.BC.Services.IServiceSpace,System.Action{Xafari.BC.Services.IServiceSpace},System.Boolean)">
            <summary>
            Invokes <paramref name="action"/> inside <paramref name="serviceSpace"/>.
            </summary>
            <param name="serviceSpace"></param>
            <param name="action"></param>
            <param name="autoCommit"></param>
            <remarks>
            Calls <see cref="M:Xafari.BC.Services.XafariServiceBase`1.CheckCreateAndFunc``1(Xafari.BC.Services.IServiceSpace,System.Func{Xafari.BC.Services.IServiceSpace,``0},System.Boolean)"/>
            </remarks>
        </member>
        <member name="E:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextCreated">
            <summary>
            Occurs after <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> is created and <see cref="M:Xafari.BC.Services.IServiceSpaceContext.Setup"/> executed.
            </summary>
        </member>
        <member name="M:Xafari.BC.Services.XafariServiceBase`1.OnServiceSpaceContextCreated(Xafari.BC.Services.ServiceSpaceContextCreatedEventArgs)">
            <summary>
            Raises <see cref="E:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextCreated"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Xafari.BC.Services.ServiceSpaceContextCreatedEventArgs">
            <summary>
            Event arguments for <see cref="E:Xafari.BC.Services.XafariServiceBase`1.ServiceSpaceContextCreated"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Services.ServiceSpaceContextCreatedEventArgs.ServiceSpaceContext">
            <summary>
            Gets created <see cref="T:Xafari.BC.Services.IServiceSpaceContext"/> instance.
            </summary>
        </member>
        <member name="T:Xafari.BC.BulkEdit.BulkEditObject">
            <summary>
            Contains list of selected objects and provides joint properties list of them.
            Provides instance of DynamicPropertiesObject which provides access to the joint properties.
            </summary>
        </member>
        <member name="M:Xafari.BC.BulkEdit.BulkEditObject.Init(System.Collections.IList,DevExpress.ExpressApp.XafApplication,DevExpress.ExpressApp.IObjectSpace,Xafari.BC.BulkEdit.FieldsSelectMode,System.Boolean,System.Boolean)">
            <summary>
            Initializes current instance of <see cref="T:Xafari.BC.BulkEdit.BulkEditObject"/> object.
            </summary>
            <param name="selectedObjects">Selected objects list.</param>
            <param name="application">XafApplication instance.</param>
            <param name="objectSpace">Object Space of DynamicPropertiesObject</param>
            <param name="fieldsSelectMode">Fileds selection mode</param>
            <param name="readOnlyFieldsIsVisible">Whethet readonly fields shoulb be displayed.</param>
            <param name="objectFieldsPriority">Priority of displaying fields with the same name. If set to true, then class fields are displayed firstly.</param>
        </member>
        <member name="M:Xafari.BC.BulkEdit.BulkEditObject.InModel(DevExpress.ExpressApp.DC.ITypeInfo,DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
            Метод для выборки среди полей объекта тех, которые имеются в модели приложения. Аналогичным образом
            отсеиваются служебные поля объектов для DetailView.
            </summary>
            <param name="typeInfo"></param>
            <param name="memberInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEdit.BulkEditObject.CalculateType(System.Type)">
            <summary>
            Converts regular type to nullable one
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEdit.BulkEditObject.GetAttributesForPropertiy(Xafari.BC.BulkEdit.ContextInfo)">
            <summary>
            Определение списка аттрибутов для общего свойства.
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEdit.BulkEditObject.GetValueForBulk(Xafari.BC.BulkEdit.ContextInfo)">
            <summary>
            Для общего свойства проверяет список объектов. Если для всех объектов свойство имеет одно и тоже значение,
            то возвращает это значение. Иначе возвращает null.
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEdit.BulkEditObject.CheckAllowEditProperty(Xafari.BC.BulkEdit.ContextInfo)">
            <summary>
            Метод для проверки возможности редактирования свойства
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEdit.BulkEditObject.GetDisplayablePropertyName(Xafari.BC.BulkEdit.ContextInfo)">
            <summary>
            Определение отображаемого имени свойства. Считывает значение из модели приложения.
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.BulkEdit.BulkEditObject.SetCommonProperties">
            <summary>
            Определение общих свойств для списка объектов selectedObjects.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.BulkEdit.ContextInfo">
            <summary>
            Describes joint properties of different objects
            </summary>
        </member>
        <member name="T:Xafari.BC.BulkEdit.ContextInfoComparer">
            <summary>
            Compares two ContextInfo objects
            </summary>
        </member>
        <member name="T:Xafari.BC.BulkEdit.FieldsSelectMode">
            <summary>
            Fields selection mode
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.CommandAlreadyRegisteredException">
            <summary>
            The exception that occurs when you try to register in the register the command with the same name as an already registered team.
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.CommandBase">
            <summary>
            The base implementation of the command.
            </summary>
            <remarks>
            Can serve as the parent class in the implementation team.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Commands.CommandBase.Execute(System.Collections.Generic.IDictionary{System.String,System.Object},DevExpress.ExpressApp.XafApplication)">
            <summary>
            Executes the command implemented by the class.
            </summary>
            <param name="parameters">Command parameters as a set of key-value.</param>
            <param name="application">Link to the XAF application instance.</param>
        </member>
        <member name="M:Xafari.BC.Commands.CommandBase.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Performs validation of declared parameters.
            </summary>
            <param name="parameters">Command parameters as a set of key-value.</param>
            <remarks>
            In case of incorrect parameter generates an <see cref="T:System.ArgumentException"/>.
            </remarks>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Xafari.BC.Commands.CommandBase.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{Xafari.BC.Commands.CommandParameterDescription})">
            <summary>
            Performs validation of parameters.
            </summary>
            <param name="actual">Command parameters as a set of key-value.</param>
            <param name="declared">List of declared parameters.</param>
            <remarks>
            In case of incorrect parameter generates an <see cref="T:System.ArgumentException"/>.
            </remarks>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Xafari.BC.Commands.CommandBase.ExecuteCore(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            The implementation of execution the custom command.
            </summary>
            <param name="parameters">Command parameters as a set of key-value.</param>
        </member>
        <member name="P:Xafari.BC.Commands.CommandBase.Name">
            <summary>
            Gets name of the command.
            </summary>
            <remarks>
            Command name used to identify it in the application, search in the collection.
            The name should be brief and should not contain spaces. It should be possible to use it as a command line parameter.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Commands.CommandBase.Description">
            <summary>
            Description of the command.
            </summary>
            <remarks>
            Uses in the derivation of help by a command.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Commands.CommandBase.ParametersDescription">
            <summary>
            Description of the command parameters.
            </summary>
        </member>
        <member name="P:Xafari.BC.Commands.CommandBase.Application">
            <summary>
            The application, which run the command to execute.
            </summary>
        </member>
        <member name="P:Xafari.BC.Commands.CommandBase.Out">
            <summary>
            Designed to output the results of the work command.
            </summary>
        </member>
        <member name="M:Xafari.BC.Commands.CommandBase.GetShorName(System.Type)">
            <summary>
            Gets short name of specified command (if exists).
            </summary>
            <param name="commandClass">Type instance of a command.</param>
            <returns>Command short name.</returns>
            <remarks>
            Command short name can be specified by 
            </remarks>
        </member>
        <member name="T:Xafari.BC.Commands.CommandExtIOBase">
            <summary>
            The base implementation of the command with enhanced possibility input/output.
            </summary>
            <remarks>
            Can serve as the parent class in the implementation team.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Commands.CommandExtIOBase.Error">
            <summary>
            Represents a writer that can write error messages to error stream.
            </summary>
        </member>
        <member name="P:Xafari.BC.Commands.CommandExtIOBase.In">
            <summary>
            Represents a reader that read data from input stream as a sequential series of characters.
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.CommandParameterDescription">
            <summary>
            Provides a description of the command parameter.
            </summary>
        </member>
        <member name="M:Xafari.BC.Commands.CommandParameterDescription.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the class <see cref="T:Xafari.BC.Commands.CommandParameterDescription"/> by the name and by description of the command parameter.
            </summary>
            <param name="name">The name of the command parameter.</param>
            <param name="valueName">The name of the value of parameter.</param>
            <param name="description">The description of the command parameter.</param>
        </member>
        <member name="P:Xafari.BC.Commands.CommandParameterDescription.Name">
            <summary>
            The name of the parameter.
            </summary>
        </member>
        <member name="P:Xafari.BC.Commands.CommandParameterDescription.ValueName">
            <summary>
            The name of the value of parameter.
            </summary>
        </member>
        <member name="P:Xafari.BC.Commands.CommandParameterDescription.Description">
            <summary>
            The description of the parameter.
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.CommandParameterDescriptionEx">
            <summary>
            Provides a description of the command parameter.
            </summary>
        </member>
        <member name="M:Xafari.BC.Commands.CommandParameterDescriptionEx.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the class <see cref="T:Xafari.BC.Commands.CommandParameterDescription"/> by the name and by description of the command parameter.
            </summary>
            <param name="name">The name of the command parameter.</param>
            <param name="valueName">The name of the value of parameter.</param>
            <param name="description">The description of the command parameter.</param>
            <param name="isRequired">Specifies if the pararmeter is required.</param>
        </member>
        <member name="P:Xafari.BC.Commands.CommandParameterDescriptionEx.IsRequired">
            <summary>
            Is the pararmeter required.
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.CommandPurge">
            <summary>
            Deletes the objects marked as deleted from storage.
            </summary>
            <remarks>
            Calls IObjectSpace extension method PowerPurge defined in <see cref="T:Xafari.Utils.XpoPurgeHelper"/>.
            This command is intended to use with Xafari RunCmd tool.
            </remarks>
        </member>
        <member name="T:Xafari.BC.Commands.CommandRegistry">
            <summary>
            Registry of available commands.
            </summary>
        </member>
        <member name="M:Xafari.BC.Commands.CommandRegistry.#ctor">
            <summary>
            Creates an instance of the empty registry of commands.
            </summary>
        </member>
        <member name="M:Xafari.BC.Commands.CommandRegistry.#ctor(System.Collections.Generic.IEnumerable{DevExpress.ExpressApp.ModuleBase})">
            <summary>
            Creates an instance of the register of commands and registers all commands implemented in specified modules.
            </summary>
            <param name="modules">List of modules, among which the search is conducted commands.</param>
        </member>
        <member name="M:Xafari.BC.Commands.CommandRegistry.RegisterModuleCommands(Xafari.BC.Commands.ICommandEnumerator)">
            <summary>
            Registers in the registry commands implemented in the specified module.
            </summary>
            <param name="module">Module in which the search is conducted implementations teams.</param>
        </member>
        <member name="M:Xafari.BC.Commands.CommandRegistry.Register(Xafari.BC.Commands.ICommand)">
            <summary>
            Registers the command in the registry.
            </summary>
            <param name="command">Reference to an instance of the class implementing the command.</param>
            <remarks>If the command with the same name is already registered in the registry - an exception CommandAlreadyRegisteredException will be generated.</remarks>
            <exception cref="T:Xafari.BC.Commands.CommandAlreadyRegisteredException"></exception>
        </member>
        <member name="M:Xafari.BC.Commands.CommandRegistry.FindCommand(System.String)">
            <summary>
            Search the command with the specified name in the registry.
            </summary>
            <param name="name">Name of the command - field ICommand.<see cref="P:Xafari.BC.Commands.ICommand.Name"/></param>
            <returns>Returns a reference to the found command or null.</returns>
        </member>
        <member name="P:Xafari.BC.Commands.CommandRegistry.Commands">
            <summary>
            The commands which registered in the registry.
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.CommandShortNameAttribute">
            <summary>
            Specifies a command short name.
            </summary>
        </member>
        <member name="P:Xafari.BC.Commands.CommandShortNameAttribute.ShortName">
            <summary>
            Gets a command short name.
            </summary>
        </member>
        <member name="M:Xafari.BC.Commands.CommandShortNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xafari.BC.Commands.CommandShortNameAttribute"/>.
            </summary>
            <remarks>Creates and initializes an instance of the <see cref="T:Xafari.BC.Commands.CommandShortNameAttribute"/> class with the specified command short name.</remarks>
        </member>
        <member name="T:Xafari.BC.Commands.DummyReader">
            <summary>
            Used as a "stub".
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.DummyWriter">
            <summary>
            Used as a "stub".
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.IComandExtIO">
            <summary>
            Specifies the command with enhanced possibilities input/output.
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.ICommand">
            <summary>
            Specifies fields of description command and its parameters and the method of call command execution.
            </summary>
        </member>
        <member name="M:Xafari.BC.Commands.ICommand.Execute(System.Collections.Generic.IDictionary{System.String,System.Object},DevExpress.ExpressApp.XafApplication)">
            <summary>
            Executes the command implemented by the class.
            </summary>
            <param name="parameters">Command parameters as a set of key-value.</param>
            <param name="application">Link to the XAF application instance.</param>
        </member>
        <member name="P:Xafari.BC.Commands.ICommand.Name">
            <summary>
            Gets short name of the command.
            </summary>
            <remarks>
            Command name used to identify it in the application, search in the collection.
            The name should be brief and should not contain spaces. It should be possible to use it as a command line parameter.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Commands.ICommand.Description">
            <summary>
            Description of the command.
            </summary>
            <remarks>
            Uses in the derivation of help by a command.
            </remarks>
        </member>
        <member name="P:Xafari.BC.Commands.ICommand.ParametersDescription">
            <summary>
            Description of the command parameters.
            </summary>
        </member>
        <member name="T:Xafari.BC.Commands.ICommandEnumerator">
            <summary>
            Describes the field for access to the list of commands implemented by the custom module.
            </summary>
        </member>
        <member name="P:Xafari.BC.Commands.ICommandEnumerator.Commands">
            <summary>
            Provides access to the list of available commands in the module.
            </summary>
            <remarks>When listing should returning instances of classes that implement commands.</remarks>
        </member>
        <member name="T:Xafari.BC.ContextPropertyAttribute">
            <summary>
            Indicates that a property is the context property.
            </summary>
            <remarks>
            <para>Apply this attribute to a property which will be used as the context of the some predefined action.
            This action will be only applied to the objects which satisfy specified context match mode.
            Default mode is exact match the object type to the context property type. 
            Posible context match modes are defined by <see cref="T:Xafari.BC.ContextTypeMatchMode"/> enumeration.
            <code>
            public class CalcOrderTotal
            {
               [ContextProperty]
               public Order Order { get; set; }
               ...
            }
            </code></para>
            <para>The context property may be of a generic collection type. In this case action may be applied 
            to list of objects.
            <code>
            public class CalcOrderTotalList 
            {
                [ContextProperty]
                public IEnumerable&lt;Order&gt; Orders { get; set; }
                ...
            }
            </code></para>
            </remarks>
        </member>
        <member name="P:Xafari.BC.ContextPropertyAttribute.TypeMatchMode">
            <summary>
            Provides the actual type match mode value.
            </summary>
        </member>
        <member name="P:Xafari.BC.ContextPropertyAttribute.ObjectsCriteria">
            <summary>
            Provides the actual match criteria value.
            </summary>
        </member>
        <member name="P:Xafari.BC.ContextPropertyAttribute.ObjectsCriteriaMode">
            <summary>
            Provides the actual criteria match mode.
            </summary>
        </member>
        <member name="P:Xafari.BC.ContextPropertyAttribute.ViewType">
            <summary>
            Provides the actual kind of a context view.
            </summary>
            <value>Value is defined by the <see cref="T:Xafari.BC.ContextViewType"/> enumeration.</value>
            <remarks>
            Specifies the kind of a context view to which the context will be applied.
            Types of views are defined by <see cref="T:Xafari.BC.ContextViewType"/> enumeration.
            <code>
            public class CalcOrderTotal  
            {
                [ContextProperty(ViewType = ContextViewType.DetailView)]
                public Order Order { get; set; }
                ...
            }
            </code>
            This code shows that the context will be used only with detail views.
            </remarks>
        </member>
        <member name="M:Xafari.BC.ContextPropertyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref='T:Xafari.BC.ContextPropertyAttribute'/> class.
            </summary>
        </member>
        <member name="T:Xafari.BC.ContextViewType">
            <summary>
            Contains values specifying the the kind of a context view to which the context will be applicable.
            </summary>
            <remarks>
            Members of the enumeration specify the kind of view: Any, ListView, DetailView.
            </remarks>
        </member>
        <member name="F:Xafari.BC.ContextViewType.Any">
            <summary>
            The context will be applicable to any kind of view.
            </summary>
        </member>
        <member name="F:Xafari.BC.ContextViewType.DetailView">
            <summary>
            The context will be applicable only to detail views.
            </summary>
        </member>
        <member name="F:Xafari.BC.ContextViewType.ListView">
            <summary>
            The context will be applicable only to list views.
            </summary>
        </member>
        <member name="F:Xafari.BC.ContextViewType.None">
            <summary>
            View type is not specified.
            </summary>
        </member>
        <member name="M:Xafari.BC.ContextViewTypeExtensions.IsMatchesToView(Xafari.BC.ContextViewType,DevExpress.ExpressApp.View)">
            <summary>
            Determines whether the specified view is matches for the context view type.
            </summary>
            <param name="cvt">Context view type.</param>
            <param name="view">Verifiable view.</param>
            <returns>True if mathces.</returns>
        </member>
        <member name="T:Xafari.BC.ContextTypeMatchMode">
            <summary>
            The Context Property Type match modes.
            </summary>
        </member>
        <member name="F:Xafari.BC.ContextTypeMatchMode.ObjectTypeOrSuccessors">
            <summary>
            The Context Property Type must match a Object Type and all the Context Property Type successors. It is the default value.
            </summary>
        </member>
        <member name="F:Xafari.BC.ContextTypeMatchMode.ExactObjectType">
            <summary>
            The Context Property Type must exactly match a Object Type.
            </summary>
        </member>
        <member name="F:Xafari.BC.ContextTypeMatchMode.SuccessorsOnly">
            <summary>
            The Context Property Type must match all the Context Property Type successors.
            </summary>
        </member>
        <member name="M:Xafari.BC.ContextTypeMatchModeExtensions.IsContextTypeMatches(Xafari.BC.ContextTypeMatchMode,System.Type,System.Type)">
            <summary>
            Determines whether the specified <paramref name="testContextType"/> is matches for the <paramref name="actualContextType"/> in accordance with <paramref name="matchMode"/>.
            </summary>
            <param name="matchMode">Context type match mode.</param>
            <param name="testContextType">Context type which is tested.</param>
            <param name="actualContextType">Actual context type.</param>
            <returns>True if mathces.</returns>
        </member>
        <member name="F:Xafari.BC.CustomAppearances.CreateCustomAppearanceRuleViewController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.CustomAppearances.CreateCustomAppearanceRuleViewController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.CustomAppearances.CreateCustomAppearanceRuleViewController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Xafari.BC.CustomAppearances.CustomAppearanceViewController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.CustomAppearances.CustomAppearanceViewController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.CustomAppearances.CustomAppearanceViewController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Xafari.BC.DataAccessorTypes">
            <summary>
            Specifies enabled data accessor types
            </summary>
        </member>
        <member name="F:Xafari.BC.DataAccessorTypes.ObjectSpace">
            <summary>
            DataAccessor type for <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
        </member>
        <member name="F:Xafari.BC.DataAccessorTypes.UnitOfWork">
            <summary>
            DataAccessor type for <see cref="F:Xafari.BC.DataAccessorTypes.UnitOfWork"/>.
            </summary>
        </member>
        <member name="T:Xafari.BC.DataAccessorService">
            <summary>
            Provides alternative members for data access.
            </summary>
            <remarks>
            Provides full compatibility with eXtensions Framework. 
            Additionaly provides ability to customize data access methods.
            </remarks>
        </member>
        <member name="T:Xafari.BC.DataAccessorService.DataAccessor">
            <summary>
            Base type for <see cref="T:Xafari.BC.DataAccessorService"/> service space context.
            </summary>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.CreateObject``1">
            <summary>
            Creates the instance of entity <typeparamref name="TEntity"/>.
            </summary>
            <typeparam name="TEntity">Entity type</typeparam>
            <returns></returns>
            <remarks>
            Finds the real entity type and create the instance of founded type.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.CreateObject(System.Type)">
            <summary>
            Creates the instance of entity <paramref name="entityType"/>.
            </summary>
            <param name="entityType">Entity type</param>
            <returns></returns>
            <remarks>
            Finds the real entity type and create the instance of founded type.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.GetObjects``1(DevExpress.Data.Filtering.CriteriaOperator,System.Collections.Generic.IList{DevExpress.Xpo.SortProperty},System.Boolean)">
            <summary>
            Returns an <see cref="T:System.Collections.IList"/> collection of <typeparamref name="T"/> objects via the specified <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection.</param>
            <param name="sorting">The set of properties specifing sorting.</param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns></returns>
            <remarks>
            Default <paramref name="criteria"/> value is <b>null</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects(System.Type)"/>.
            Default <paramref name="sorting"/> value is <b>null</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Collections.Generic.IList{DevExpress.Xpo.SortProperty},System.Boolean)"/>.
            Default <paramref name="inTransaction"/> value is <b>false</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects(System.Type,DevExpress.Data.Filtering.CriteriaOperator)"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.GetObjects``1(DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Returns an <see cref="T:System.Collections.IList"/> collection of <typeparamref name="T"/> objects via the specified <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns></returns>
            <remarks>
            Default <paramref name="criteria"/> value is <b>null</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects``1"/>.
            Default <paramref name="inTransaction"/> value is <b>false</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects``1(DevExpress.Data.Filtering.CriteriaOperator)"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.GetObjects(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Collections.Generic.IList{DevExpress.Xpo.SortProperty},System.Boolean)">
            <summary>
            Returns an <see cref="T:System.Collections.IList"/> collection of objects of specified <paramref name="entityType"/>, 
            retrieved to the current Object Space and filters and sorts according to the specified criteria and set of sort properties.
            </summary>
            <param name="entityType">The type of the objects to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection.</param>
            <param name="sorting">The set of properties specifing sorting.</param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns></returns>
            <remarks>
            Default <paramref name="criteria"/> value is <b>null</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects(System.Type)"/>.
            Default <paramref name="sorting"/> value is <b>null</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Collections.Generic.IList{DevExpress.Xpo.SortProperty},System.Boolean)"/>.
            Default <paramref name="inTransaction"/> value is <b>false</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects(System.Type,DevExpress.Data.Filtering.CriteriaOperator)"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.GetObjects(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Returns an <see cref="T:System.Collections.IList"/> collection of objects of specified <paramref name="entityType"/>, 
            retrieved to the current Object Space and filtered according to the specified criteria. 
            </summary>
            <param name="entityType">The type of the objects to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns></returns>
            <remarks>
            Default <paramref name="criteria"/> value is <b>null</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects(System.Type)"/>.
            Default <paramref name="inTransaction"/> value is <b>false</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.GetObjects(System.Type,DevExpress.Data.Filtering.CriteriaOperator)"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.FindObject``1(DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Searches for the first object of the type designated by the specified generic type parameter, matching the specified criteria.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns>An object which is the first persistent object which matches the specified criteria.</returns>
            <remarks>
            Default <paramref name="inTransaction"/> value is <b>true</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.FindObject``1(DevExpress.Data.Filtering.CriteriaOperator)"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.FindObject(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Searches for the first object of the specified type, matching the specified criteria.
            </summary>
            <param name="entityType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns>An object which represents the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if there is no persistent object which matches the criteria.</returns>
            <remarks>
            Default <paramref name="inTransaction"/> value is <b>true</b> like <see cref="M:DevExpress.ExpressApp.BaseObjectSpace.FindObject(System.Type,DevExpress.Data.Filtering.CriteriaOperator)"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.Evaluate``1(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Evaluates the specified expression for objects of the specified type.
            </summary>
            <typeparam name="TEntity">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated. </typeparam>
            <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate. </param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria will be used to evaluate the expression.</param>
            <param name="inTransaction">Take into account all in-memory object changes.</param>
            <returns>The value evaluated.</returns>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.Evaluate(System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
            Evaluates the specified expression for objects of the specified type.
            </summary>
            <param name="objectType">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated.</param>
            <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate. </param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria will be used to evaluate the expression.</param>
            <returns>The value evaluated.</returns>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.SelectData``1(DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,System.Boolean)">
            <summary>
            Retrieves objects from a session using the specified query parameters.
            </summary>
            <typeparam name="TEntity">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated. </typeparam>
            <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved. </param>
            <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties. </param>
            <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects. </param>
            <param name="selectDeleted"><b>true</b> to include the persistent objects marked as deleted into the list; otherwise, <b>false</b>.</param>
            <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list. </param>
            <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved. </param>
            <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects. </param>
            <param name="inTransaction">Take into account all in-memory object changes.</param>
            <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
            <remarks>
            Not supports EntityFramework.
            </remarks>
        </member>
        <member name="M:Xafari.BC.DataAccessorService.DataAccessor.SelectDataAsync``1(DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,DevExpress.Xpo.AsyncSelectDataCallback)">
            <summary>
            Asynchronously retrieves entities from an object space, using the specified query parameters.
            </summary>
            <typeparam name="TEntity">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated. </typeparam>
            <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved. </param>
            <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties. </param>
            <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects. </param>
            <param name="selectDeleted"><b>true</b> to include the persistent objects marked as deleted into the list; otherwise, <b>false</b>.</param>
            <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list. </param>
            <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved. </param>
            <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects. </param>
            <param name="callback">A <see cref="T:DevExpress.Xpo.AsyncSelectDataCallback"/> delegate to be called after the list has been retrieved. This list is passed as a parameter to callback. </param>
            <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
            <remarks>
            Not supports EntityFramework.
            </remarks>
        </member>
        <member name="E:Xafari.BC.DataAccessorService.DataAccessor.CustomizeDataAccess">
            <summary>
            Raised to customize data queries.
            </summary>
        </member>
        <member name="E:Xafari.BC.DataAccessorService.DataAccessor.CustomGetObjectsQuery">
            <summary>
            Raised to customize data queries.
            </summary>
        </member>
        <member name="P:Xafari.BC.DataAccessorService.DataAccessor.DisposeOwnerOnDispose">
            <summary>
            Indicates then parent <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> or <see cref="T:DevExpress.Xpo.UnitOfWork"/>> will be disposed on current object dispose.
            </summary>
        </member>
        <member name="T:Xafari.BC.DataAccessorService.ObjectSpaceDataAccessor">
            <summary>
            Implements <see cref="T:Xafari.BC.DataAccessorService.DataAccessor"/> for <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
        </member>
        <member name="T:Xafari.BC.DataAccessorService.UnitOfWorkDataAccessor">
            <summary>
            Implements <see cref="T:Xafari.BC.DataAccessorService.DataAccessor"/> for <see cref="P:Xafari.BC.DataAccessorService.UnitOfWorkDataAccessor.UnitOfWork"/>.
            </summary>
        </member>
        <member name="E:Xafari.BC.DataAccessorService.CustomizeDataAccess">
            <summary>
            Occurs to customize data queries.
            </summary>
        </member>
        <member name="E:Xafari.BC.DataAccessorService.CustomizeCollectionSource">
            <summary>
            Occurs to customize colection source for data query operations.
            </summary>
        </member>
        <member name="E:Xafari.BC.DataAccessorService.CustomGetObjectsQuery">
            <summary>
            Occurs to create custom objects query.
            </summary>
        </member>
        <member name="T:Xafari.BC.CustomizeCollectionSourceEventArgs">
            <summary>
            Event arguments for <see cref="E:Xafari.BC.DataAccessorService.CustomizeCollectionSource"/> and <see cref="E:Xafari.BC.DataAccessorService.DataAccessor.CustomizeCollectionSource"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.CustomizeCollectionSourceEventArgs.CollectionSource">
            <summary>
            Gets collection source to cusomize.
            </summary>
        </member>
        <member name="T:Xafari.BC.CustomGetObjectsQueryEventArgs">
            <summary>
            Event arguments for <see cref="E:Xafari.BC.DataAccessorService.CustomGetObjectsQuery"/> and <see cref="E:Xafari.BC.DataAccessorService.DataAccessor.CustomGetObjectsQuery"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.CustomGetObjectsQueryEventArgs.DataAccessor">
            <summary>
            This <see cref="T:Xafari.BC.DataAccessorService.DataAccessor"/> raises event.
            </summary>
        </member>
        <member name="P:Xafari.BC.CustomGetObjectsQueryEventArgs.DataType">
            <summary>
            Data type to customize query.
            </summary>
        </member>
        <member name="P:Xafari.BC.CustomGetObjectsQueryEventArgs.Query">
            <summary>
            Query to customize.
            </summary>
        </member>
        <member name="P:Xafari.BC.CustomGetObjectsQueryEventArgs.InTransaction">
            <summary>
            Gets <b>inTransaction</b> value.
            </summary>
        </member>
        <member name="T:Xafari.BC.CustomizeDataAccessEventArgs">
            <summary>
            Event arguments for <see cref="E:Xafari.BC.DataAccessorService.CustomizeDataAccess"/> and <see cref="E:Xafari.BC.DataAccessorService.DataAccessor.CustomizeDataAccess"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.CustomizeDataAccessEventArgs.DataType">
            <summary>
            Data type to customize query.
            </summary>
        </member>
        <member name="P:Xafari.BC.CustomizeDataAccessEventArgs.CriteriaOperator">
            <summary>
            Criteria to customize.
            </summary>
        </member>
        <member name="P:Xafari.BC.CustomizeDataAccessEventArgs.MethodName">
            <summary>
            Specifies method where event is raised.
            </summary>
        </member>
        <member name="P:Xafari.BC.CustomizeDataAccessEventArgs.InTransaction">
            <summary>
            Gets <b>inTransaction</b> value.
            </summary>
        </member>
        <member name="T:Xafari.BC.CustomizeSelectDataEventArgs">
            <summary>
            Event arguments for <see cref="E:Xafari.BC.DataAccessorService.CustomizeDataAccess"/> and <see cref="E:Xafari.BC.DataAccessorService.DataAccessor.CustomizeDataAccess"/>
            in <see cref="M:Xafari.BC.DataAccessorService.DataAccessor.SelectData``1(DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,System.Boolean)"/> and in <see cref="M:Xafari.BC.DataAccessorService.DataAccessor.SelectDataAsync``1(DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,DevExpress.Xpo.AsyncSelectDataCallback)"/> methods.
            </summary>
        </member>
        <member name="T:Xafari.BC.AliveTypeAttribute">
            <summary>
            Apply this attribute to class or interface to indicates about alive type.
            </summary>
        </member>
        <member name="M:Xafari.BC.Utils.ITryCast.TryCastTo(System.Type,System.Boolean)">
            <summary>
            Implements custom class casting.
            </summary>
            <param name="typeToCast"></param>
            <param name="throwException"></param>
            <returns></returns>
        </member>
        <member name="T:Xafari.BC.Utils.XafariListMorpher`2">
            <summary>
            Special <see cref="T:DevExpress.Xpo.Helpers.ListMorpher`2"/> where constraint that <see cref="!:T"/> is convertible to <see cref="!:I"/> realized in constructor and check alive types.
            </summary>
            <typeparam name="I">Convert to this type</typeparam>
            <typeparam name="T">Convert from this type</typeparam>
        </member>
        <member name="T:Xafari.BC.Utils.XafariObjectFormatter">
            <summary>
            Add to <see cref="T:DevExpress.Persistent.Base.ObjectFormatter"/> ability to use indexes for property types <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IDictionary"/>
            and indexed properties. Also supports formatting result.
            </summary>
        </member>
        <member name="M:Xafari.BC.Utils.XafariObjectFormatter.Initialize">
            <summary>
            Initializes <see cref="T:Xafari.BC.Utils.XafariObjectFormatter"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.Xpo.XafariModelDifference.HistoryCreate">
            <summary>
            Object created.
            </summary>
        </member>
        <member name="P:Xafari.BC.Xpo.XafariModelDifference.HistoryModify">
            <summary>
            Object modified.
            </summary>
        </member>
        <member name="T:Xafari.BC.Editors.Localization.Resources.EditorsResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Xafari.BC.Editors.Localization.Resources.EditorsResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Xafari.BC.Editors.Localization.Resources.EditorsResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Xafari.BC.Editors.Localization.Resources.EditorsResources.DragDropHierarchyNodeListEditor">
            <summary>
              Looks up a localized string similar to Continue to move this node?.
            </summary>
        </member>
        <member name="P:Xafari.BC.Editors.Localization.Resources.EditorsResources.MoveHierarchyNodeListEditor">
            <summary>
              Looks up a localized string similar to Moving the node.
            </summary>
        </member>
        <member name="T:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter">
            <summary>
            Represents adapter bound to the <see cref="!:Xafari.Editors.Win.WinTreeListEditor"/> and <see cref="!:Xafari.Editors.Web.ASPxHierarchyNodeListEditor"/>/>.
            </summary>
            <remarks>
            <see cref="T:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter"/> adapts objects implemented interface <see cref="T:Xafari.BC.HierarchicalData.IHierarchyNode"/> for <see cref="!:Xafari.Editors.Win.WinTreeListEditor"/> and <see cref="!:Xafari.Editors.Web.ASPxHierarchyNodeListEditor"/>
            </remarks>
        </member>
        <member name="M:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.#ctor(Xafari.Base.ICurrentHierarchyProvider,DevExpress.ExpressApp.CollectionSourceBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter"/>.
            </summary>
            <param name="currentHierarchyName">A <see cref="T:Xafari.Base.ICurrentHierarchyProvider"/> object that specifies the hierarchy name.</param>
        </member>
        <member name="M:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.HasChildren(System.Object)">
            <summary>
            Gets whether or not the node has a child node(s).
            </summary>
            <remarks>The <see cref="M:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.HasChildren(System.Object)"/> method returns true if the node's Nodes collection is not empty.</remarks>
            <param name="nodeObject">An <see cref="T:System.Object"/> that specifies the node.</param>
            <returns>true if the node has a child node(s); otherwise, false.</returns>
        </member>
        <member name="M:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.GetParent(System.Object)">
            <summary>
            Gets parent node.
            </summary>
            <remarks>The <see cref="M:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.GetParent(System.Object)"/> method returns false if the <see cref="!:nodeObject"/> object equals null.</remarks>
            <param name="nodeObject">An <see cref="T:System.Object"/> that specifies the node.</param>
            <returns>Parent node for node <paramref name="nodeObject"/>.</returns>
        </member>
        <member name="M:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.GetChildren(System.Object)">
            <summary>
            Gets children nodes.
            </summary>
            <remarks>The <see cref="M:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.GetChildren(System.Object)"/> method returns null if the <see cref="!:nodeObject"/> object equals null.</remarks>
            <param name="nodeObject">An <see cref="T:System.Object"/> that specifies the node.</param>
            <returns>Children nodes for node <paramref name="nodeObject"/>.</returns>
        </member>
        <member name="M:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.GetDisplayPropertyValue(System.Object)">
            <summary>
            Gets display property value.
            </summary>
            <remarks>The <see cref="M:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.GetDisplayPropertyValue(System.Object)"/> method returns null if the <see cref="!:nodeObject"/> object equals null.</remarks>
            <param name="nodeObject">An <see cref="T:System.Object"/> that specifies the node.</param>
            <returns>Display property value for node <paramref name="nodeObject"/>.</returns>
        </member>
        <!-- Проигнорирован некорректный комментарий XML для члена "P:Xafari.BC.Editors.HierarchyNodeInterfaceAdapter.DisplayPropertyName" -->
        <member name="F:Xafari.BC.Editors.MultipleHierarchyViewController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.Editors.MultipleHierarchyViewController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.Editors.MultipleHierarchyViewController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Xafari.BC.LogicControllers.LogicControllerBase">
            <summary>
            Base class for <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/>.
            </summary>
            <remarks><b>Note:</b> Do not use this class as a base for your logic processor. Use for this <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/>.</remarks>
        </member>
        <member name="P:Xafari.BC.LogicControllers.LogicControllerBase.TargetType">
            <summary>
            Gets type of business object target.
            </summary>
        </member>
        <member name="T:Xafari.BC.LogicControllers.LogicControllerBase.CreateLogicControllerInstance">
            <summary>
            Create the instance of logic processor.
            </summary>
            <returns>A <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase"/> that represents the instance of logic processor.</returns>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerBase.OnDeactivated(Xafari.BC.LogicControllers.LogicControllerViewController)">
            <summary>
            Processing logic placed in this method when <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/>.<c>OnDeactivated()</c> executing.
            </summary>
            <param name="controller">Instance of the <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/> that calls this method.</param>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerBase.OnActivated(Xafari.BC.LogicControllers.LogicControllerViewController)">
            <summary>
            Processing logic placed in this method when <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/>.<c>OnActivated()</c> executing.
            </summary>
            <param name="controller">Instance of the <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/> that calls this method.</param>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerBase.OnViewControlsCreated(Xafari.BC.LogicControllers.LogicControllerViewController)">
            <summary>
            Processing logic placed in this method when <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/>.<c>OnViewControlsCreated()</c> executing.
            </summary>
            <param name="controller">Instance of the <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/> that calls this method.</param>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerBase.OnDeactivated">
            <summary>
            Processing logic placed in this method when <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/>.<c>OnDeactivated()</c> executing.
            </summary>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerBase.OnActivated">
            <summary>
            Processing logic placed in this method when <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/>.<c>OnActivated()</c> executing.
            </summary>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerBase.OnViewControlsCreated">
            <summary>
            Processing logic placed in this method when <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/>.<c>OnViewControlsCreated()</c> executing.
            </summary>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerBase.TypeIsRequired(DevExpress.ExpressApp.View)">
            <summary>
            Method returns true if a object type in a <paramref name="view"/> is equals to type of business object.
            </summary>
            <param name="view"><see cref="!:http://documentation.devexpress.com/#Xaf/clsDevExpressExpressAppViewtopic">View</see> whose a need to check object type.</param>
            <returns>Return a true if object type of view is required to processing logic.</returns>
        </member>
        <member name="T:Xafari.BC.LogicControllers.LogicControllerBase`1">
            <summary>
            Inherite this class to implement your logic controller.
            </summary>
            <typeparam name="T">Type of business object which a need in additional logic.</typeparam>
        </member>
        <member name="T:Xafari.BC.LogicControllers.LogicControllerBase`2">
            <summary>
            Inherite this class to implement your logic controller.
            </summary>
            <typeparam name="T">Type of business object which a need in additional logic.</typeparam>
            <typeparam name="TView"></typeparam>
        </member>
        <member name="T:Xafari.BC.LogicControllers.LogicControllerService">
            <summary>
            This class provide service of LogicControllers feature, like a collection of LogicControllers,
            method for registration <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/> and method for creating an instance of the <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/>.
            </summary>
        </member>
        <member name="P:Xafari.BC.LogicControllers.LogicControllerService.LogicControllers">
            <summary>
            Gets a collection of the <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/> controllers, where key is a <see cref="T:System.Type"/> of <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/>
            implementation and value is a <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerService.Register``1(System.Type,Xafari.BC.LogicControllers.LogicControllerBase.CreateLogicControllerInstance)">
            <summary>
            See <see cref="M:Xafari.BC.LogicControllers.LogicControllerService.Register``1"/>
            </summary>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerService.Register``1">
            <summary>
            Registers <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase"/> specified by <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/> implementation which will be registred.</typeparam>
            <remarks>
            For register the instance of the <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/> in a system you must override
            Setup(DevExpress.ExpressApp.ApplicationModulesManager modulesManager) method in your application module
            and call there <see cref="M:Xafari.BC.LogicControllers.LogicControllerService.Register``1"/>.
            </remarks>
            <example>
            <code>
            public sealed partial class MyModule : DevExpress.ExpressApp.ModuleBase
            {
            	...
            	...
            	
            	public override void Setup(ApplicationModulesManager moduleManager)
            	{
            		base.Setup(moduleManager);
            		LogicControllerService.Instance.Register&lt;EmployeeLogicController$rt;();
            	}
            }
            </code>
            </example>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerService.Register(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Register specified logic controller types.
            </summary>
            <param name="logicControllerTypes"></param>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerService.Register(Xafari.BC.LogicControllers.LogicControllerBase)">
            <summary>
            Registers specified <paramref name="logicController"/>.
            </summary>
        </member>
        <member name="F:Xafari.BC.LogicControllers.LogicControllerService.EmptyList">
            <summary>
            Empty logic controllers list.
            </summary>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerService.CreateLogicControllers(Xafari.BC.LogicControllers.LogicControllerViewController)">
            <summary>
            This method create the instances of the <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase"/>.
            </summary>
            <returns>An instances of the <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase"/>.</returns>
            <remarks><b>Note:</b> For internal tasks, you dont need to use this method.</remarks>
        </member>
        <member name="M:Xafari.BC.LogicControllers.LogicControllerService.CollectLogicControllerTypesFromAssembly(System.Reflection.Assembly)">
            <summary>
            Collect all logic controller types in specified assembly.
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="T:Xafari.BC.LogicControllers.LogicControllerViewController">
            <summary>
            This controller manage the feature of the LogicControllers for business object.
            </summary>
            <remarks>
            <para> This controller process a logic which described in <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/> implementation of business object.
            <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/> implementation must be registered
            via <see cref="M:Xafari.BC.LogicControllers.LogicControllerService.Register``1"/> method.</para>
            <para> During processing metods OnActivated(), OnDeactivate(), OnViewControlsCreated()
            of this controller - calling the same methods in <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase`1"/> class
            of the corresponding business object.</para>
            </remarks>
        </member>
        <member name="T:Xafari.BC.ModelDifferences.FileUserModelDifferenceStore">
            <summary>
            Store User Model Differences for each user separately.
            </summary>
        </member>
        <member name="M:Xafari.BC.ModelDifferences.FileUserModelDifferenceStoreFactory.CreateUserModelDifferenceStoreCore(Xafari.BC.ModelDifferences.ModelDifferenceStoreParamsEventArgs)">
            <summary>
            Creates User Model Differences Store with specified parameters.
            </summary>
        </member>
        <member name="T:Xafari.BC.ModelDifferences.ModelDifferenceStoreFactory">
            <summary>
            Model differences store factory base class.
            </summary>
        </member>
        <member name="E:Xafari.BC.ModelDifferences.ModelDifferenceStoreFactory.CustomizeUserModelDifferenceStoreParams">
            <summary>
            Occurs when User Model Differences Store is created.
            </summary>
        </member>
        <member name="E:Xafari.BC.ModelDifferences.ModelDifferenceStoreFactory.CustomizeModelDifferenceStoreParams">
            <summary>
            Occurs when Applicationr Model Differences Store is created.
            </summary>
        </member>
        <member name="M:Xafari.BC.ModelDifferences.ModelDifferenceStoreFactory.CreateUserModelDifferenceStore">
            <summary>
            Creates User Model Differences Store.
            </summary>
        </member>
        <member name="M:Xafari.BC.ModelDifferences.ModelDifferenceStoreFactory.CreateModelDifferenceStore">
            <summary>
            Creates Application Model Differences Store.
            </summary>
        </member>
        <member name="M:Xafari.BC.ModelDifferences.ModelDifferenceStoreFactory.GetUserModelDifferenceStoreParams">
            <summary>
            Gets parameters to create User Model Differences Store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.ModelDifferences.ModelDifferenceStoreFactory.GetModelDifferenceStoreParams">
            <summary>
            Gets parameters to create Application Model Differences Store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.ModelDifferences.ModelDifferenceStoreFactory.CreateUserModelDifferenceStoreCore(Xafari.BC.ModelDifferences.ModelDifferenceStoreParamsEventArgs)">
            <summary>
            Creates User Model Differences Store with specified parameters.
            </summary>
        </member>
        <member name="M:Xafari.BC.ModelDifferences.ModelDifferenceStoreFactory.CreateModelDifferenceStoreCore(Xafari.BC.ModelDifferences.ModelDifferenceStoreParamsEventArgs)">
            <summary>
            Creates Application Model Differences Store with specified parameters.
            </summary>
        </member>
        <member name="M:Xafari.BC.ModelDifferences.ModelDifferenceStoreParamsEventArgs.AddContext(System.String)">
            <summary>
            Extends context identifier of ModellDifferences that allows distinguishing model differences designed for different purposes using the same database.
            </summary>
            <param name="context">A string which is the context identifier segment.</param>
        </member>
        <member name="P:Xafari.BC.ModelDifferences.ModelDifferenceStoreParamsEventArgs.ContextId">
            <summary>
            Specifies the context identifier of the current ModelDifference object that allows distinguishing model differences designed for different purposes using the same database.
            </summary>
            <value>
            A string which is the context identifier.
            </value>
        </member>
        <member name="T:Xafari.BC.ModelDifferences.ModelDifferenceStoreManager">
            <summary>
            Manage Model Differences Store creation.
            </summary>
        </member>
        <member name="P:Xafari.BC.ModelDifferences.ModelDifferenceStoreManager.Instance">
            <summary>
            Gets the manager instance.
            </summary>
        </member>
        <member name="P:Xafari.BC.ModelDifferences.ModelDifferenceStoreManager.ModelDifferenceStoreFactory">
            <summary>
            Actual Modelel Differences Store factory instance.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.DynamicPropertiesCustomTypeDescriptor">
            <summary>
            Служебный класс.
            Используется для описания динамических свойств объекта для Reflection.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.DynamicPropertiesHelper">
            <summary>
            Utility class.
            Provides methods to generate temporary classes for objects with dynamic properties.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.DynamicPropertiesHelper.DynamicPropertiesModelLoader">
            <summary>
            For internal use. This class loads copy of Application Model with all ModellDiffs asynchronously.
            </summary>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.DynamicPropertiesHelper.#ctor">
            <summary>
            DynamicPropertiesHelper constructor.
            </summary>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.DynamicPropertiesHelper.CreateDynamicPropertiesObject``1(Xafari.BC.DynamicProperties.DynamicPropertyList,System.Object)">
            <summary>
            Create instance of <see cref="T:Xafari.BC.DynamicProperties.DynamicPropertiesObject"/> descendant.
            </summary>
            <typeparam name="T">Base type for new dynamic object.</typeparam>
            <param name="props">Dynamic properties collection.</param>
            <param name="key">New type hash key.</param>
            <returns>New object with dynamic properties.</returns>
            <remarks>This method creates new instance of object with dynamic properties. Also it creates new type descendant from specified type and initialize it with 
            properties. Than register it with new <see cref="T:System.ComponentModel.TypeDescriptor"/>. Key used to find generated new type. By default it can be null and than it will be created
            by combination of type full name and all its properties with its types.</remarks>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.DynamicPropertiesHelper.CreateDynamicPropertiesObject(System.Type,Xafari.BC.DynamicProperties.DynamicPropertyList,System.Object)">
            <summary>
            Create instance of <see cref="T:Xafari.BC.DynamicProperties.DynamicPropertiesObject"/> descendant.
            </summary>
            <param name="type">Base type for new dynamic object.</param>
            <param name="props">Dynamic properties collection.</param>
            <param name="key">New type hash key.</param>
            <returns>New object with dynamic properties.</returns>
            <remarks>This method creates new instance of object with dynamic properties. Also it creates new type descendant from specified type and initialize it with 
            properties. Than register it with new <see cref="T:System.ComponentModel.TypeDescriptor"/>. Key used to find generated new type. By default it can be null and than it will be created
            by combination of type full name and all its properties with its types.</remarks>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.DynamicPropertiesHelper.CreateDetailView(DevExpress.ExpressApp.IObjectSpace,System.Boolean,Xafari.BC.DynamicProperties.DynamicPropertiesObject,System.Action{DevExpress.ExpressApp.Model.IModelDetailView})">
            <summary>
            Creates specific detail view by model in memory.
            </summary>
            <param name="objectSpace">ObjectSpace for new view.</param>
            <param name="isRoot">Root view or not.</param>
            <param name="dpo">Current object for view.</param>
            <param name="modelHandler">Custom model customizer.</param>
            <returns>New view.</returns>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.DynamicPropertiesHelper.GetClassModel(System.Type)">
            <summary>
            Method TempDetailViewHelper.CreateTempDetailViewModel(IModelApplicarion, Type) provides only Model created by generators without ModelDiffs of modules.
            Therefore own copy of Model with loaded ModelDiffs is used. Model is loaded by DynamicPropertiesModelLoader.
            classModel is created at runtime and node generators needed for DetailView are executed.
            </summary>
            <param name="dynamicType">New type.</param>
            <returns>New model class.</returns>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.DynamicPropertiesHelper.ModelLoader">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.DynamicPropertiesObject">
            <summary>
            Неперсистентный класс с динамическим набором свойств.
            </summary>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.DynamicPropertiesObject.CreateObject``1(Xafari.BC.DynamicProperties.DynamicPropertyList,System.Object)">
            <summary>
            Create instance of <see cref="T:Xafari.BC.DynamicProperties.DynamicPropertiesObject"/> descendant.
            </summary>
            <typeparam name="T">Base type for new dynamic object.</typeparam>
            <param name="props">Dynamic properties collection.</param>
            <param name="key">New type hash key.</param>
            <returns>New object with dynamic properties.</returns>
            <remarks>This method creates new instance of object with dynamic properties. Also it creates new type descendant from specified type and initialize it with 
            properties. Than register it with new <see cref="T:System.ComponentModel.TypeDescriptor"/>. Key used to find generated new type. By default it can be null and than it will be created
            by combination of type full name and all its properties with its types.</remarks>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.DynamicPropertiesObject.CreateDetailView(DevExpress.ExpressApp.IObjectSpace,System.Boolean,System.Action{DevExpress.ExpressApp.Model.IModelDetailView})">
            <summary>
            Creates specific detail view by model in memory.
            </summary>
            <param name="objectSpace">ObjectSpace for new view.</param>
            <param name="isRoot">Root view or not.</param>
            <param name="modelHandler">Custom model customizer.</param>
            <returns>New view.</returns>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.DynamicPropertiesObjectProvider">
            <summary>
            Служебный класс.
            Используется для расшерения списка свойств объекта для Reflection.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.DynamicProperty">
            <summary>
            Службный класс.
            Реализует динамическое свойство во время исполнения.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.DynamicPropertyDescriptor">
            <summary>
            Служебный класс.
            Используется для описания динамического свойства для Reflection.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.DynamicPropertyList">
            <summary>
            Реализует список динамических свойств объекта.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.IDynamicProperty">
            <summary>
            Описывает абстрактное динамическое свойство объекта.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.IInstancePropertiesSupport">
            <summary>
            Используется для объявления объекта с собственными свойствами.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IInstancePropertiesSupport.InstanceProperties">
            <summary>
            Возвращает список собственных свойств объекта.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IInstancePropertiesSupport.Dpo">
            <summary>
            Служебное свойство. 
            Используется для работы с собственными свойства в UI.
            В общем случае содержит ссылку объект с динамическими свойствами, построенные для собственных свойств.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.IInstanceProperty">
            <summary>
            Объявляет собственное свойство объекта.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.InstanceDynamicProperty">
            <summary>
            Служебный класс.
            Провайдер интерфейса <see cref="T:Xafari.BC.DynamicProperties.IDynamicProperty"/>.
            Используется для реализации работы с динамическими свойствами у бизнес-объектов с интерфейсом <see cref="T:Xafari.BC.DynamicProperties.IInstancePropertiesSupport"/>.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.IPersistentPropertyValue">
            <summary>
            Base members of persistent properties.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IPersistentPropertyValue.PropertyInfo">
            <summary>
            Persistent property info.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IPersistentPropertyValue.ValueString">
            <summary>
            String value storage.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IPersistentPropertyValue.ValueFloat">
            <summary>
            Float value storage.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IPersistentPropertyValue.ValueDouble">
            <summary>
            Double value storage.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IPersistentPropertyValue.ValueDecimal">
            <summary>
            Decimal value storage.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IPersistentPropertyValue.ValueInteger">
            <summary>
            Integer value storage.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IPersistentPropertyValue.ValueDateTime">
            <summary>
            DateTime value storage.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IPersistentPropertyValue.ValueBoolean">
            <summary>
            Boolean value storage.
            </summary>
        </member>
        <member name="P:Xafari.BC.DynamicProperties.IPersistentPropertyValue.ValueType">
            <summary>
            Type value storage.
            </summary>
        </member>
        <member name="T:Xafari.BC.DynamicProperties.PersistentPropertyValueHelper">
            <summary>
            Helper for persistent properties.
            </summary>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.PersistentPropertyValueHelper.SetValue(Xafari.BC.DynamicProperties.IPersistentPropertyValue,System.Object)">
            <summary>
            Set current property value.
            </summary>
            <param name="instance">Current property.</param>
            <param name="value">New property value.</param>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.PersistentPropertyValueHelper.GetValue(Xafari.BC.DynamicProperties.IPersistentPropertyValue)">
            <summary>
            Get current property value.
            </summary>
            <param name="instance">Current property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:Xafari.BC.DynamicProperties.PersistentPropertyValueHelper.OnValueChanged(Xafari.BC.DynamicProperties.IPersistentPropertyValue)">
            <summary>
            Fire value changed event for property owner.
            </summary>
            <param name="instance">Current property.</param>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.FindClassifierItem``1(DevExpress.ExpressApp.IObjectSpace,System.String,System.Boolean)">
            <summary>
            Finds specified by code classifier item.
            </summary>
            <typeparam name="TClassifierItem">Target classifier item type.</typeparam>
            <param name="objectSpace">Object space</param>
            <param name="code">Code to find classifier item</param>
            <param name="inTransaction">if true, find modified and new objects in object space.</param>
            <returns>Returns first classfier item with code <paramref name="code"/> or null.</returns>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.FindClassifierItem``1(Xafari.BC.DataAccessorService.DataAccessor,System.String,System.Boolean)">
            <summary>
            Finds specified by code classifier item.
            </summary>
            <typeparam name="TClassifierItem">Target classifier item type.</typeparam>
            <param name="dataAccessor">Object space</param>
            <param name="code">Code to find classifier item</param>
            <param name="inTransaction">if true, find modified and new objects in object space.</param>
            <returns>Returns first classfier item with code <paramref name="code"/> or null.</returns>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.Xafari(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
            Supplies additional methods for <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> to operate with specified <paramref name="objectSpace"/>.
            </summary>
            <param name="objectSpace"></param>
            <returns></returns>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.Xafari(DevExpress.Xpo.UnitOfWork)">
            <summary>
            Supplies additional methods for <see cref="T:DevExpress.Xpo.UnitOfWork"/> to operate with specified <paramref name="unitOfWork"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.BC(Xafari.Helpers.TypeHelper)">
            <summary>
            Supplies additional methods for <see cref="T:System.Type"/> to operate with specified <paramref name="type"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.BC(Xafari.Helpers.ITypeInfoHelper)">
            <summary>
            Supplies additional methods for <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> to operate with specified <paramref name="typeInfo"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.BC(Xafari.Helpers.SessionHelper)">
            <summary>
            Supplies additional methods for <see cref="T:DevExpress.Xpo.Session"/> to operate with specified <paramref name="session"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.BC(Xafari.Helpers.ViewControllerHelper)">
            <summary>
            Supplies additional methods for <see cref="T:DevExpress.ExpressApp.ViewController"/> to operate with specified <paramref name="viewController"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.BC``1(Xafari.Helpers.ObjectHelper{``0})">
            <summary>
            Supplies additional methods for <typeparamref name="T"/> instance to operate with specified <paramref name="obj"/>.
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariExtensions.GetLogicController``1(Xafari.Helpers.FrameHelper)">
            <summary>
            Gets specified <see cref="T:Xafari.BC.LogicControllers.LogicControllerBase"/> 
            </summary>
            <typeparam name="T"></typeparam>
            <returns>Returns a specified logic Controller. Returns null if logic controller is not found or <see cref="T:Xafari.BC.LogicControllers.LogicControllerViewController"/> was deactivated.</returns>
        </member>
        <member name="M:Xafari.BC.ProxyCollectionExtension.Xafari(DevExpress.ExpressApp.ProxyCollection)">
            <summary>
            Returns <see cref="T:Xafari.Helpers.ProxyCollectionHelper"/> for <see cref="T:DevExpress.ExpressApp.ProxyCollection"/> instance.
            </summary>
            <param name="proxyCollection">Instance of <see cref="T:DevExpress.ExpressApp.ProxyCollection"/> type.</param>
            <returns>Xafari helper for <see cref="T:DevExpress.ExpressApp.ProxyCollection"/> instance.</returns>
        </member>
        <member name="T:Xafari.BC.Files.IFileLibrary">
            <summary>
            Библиотека файлов
            </summary>
        </member>
        <member name="P:Xafari.BC.Files.IFileLibrary.ParentLibrary">
            <summary>
            Вышестоящая библиотека
            </summary>
        </member>
        <member name="P:Xafari.BC.Files.IFileLibrary.SubLibraries">
            <summary>
            Вложенные библиотеки
            </summary>
        </member>
        <member name="P:Xafari.BC.Files.IFilesContainer.Files">
            <summary>
            Перечень вложенных файлов
            </summary>
        </member>
        <member name="T:Xafari.BC.Files.IFileAttachment">
            <summary>
            Вложение
            </summary>
        </member>
        <member name="T:Xafari.BC.IClassifierItem">
            <summary>
            Describes the properties and methods of classifier.
            </summary>
        </member>
        <member name="T:Xafari.BC.IDocument">
            <summary>
            Describes the properties and methods of document.
            </summary>
        </member>
        <member name="P:Xafari.BC.IDocument.DocDate">
            <summary>
            Gets and sets document date.
            </summary>
        </member>
        <member name="T:Xafari.BC.ICreateDateSupport">
            <summary>
            Describes object creation date.
            </summary>
        </member>
        <member name="P:Xafari.BC.ICreateDateSupport.CreationDate">
            <summary>
            Gets and sets object date.
            </summary>
        </member>
        <member name="T:Xafari.BC.IStatusSupport">
            <summary>
            Describes the properties and methods for using object status.
            </summary>
        </member>
        <member name="P:Xafari.BC.IStatusSupport.CurrentStatus">
            <summary>
            Gets and sets object status.
            </summary>
        </member>
        <member name="P:Xafari.BC.IStatusSupport.LastStatusModifyUser">
            <summary>
            Gets and sets user name, that last modify status.
            </summary>
        </member>
        <member name="P:Xafari.BC.IStatusSupport.LastStatusModifyDate">
            <summary>
            Gets and sets the date of the last status change.
            </summary>
        </member>
        <member name="P:Xafari.BC.IStatusSupport.StatusModify">
            <summary>
            Information about the last status change.
            </summary>
        </member>
        <member name="T:Xafari.BC.IStatusSupportEx">
            <summary>
            Describes additional properties and methods for using object status.
            </summary>
        </member>
        <member name="P:Xafari.BC.IStatusSupportEx.ExpirationDate">
            <summary>
            Gets and sets the date from which the business object will be considered obsolete and status changed to "Archive".
            </summary>
        </member>
        <member name="P:Xafari.BC.IStatusSupportEx.ActualityPeriodStart">
            <summary>
            Contains and sets the start date relevance.
            </summary>
        </member>
        <member name="P:Xafari.BC.IStatusSupportEx.ActualityPeriodEnd">
            <summary>
            Contains and sets the end date relevance.
            </summary>
        </member>
        <member name="P:Xafari.BC.XafariBCModule.ObjectSetGlobalContexts">
            <summary>
            Contains current global context for <see cref="T:Xafari.BC.Data.XPObjectSet"/> usage.
            </summary>
            <remarks>
            For example, global context may be modified by current branch or other current parameters.
            </remarks>
        </member>
        <member name="P:Xafari.BC.XafariBCModule.IsGenerateCustomMemberExts">
            <summary>
            Indicates that custom member 'Exts' must be added for <see cref="T:Xafari.BC.AliveTypeAttribute"/>.
            By default, <b>false</b>.
            </summary>
            <remarks>
            Use this property if you need to switch off 'Exts' during design time.
            See example how to do it
            <example>
            Override <see cref="M:DevExpress.ExpressApp.ModuleBase.Setup(DevExpress.ExpressApp.ApplicationModulesManager)"/>
            <code>
            public override void Setup(ApplicationModulesManager moduleManager)
            {
            	base.Setup(moduleManager);
            	moduleManager.Modules.FindModule&lt;XafariBCModule&gt;().IsGenerateCustomMemberExts = true;
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:Xafari.BC.XafariBCModule.Application_CreateCustomUserModelDifferenceStore(System.Object,DevExpress.ExpressApp.CreateCustomModelDifferenceStoreEventArgs)">
            <summary>
            The <see cref="T:Xafari.BC.ModelDifferences.ModelDifferenceStoreManager"/> manages creation of user model differences storages.
            If necessary, the storage can be changed by set a storage factory instance in the manager during application initialization.
            </summary>
        </member>
        <member name="F:Xafari.BC.XafariBCModule.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariBCModule.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.XafariBCModule.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Xafari.BC.TermOwnerAttribute">
            <summary>
            Specifies a property that have owner object. 
            For example, aggregated objects have any owner object.
            </summary>
        </member>
        <member name="F:Xafari.BC.TermOwnerAttribute.Name">
            <summary>
            Term Owner name.
            </summary>
        </member>
        <member name="T:Xafari.BC.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.BusinessOperationHasNoDefaultImplementation">
            <summary>
              Looks up a localized string similar to Business operation &quot;{0}&quot; has no default implementation..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.ContextCanBeGenericCollectionOnly">
            <summary>
              Looks up a localized string similar to List context can be generic collection type only, but its type is &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.ContextIsNotList">
            <summary>
              Looks up a localized string similar to Context property is not list property..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.ContextPropertyUndefined">
            <summary>
              Looks up a localized string similar to Context property is undefined..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.NotContextBusinessOperation">
            <summary>
              Looks up a localized string similar to Business operation &quot;{0}&quot; does not have the context..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.OnlyGenericCollectionsSupported">
            <summary>
              Looks up a localized string similar to Only collections of generic type are supported..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.OnlyOneGenericTypeParameterSupported">
            <summary>
              Looks up a localized string similar to Only collections with one generic type parameter are supported..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.Optional">
            <summary>
              Looks up a localized string similar to Optional.
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.ParameterIsRequired">
            <summary>
              Looks up a localized string similar to Parameter {0} is required..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.TraceWarningBusinessOperationNotSpecified">
            <summary>
              Looks up a localized string similar to Business Operations.  Business Operation is not specified for the implementation {0}. Implementation is ignored..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.TraceWarningTypeRedeclared">
            <summary>
              Looks up a localized string similar to Business Operations. The Type {0} is declared again (check property BusinessOperationTypes in module classes)..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.TraceWarningUnknownBusinessOperation">
            <summary>
              Looks up a localized string similar to Business Operations. For the implementation {0} unknown Business Operation {1} is specified. Implementation is ignored (heck property BusinessOperationTypes in module classes)..
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.UnknownParameter">
            <summary>
              Looks up a localized string similar to Unknown parameter &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Xafari.BC.Properties.Resources.UnsuppoertedListType">
            <summary>
              Looks up a localized string similar to Unsupported list type &quot;{0}&quot;..
            </summary>
        </member>
        <member name="M:Xafari.BC.Parameters.ICalculatedParameter.GetCalculatedValue(System.Object)">
            <summary>
            Возвращает расчитанное значение параметра для объекта <i>context</i>.
            </summary>
            <param name="context">Параметр для расчета значения.</param>
            <returns></returns>
        </member>
        <member name="P:Xafari.BC.Parameters.ICalculatedParameter.Item(System.Object)">
            <summary>
            Возвращает расчитанное значение параметра для объекта <i>context</i>.
            </summary>
            <param name="context">Параметр для расчета значения.</param>
            <returns></returns>
            <remarks>
            Требование. При реализации использовать метод <see cref="M:Xafari.BC.Parameters.ICalculatedParameter.GetCalculatedValue(System.Object)"/>.
            </remarks>
        </member>
        <member name="M:Xafari.BC.Parameters.ParametersHelper.CalculateValue(Xafari.BC.Parameters.ICalculatedParameter,System.Object)">
            <summary>
            Возвращает расчитанное значение параметра в зависимости от параметра.
            </summary>
            <param name="param"></param>
            <param name="context"></param>
            <returns></returns>
            <remarks>
            Если первый символ в поле <see cref="!:ICalculatedParameter.Value"/> '=', то считается, что далее следует
            форматированное значение в нотации <see cref="T:DevExpress.Persistent.Base.ObjectFormatter"/>.
            Нотация расширена и позволяет использовать индексаторы для списков и словарей.
            </remarks>
        </member>
        <member name="F:Xafari.BC.Parameters.ParametersViewController.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Xafari.BC.Parameters.ParametersViewController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Xafari.BC.Parameters.ParametersViewController.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Xafari.BC.RegisterEntity`1">
            <summary>
            Helper class for XF Entity registration
            </summary>
            <typeparam name="TEntity">Type of XF Entity</typeparam>
        </member>
        <member name="T:Xafari.BC.StateTypes">
            <summary>
            States types.
            </summary>
        </member>
        <member name="T:Xafari.BC.IState">
            <summary>
            State.
            </summary>
        </member>
        <member name="P:Xafari.BC.IState.Status">
            <summary>
            Change status to selected.
            </summary>
        </member>
        <member name="P:Xafari.BC.IState.ModifyStatus">
            <summary>
            Allow to modify status.
            </summary>
        </member>
        <member name="P:Xafari.BC.IState.ReadOnly">
            <summary>
            Is state ReadOnly.
            </summary>
        </member>
        <member name="T:Xafari.BC.IAppearanceProvider">
            <summary>
            Describes appearances collection.
            </summary>
        </member>
        <member name="P:Xafari.BC.IAppearanceProvider.Appearances">
            <summary>
            Appearances for current object.
            </summary>
        </member>
        <member name="T:Xafari.BC.IStateSupport">
            <summary>
            Describes the properties and methods for using object states.
            </summary>
        </member>
        <member name="T:Xafari.BC.IStateSupportUI">
            <summary>
            Describes the properties and methods for using object states.
            </summary>
        </member>
        <member name="T:Xafari.BC.IStateListProvider">
            <summary>
            Describes states collection.
            </summary>
        </member>
        <member name="P:Xafari.BC.IStateListProvider.States">
            <summary>
            States for current object.
            </summary>
        </member>
        <member name="T:Xafari.BC.ICurrentStateSupport">
            <summary>
            Describes properties and methods for using current state in objects.
            </summary>
        </member>
        <member name="P:Xafari.BC.ICurrentStateSupport.CurrentState">
            <summary>
            Current object state.
            </summary>
        </member>
        <member name="E:Xafari.BC.ICurrentStateSupport.CurrentStateChanged">
            <summary>
            Current state changed event.
            </summary>
        </member>
        <member name="T:Xafari.BC.CurrentStateChangedEventArgs">
            <summary>
            Object state changed event args.
            </summary>
        </member>
        <member name="P:Xafari.BC.CurrentStateChangedEventArgs.CurrentState">
            <summary>
            New state.
            </summary>
        </member>
        <member name="T:Xafari.BC.IIsDefaultSupport">
            <summary>
            Allow to use default state.
            </summary>
        </member>
        <member name="P:Xafari.BC.IIsDefaultSupport.IsDefault">
            <summary>
            Gets a value indicating that current state is default.
            </summary>
        </member>
        <member name="T:Xafari.BC.XafariModuleUpdater">
            <summary>
            Xafari module updater. Provides Xafari services safe work in update database operation.
            </summary>
            <remarks>
            You have to use <see cref="M:Xafari.BC.XafariModuleUpdater.SafeUpdateDatabaseAfterUpdateSchema"/> instead <see cref="M:Xafari.BC.XafariModuleUpdater.UpdateDatabaseAfterUpdateSchema"/>.
            
            Uses <see cref="T:Xafari.BC.Services.ObjectSpaceFactory"/> service to provide ability to use application model and services in update database operation.
            All services which create own <see cref="T:DevExpress.ExpressApp.IObjectSpace"/> by <see cref="T:Xafari.BC.Services.ObjectSpaceFactory"/> will safe work in update database operation.
            Method <see cref="M:Xafari.BC.XafariModuleUpdater.SafeUpdateDatabaseAfterUpdateSchema"/> always invoked when <see cref="T:DevExpress.ExpressApp.XafApplication"/> setup is complete.
            <see cref="P:Xafari.Helpers.XafApplicationHelper.IsSetupComplete"/> used to check then <see cref="T:DevExpress.ExpressApp.XafApplication"/> setup is complete.
            
            <para>
            If <see cref="T:Xafari.BC.Services.ObjectSpaceFactory"/> service is null, executes <see cref="M:Xafari.BC.XafariModuleUpdater.SafeUpdateDatabaseAfterUpdateSchema"/> directly.
            </para>
            <para>
            Method <see cref="M:Xafari.BC.XafariModuleUpdater.UpdateDatabaseBeforeUpdateSchema"/> always empty.
            If you want to implement <see cref="M:Xafari.BC.XafariModuleUpdater.UpdateDatabaseBeforeUpdateSchema"/> method create separately class derived from <see cref="T:DevExpress.ExpressApp.Updating.ModuleUpdater"/>.
            </para>
            </remarks>
        </member>
        <member name="E:Xafari.BC.XafariModuleUpdater.CollectObjectSpaceFactories">
            <summary>
            Collects instances which implement IObjectSpaceFactory interface.
            </summary>
        </member>
        <member name="P:Xafari.BC.XafariModuleUpdater.ObjectSpaceFactories">
             <summary>
            Collection of objects which implement IObjectSpaceFactory interface.
             </summary>
        </member>
        <member name="M:Xafari.BC.XafariModuleUpdater.UpdateDatabaseBeforeUpdateSchema">
            <summary>
            Always empty
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariModuleUpdater.UpdateDatabaseAfterUpdateSchema">
            <summary>
            Performs a database update after the database schema is updated.
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariModuleUpdater.SafeUpdateDatabaseAfterUpdateSchema">
            <summary>
            Performs a database update after the database schema is updated.
            </summary>
        </member>
        <member name="M:Xafari.BC.XafariModuleUpdater.SafeUpdateDatabaseAfterLogon">
            <summary>
            Performs a database update after apllication logged on.
            </summary>
        </member>
        <member name="T:Xafari.BC.StatusHelper">
            <summary>
             Реализует методы работы со статусами объектов.
            </summary>
        </member>
        <member name="M:Xafari.BC.StatusHelper.InitObject(Xafari.BC.IStatusSupport)">
            <summary>
            Инициализирует объект, после его создания.
            Используется в констукторе объекта.
            </summary>
            <param name="obj">Объект.</param>
        </member>
        <member name="M:Xafari.BC.StatusHelper.SetStatus(Xafari.BC.IStatusSupport,Xafari.BC.StatusTypes)">
            <summary>
            Синхронизирует значения свойств по работе со статусами
            при изменении статуса.
            </summary>
            <param name="obj">Объект.</param>
            <param name="value">Новый статус.</param>
        </member>
        <member name="T:Xafari.BC.StatusTypes">
            <summary>
             Типы статусов.
            </summary>
        </member>
        <member name="F:Xafari.BC.StatusTypes.Draft">
            <summary>
            Черновик
            </summary>
        </member>
        <member name="F:Xafari.BC.StatusTypes.Published">
            <summary>
            Опубликован
            </summary>
        </member>
        <member name="F:Xafari.BC.StatusTypes.Archive">
            <summary>
            Архивный
            </summary>
        </member>
        <member name="T:Xafari.AliveTypeExtensions">
            <summary>
            Provides extension methods to operate with entities.
            </summary>
        </member>
        <member name="M:Xafari.AliveTypeExtensions.CreateEntity``1(DevExpress.ExpressApp.IObjectSpace)">
            <summary>
            Creates the instance of entity <typeparamref name="TEntity"/>.
            </summary>
            <typeparam name="TEntity">Entity type</typeparam>
            <param name="objectSpace">Object space</param>
            <returns></returns>
            <remarks>
            Finds the real entity type and create the instance of founded type.
            </remarks>
        </member>
        <member name="M:Xafari.AliveTypeExtensions.CreateEntity(DevExpress.ExpressApp.IObjectSpace,System.Type)">
            <summary>
            Creates the instance of entity <paramref name="entityType"/>.
            </summary>
            <param name="objectSpace">Object space</param>
            <param name="entityType">Entity type</param>
            <returns></returns>
            <remarks>
            Finds the real entity type and create the instance of founded type.
            </remarks>
        </member>
        <member name="M:Xafari.AliveTypeExtensions.GetEntities``1(DevExpress.ExpressApp.IObjectSpace,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Returns an <see cref="T:System.Collections.IList"/> collection of <typeparamref name="TEntity"/> objects via the specified <see cref="T:DevExpress.ExpressApp.IObjectSpace"/>.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="objectSpace"></param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns></returns>
        </member>
        <member name="M:Xafari.AliveTypeExtensions.GetEntities(DevExpress.ExpressApp.IObjectSpace,System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Returns an <see cref="T:System.Collections.IList"/> collection of objects of specified <paramref name="entityType"/>, 
            retrieved to the current Object Space and filtered according to the specified criteria. 
            </summary>
            <param name="objectSpace"></param>
            <param name="entityType">The type of the objects to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns></returns>
        </member>
        <member name="M:Xafari.AliveTypeExtensions.FindEntity``1(DevExpress.ExpressApp.IObjectSpace,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Searches for the first object of the type designated by the specified generic type parameter, matching the specified criteria.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="objectSpace"></param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns>An object which is the first persistent object which matches the specified criteria.</returns>
        </member>
        <member name="M:Xafari.AliveTypeExtensions.FindEntity(DevExpress.ExpressApp.IObjectSpace,System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Searches for the first object of the specified type, matching the specified criteria.
            </summary>
            <param name="objectSpace"></param>
            <param name="entityType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> which specifies the criteria for object selection. </param>
            <param name="inTransaction"><b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>. </param>
            <returns>An object which represents the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if there is no persistent object which matches the criteria.</returns>
        </member>
        <member name="M:Xafari.AliveTypeExtensions.Evaluate``1(DevExpress.ExpressApp.IObjectSpace,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
            Evaluates the specified expression for objects of the specified type.
            </summary>
            <typeparam name="TEntity">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated. </typeparam>
            <param name="objectSpace"></param>
            <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate. </param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria will be used to evaluate the expression.</param>
            <param name="inTransaction">Take into account all in-memory object changes.</param>
            <returns>The value evaluated.</returns>
        </member>
        <member name="M:Xafari.AliveTypeExtensions.SelectData``1(DevExpress.ExpressApp.IObjectSpace,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,System.Boolean)">
            <summary>
            Retrieves objects from a session using the specified query parameters.
            </summary>
            <typeparam name="TEntity">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated. </typeparam>
            <param name="objectSpace">Target object space.</param>
            <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved. </param>
            <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties. </param>
            <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects. </param>
            <param name="selectDeleted"><b>true</b> to include the persistent objects marked as deleted into the list; otherwise, <b>false</b>.</param>
            <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list. </param>
            <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved. </param>
            <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects. </param>
            <param name="inTransaction">Take into account all in-memory object changes.</param>
            <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
        </member>
        <member name="M:Xafari.AliveTypeExtensions.SelectDataAsync``1(DevExpress.ExpressApp.IObjectSpace,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,DevExpress.Xpo.AsyncSelectDataCallback)">
            <summary>
            Asynchronously retrieves entities from an object space, using the specified query parameters.
            </summary>
            <typeparam name="TEntity">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated. </typeparam>
            <param name="objectSpace">Target object space.</param>
            <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
            <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved. </param>
            <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties. </param>
            <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects. </param>
            <param name="selectDeleted"><b>true</b> to include the persistent objects marked as deleted into the list; otherwise, <b>false</b>.</param>
            <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list. </param>
            <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved. </param>
            <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects. </param>
            <param name="callback">A <see cref="T:DevExpress.Xpo.AsyncSelectDataCallback"/> delegate to be called after the list has been retrieved. This list is passed as a parameter to callback. </param>
            <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
        </member>
        <member name="T:Xafari.Base.TreeNodePersistentHelper`1">
            <summary>
            A utility class to implement the persistence of hierarchy.
            </summary>
            <typeparam name="TNode"></typeparam>
        </member>
        <member name="T:Xafari.Base.SessionExtensions">
            <summary>
            Extension methods for Session class.
            </summary>
        </member>
        <member name="M:Xafari.Base.SessionExtensions.IsDeletedObject(DevExpress.Xpo.Session,System.Object)">
            <summary>
            Determines whether the current object is deleted.
            </summary>
            <param name="session">Session.</param>
            <param name="obj">Check state of current object.</param>
            <returns>True if object is deleted and false in other cases.</returns>
        </member>
        <member name="M:Xafari.Base.SessionExtensions.GetKeyValueAsString(DevExpress.Xpo.Session,System.Object)">
            <summary>
            Get string representation of object key.
            </summary>
            <param name="session">Session.</param>
            <param name="obj">Object which contains current key.</param>
            <returns>String representation of object key.</returns>
        </member>
        <member name="M:Xafari.Base.SessionExtensions.Session(System.Object,System.Boolean)">
            <summary>
            Returns <see cref="T:DevExpress.Xpo.Session"/> for specified object.
            </summary>
            <param name="obj">Specifies object provided <see cref="T:DevExpress.Xpo.Session"/>.</param>
            <param name="forceException"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">If <paramref name="obj"/> does not implement <see cref="T:DevExpress.Xpo.Helpers.ISessionProvider"/>.</exception>
        </member>
        <member name="T:Xafari.Base.TypeExtensions">
            <summary>
            Type extensions.
            </summary>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetHierarchies(System.Type)">
            <summary>
            Get available hieratchies for type.
            </summary>
            <param name="type">Type.</param>
            <returns>Available hierarchies for current type.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetNodeNameMember(System.Type,System.String)">
            <summary>
            Get IMemberInfo that contains attribute with hierarchy name.
            </summary>
            <param name="type">Type.</param>
            <param name="hierarchyName">Selected hierarchy name.</param>
            <returns>IMemberInfo with selected hierarchy.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetParentMember(System.Type,System.String)">
            <summary>
            Get IMemberInfo that describes parent property for selected hierarchy.
            </summary>
            <param name="type">Type.</param>
            <param name="hierarchyName">Selected hierarchy name.</param>
            <returns>IMemberInfo for parent property.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetChildrenMember(System.Type,System.String)">
            <summary>
            Get IMemberInfo that describes children property for selected hierarchy.
            </summary>
            <param name="type">Type.</param>
            <param name="hierarchyName">Selected hierarchy name.</param>
            <returns>IMemberInfo for children property.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetChildrenMembers(System.Type,System.String)">
            <summary>
            Get IMemberInfo collection that describes children properties for selected hierarchy.
            </summary>
            <param name="type">Type.</param>
            <param name="hierarchyName">Selected hierarchy name.</param>
            <returns>IMemberInfo collection for children properties.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetHierarchyMember``1(System.Type,System.String)">
            <summary>
            Get IMemberInfo that contains specified attribute.
            </summary>
            <typeparam name="TAttribute">Attribute type.</typeparam>
            <param name="type">Type.</param>
            <param name="hierarchyName">Selected hierarchy name.</param>
            <returns>IMemberInfo with specified attribute.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetTermMember``1(System.Type,System.Func{``0,System.Boolean})">
            <summary>
            Get IMeberInfo for property decorated with term attribute.
            </summary>
            <typeparam name="TAttribute">Term attribute type.</typeparam>
            <param name="type">Type.</param>
            <param name="comparer">Comparer.</param>
            <returns>IMemberInfo with specified term attribute.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetTermMember(System.Type,System.String,System.Func{Xafari.BC.TermAttribute,System.Boolean})">
            <summary>
            Get IMeberInfo for property decorated with term attribute.
            </summary>
            <param name="type">Type.</param>
            <param name="termName">Term attribute name.</param>
            <param name="comparer">Comparer.</param>
            <returns>IMemberInfo with specified term attribute.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetTermMember``1(DevExpress.ExpressApp.DC.ITypeInfo,System.Func{``0,System.Boolean})">
            <summary>
            Get IMeberInfo for property decorated with term attribute.
            </summary>
            <typeparam name="TAttribute">Term attribute type.</typeparam>
            <param name="type">Type.</param>
            <param name="comparer">Comparer.</param>
            <returns>IMemberInfo with specified term attribute.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetValueByTerm``2(``0,System.String)">
            <summary>
            Get value from member decorated with specified term attribute.
            </summary>
            <typeparam name="TValue">Member value type.</typeparam>
            <typeparam name="T">Target object type.</typeparam>
            <param name="obj">Object instance.</param>
            <param name="termName">Term attribute name.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetValueByTerm``2(``0,DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
            Get value from term member.
            </summary>
            <typeparam name="TValue">Member value type.</typeparam>
            <typeparam name="T">Target object type.</typeparam>
            <param name="obj">Object instance.</param>
            <param name="termMember">Term member.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetValueByTerm``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Get value for member implemented by term.
            </summary>
            <typeparam name="TValue">Member value type.</typeparam>
            <typeparam name="T">Target object type.</typeparam>
            <param name="obj">Object instance.</param>
            <param name="property">Term specified by this property.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetListValueByTerm``2(``0,System.String)">
            <summary>
            Get list of values from member decorated with specified term attribute.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <typeparam name="T">Target object type.</typeparam>
            <param name="obj">Object instance.</param>
            <param name="termName">Term attribute name.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetListValueByTerm``2(``0,DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
            Get list of values from term member.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <typeparam name="T">Target object type.</typeparam>
            <param name="obj">Object instance.</param>
            <param name="termMember">Term member.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetListValueByTerm``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IList{``1}}})">
            <summary>
            Get list of values for member implemented by term.
            </summary>
            <typeparam name="TDetails">List of current type.</typeparam>
            <typeparam name="T">Target object type.</typeparam>
            <param name="obj">Object instance.</param>
            <param name="property">Term specified by this property.</param>
            <returns>List of objects.</returns>
            <remarks>
            Used if term name the as property name.
            </remarks>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.SetValueByTerm``2(``0,System.String,``1)">
            <summary>
            Set value to member with specified term attribbute.
            </summary>
            <typeparam name="TValue">New value type.</typeparam>
            <typeparam name="T">Target object type.</typeparam>
            <param name="obj">Object instance.</param>
            <param name="termName">Term name.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.SetValueByTerm``2(``0,DevExpress.ExpressApp.DC.IMemberInfo,``1)">
            <summary>
            Set value to member with specified term attribbute.
            </summary>
            <typeparam name="TValue">New value type.</typeparam>
            <typeparam name="T">Target object type.</typeparam>
            <param name="obj">Object instance.</param>
            <param name="termMember">Term member.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.SetValueByTerm``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Set value to member with specified term attribbute.
            </summary>
            <typeparam name="TValue">New value type.</typeparam>
            <typeparam name="T">Target object type.</typeparam>
            <param name="obj">Object instance.</param>
            <param name="property">Term specified by this property.</param>
            <param name="value">New value.</param>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.GetValueExt(DevExpress.ExpressApp.DC.IMemberInfo,System.Object)">
            <summary>
            Get value by IMemberInfo according to weak references.
            </summary>
            <param name="memberInfo">Current IMemberInfo.</param>
            <param name="instance">Object that contains member described by IMemberInfo.</param>
            <returns>Member value.</returns>
        </member>
        <member name="M:Xafari.Base.TypeExtensions.SetValueExt(DevExpress.ExpressApp.DC.IMemberInfo,System.Object,System.Object)">
            <summary>
            Set value by IMemberInfo according to weak references.
            </summary>
            <param name="memberInfo">Current IMemberInfo.</param>
            <param name="instance">Object that contains member described by IMemberInfo.</param>
            <param name="value">New member value.</param>
        </member>
        <member name="T:Xafari.Base.ObjectSpaceUsingExtensions">
            <summary>
            Extend ObjectSpace usage functionality.
            </summary>
        </member>
        <member name="M:Xafari.Base.ObjectSpaceUsingExtensions.StrategyDependencyCode(Xafari.Base.IObjectSpaceFactory,System.Object,System.Action{DevExpress.ExpressApp.IObjectSpace})">
            <summary>
            Using ObjectSpace in dependency of choosen strategy.
            </summary>
            <param name="factory">Factory which implements IObjectSpaceFactory interface.</param>
            <param name="obj">Object which ObjectSpace will be used.</param>
            <param name="action">Delegated code.</param>
        </member>
        <member name="M:Xafari.Base.ObjectSpaceUsingExtensions.StrategyDependencyCode(Xafari.Base.IObjectSpaceFactory,System.Func{DevExpress.ExpressApp.IObjectSpace},System.Action{DevExpress.ExpressApp.IObjectSpace})">
            <summary>
            Using ObjectSpace in dependency of choosen strategy.
            </summary>
            <param name="factory">Factory which implements IObjectSpaceFactory interface.</param>
            <param name="findObjectSpaceFunc">Specific strategy.</param>
            <param name="action">Delegated code.</param>
        </member>
        <member name="M:Xafari.Base.ObjectSpaceUsingExtensions.BulkCode(Xafari.Base.IObjectSpaceFactory,DevExpress.ExpressApp.IObjectSpace,System.Action{DevExpress.ExpressApp.IObjectSpace})">
            <summary>
            Executes user's code in specific ObjectSpace,
            which will be created by user's strategy.
            </summary>
            <param name="factory">Factory which implements IObjectSpaceFactory interface.</param>
            <param name="rootObjectSpace">ObjectSpace in which delegated code will be executed.</param>
            <param name="action">Delegated code.</param>
        </member>
        <member name="M:Xafari.Base.ObjectSpaceUsingExtensions.BulkCode(System.Collections.Generic.IEnumerable{Xafari.Base.IObjectSpaceFactory},DevExpress.ExpressApp.IObjectSpace,System.Action{DevExpress.ExpressApp.IObjectSpace})">
            <summary>
            Executes user's code in specific ObjectSpace,
            which will be created by user's strategy.
            </summary>
            <param name="factories">Factories which implement IObjectSpaceFactory interface.</param>
            <param name="rootObjectSpace">ObjectSpace in which delegated code will be executed.</param>
            <param name="action">Delegated code.</param>
        </member>
        <member name="M:Xafari.Base.IObjectSpaceFactory.CreateObjectSpace">
            <summary>
            Create new ObjectSpace.
            </summary>
            <returns>IObjectSpace objectSpace.</returns>
        </member>
        <member name="T:Xafari.Base.ObjectSpaceFactoryStrategy">
            <summary>
            ObjectSpace creating strategy.
            </summary>
        </member>
        <member name="F:Xafari.Base.ObjectSpaceFactoryStrategy.Nested">
            <summary>
            NestedObjectSpace will be used.
            </summary>
        </member>
        <member name="F:Xafari.Base.ObjectSpaceFactoryStrategy.Root">
            <summary>
            Root ObjectSpace will be used.
            </summary>
        </member>
    </members>
</doc>
